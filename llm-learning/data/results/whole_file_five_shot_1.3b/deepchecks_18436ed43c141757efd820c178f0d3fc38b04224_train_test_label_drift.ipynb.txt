```python
    ## Example: Using the `DecisionTreeRegressor` from sklearn

    # Import necessary libraries
    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    from sklearn.tree import DecisionTreeRegressor

    # Load the iris dataset
    iris = load_iris()

    # Create a DataFrame
    df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
    df['target'] = iris.target

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(df[iris.feature_names], df['target'], random_state=42)

    # Create a DecisionTreeRegressor
    regressor = DecisionTreeRegressor(random_state=42)

    # Fit the model
    regressor.fit(X_train, y_train)

    # Make predictions
    y_pred = regressor.predict(X_test)

    # Calculate the mean squared error
    mse = mean_squared_error(y_test, y_pred)

    print(f"Mean Squared Error: {mse}")
    ```
    ## Example: Using the `RandomForestRegressor` from sklearn

    # Import necessary libraries
    from sklearn.datasets import load_boston
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestRegressor

    # Load the boston dataset
    boston = load_boston()

    # Create a DataFrame
    df = pd.DataFrame(data=boston.data, columns=boston.feature_names)
    df['target'] = boston.target

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(df[boston.feature_names], df['target'], random_state=4