```python
    import pandas as pd
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import accuracy_score
    from sklearn.metrics import classification_report
    from sklearn.metrics import confusion_matrix

    # Load the dataset
    df = pd.read_csv('device_data.csv')

    # Split the dataset into features and target variable
    X = df.drop("device", axis=1)
    y = df["device"]

    # Split the dataset into training set and test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)

    # Create a Random Forest Classifier
    clf = RandomForestClassifier(n_estimators=100)

    # Train the model using the training sets
    clf.fit(X_train, y_train)

    # Predict the response for test dataset
    y_pred = clf.predict(X_test)

    # Model Accuracy
    print("Accuracy:", accuracy_score(y_test, y_pred))

    # Model Precision, Recall and F1-score
    print("Classification Report: \n", classification_report(y_test, y_pred))

    # Confusion Matrix
    print("Confusion Matrix: \n", confusion_matrix(y_test, y_pred))

    # Feature Importance
    feature_imp = pd.Series(clf.feature_importances_,index=X.columns).sort_values(ascending=False)
    print("Feature Importance: \n", feature_imp)

    # Device for ML
    device_for_ml = clf.predict([[1, 2, 3, 4, 5]])
    print("Device for ML: ", device_for_ml)
    ```
