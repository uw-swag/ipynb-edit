```
    ### Instruction:
    [
    Commit Message: "Added sensor examples"
    Original Code Cells:
    '''
    <Cell_0>
from redpitaya.overlay.mercury import mercury as FPGA
overlay = FPGA()
ANALOG_TEMP = FPGA.analog_in(0) # define which pin will be used for temperature sensor
<\Cell_0>
<Cell_1>
# Temperature vs. NTC resistance 
import math
import matplotlib.pyplot as plt
import time
from redpitaya.overlay.mercury import mercury as FPGA

def res_to_temp(Rntc):
    B = 4275; # B value of the thermistor
    return (1.0/(math.log10(Rntc/100000.0)/B+1/298.15)-273.15) #convert to temperature via datasheet 
temp = [ res_to_temp(R) for R in range(10000,300000,100)]
plt.plot(range(10000,300000,100), temp)
plt.xlabel('Rntc[ohm]')
plt.ylabel('Temperature[*C]')
plt.show()
<\Cell_1>
<Cell_2>
def temp():
    Va0=ANALOG_TEMP.read() # read voltage of sensor
    R0 = 100000;       # R0 = 100k
    Rntc = 3.3/(Va0)-1.0 
    Rntc = 100000.0*Rntc # thermistor resistance
    return (res_to_temp(Rntc),Va0);
r=temp()

print("voltage={:.2f}V temp {:.2f}â„ƒ".format(r[1],r[0]) )
<\Cell_2>
<Cell_3>
r
<\Cell_3>
<Cell_4>
ANALOG_Al