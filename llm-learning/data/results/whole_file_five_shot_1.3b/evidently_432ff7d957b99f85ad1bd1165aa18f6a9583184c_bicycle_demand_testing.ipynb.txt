```python
    # This is a simple example of a neural network model using Keras.
    # It's a simple model with one convolutional layer, followed by max pooling,
    # followed by a flattening layer, followed by two fully connected layers.

    from keras.models import Sequential
    from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense

    # Initialize the constructor
    model = Sequential()

    # Add an input layer
    model.add(Conv2D(filters=32, kernel_size=(3, 3), activation='relu', input_shape=(64, 64, 3)))

    # Add a max pooling layer
    model.add(MaxPooling2D(pool_size=(2, 2)))

    # Add a flattening layer
    model.add(Flatten())

    # Add a fully connected layer
    model.add(Dense(units=128, activation='relu'))

    # Add another fully connected layer
    model.add(Dense(units=1, activation='sigmoid'))

    # Compile the model
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

    # Fit the model
    model.fit(x_train, y_train, batch_size=32, epochs=10, validation_data=(x_val, y_val))

    # Evaluate the model
    model.evaluate(x_test, y_test)
    ```
