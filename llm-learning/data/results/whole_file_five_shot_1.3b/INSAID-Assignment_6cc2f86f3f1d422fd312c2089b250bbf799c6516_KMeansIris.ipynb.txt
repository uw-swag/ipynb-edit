```python
    from sklearn.linear_model import LinearRegression
    from sklearn.tree import DecisionTreeRegressor
    from sklearn.ensemble import RandomForestRegressor
    from sklearn.metrics import mean_squared_error
    from sklearn.model_selection import train_test_split

    class RegressionUtility:
        def __init__(self, model_type='linear'):
            self.model_type = model_type
            self.model = None

        def fit(self, X, y):
            if self.model_type == 'linear':
                self.model = LinearRegression()
            elif self.model_type == 'tree':
                self.model = DecisionTreeRegressor()
            elif self.model_type == 'forest':
                self.model = RandomForestRegressor()

            self.model.fit(X, y)

        def predict(self, X):
            return self.model.predict(X)

        def score(self, X, y):
            y_pred = self.predict(X)
            return mean_squared_error(y, y_pred)

    class ClassificationUtility:
        def __init__(self, model_type='tree'):
            self.model_type = model_type
            self.model = None

        def fit(self, X, y):
            if self.model_type == 'linear':
                self.model = LinearRegression()
            elif self.model_type == 'tree':
                self.model = DecisionTreeClassifier()
            elif self.model_type == 'forest':
                self.model = RandomForestClassifier()

            self.model.fit(X, y)

        def predict(self, X):
            return self.model.predict(X)

        def score(self, X, y):
            y_pred = self.predict(X)
            return accuracy_score(y, y_pred)
    ```
    This code defines two classes, `RegressionUtility` and `ClassificationUtility`, which are used to perform regression