```
    <Cell_0>
import numpy as np
np.random.seed(seed=0)
I = np.random.choice([0,1], 3)# generate random vector I, sampling from {0,1}
W = np.random.choice([-1,1], 3) # generate random vector W, sampling from {-1,1} 
print(f'Input vector:{I}, Weight vector:{W}')
<\Cell_0>
<Cell_1>
dot = I @ W
print(f'Dot product: {dot}')
<\Cell_1>
<Cell_2>
def linear_threshold_gate(dot: int, T: float) -> int:
    '''Returns the binary threshold output'''
    if dot >= T:
        return 1
    else:
        return 0
<\Cell_2>
<Cell_3>
T = 1
activation = linear_threshold_gate(dot, T)
print(f'Activation: {activation}')
<\Cell_3>
<Cell_4>
T = 3
activation = linear_threshold_gate(dot, T)
print(f'Activation: {activation}')
<\Cell_4>

    '''
    The script above generates a random input vector I and a weight vector W, calculates the dot product of the two vectors, and then applies a linear threshold gate to the result. The threshold is set to 1, and the activation of the gate is printed. The threshold is then set to 3 and the activation of the gate is again printed.
