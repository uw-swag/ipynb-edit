
    '''
    ### Instruction:
    [
    Commit Message: "feat: correlation and cofidence interval analysis"
    Original Code Cells:
    '''
    <Cell_0>
    # Include the predict server path to access data and scripts
    import os,sys
    parentdir = os.path.dirname("../server/")
    sys.path.append(parentdir)

    # Imports to execute the analisys
    from data import get_full_data, get_training, get_predict
    from matplotlib import pyplot as plt
    from sklearn import linear_model
    from predicting import accuracy_score, performance_metric, real_world, plot_learning_curve
    import pandas as pd
    import numpy as np

    # Allows the use of display() for DataFrames
    from IPython.display import display 

    # Plot the decision boundary
    fig, eixos = plt.subplots(nrows=1, ncols=3, figsize=(15,4))

    # Dados do grafico de piscadas do olho esquerdo aberto
    for index, feature_name in zip(range(len(features)), features):
        # Train
        clf = clf.fit(X[feature_name], Y)
        # print clf

        x_min, x_max = X.iloc[:, 0].min() - 1, X.iloc[:, 0].max() + 1
        y_min, y_max = X.iloc[:, 1].min() - 1, X.iloc[:, 1].max() + 1
        xx, yy = np.meshgrid(np.arange(x_min, x_max, plot_step),
                             np.arange(y_min, y_max, plot_step))

        # print clf

        Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])
        Z = Z.reshape(xx.shape)
        cs = eixos[index].contourf(xx, y