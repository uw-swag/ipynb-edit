```python
    import numpy as np
    from sklearn.decomposition import PCA

    # Generate some example data
    np.random.seed(0)
    X = np.random.randn(100, 2)

    # Apply PCA
    pca = PCA(n_components=2)
    X_pca = pca.fit_transform(X)

    print("Original data shape: ", X.shape)
    print("PCA transformed data shape: ", X_pca.shape)

    # Apply SVD
    U, s, Vt = np.linalg.svd(X)
    X_svd = np.dot(np.dot(U, np.diag(s)), Vt)

    print("Original data shape: ", X.shape)
    print("SVD transformed data shape: ", X_svd.shape)
    ```

    This code first applies PCA to reduce the dimensionality of the data from 2D to 1D. Then it applies SVD to reduce the dimensionality of the data from 2D to 1D. The shapes of the original and transformed data are printed to verify the dimensionality reduction.
