```
    The code provided is an example of how to use the DataDuplicates check in Deepchecks, a library for data quality checks. The check is used to find duplicate rows in a DataFrame.

    The check can be run in different ways, such as:

    - Showing the first 2 duplicates: `DataDuplicates(n_to_show=2).run(ds)`
    - Showing duplicates in specific columns: `DataDuplicates(columns=["col1"]).run(ds)`
    - Ignoring certain columns: `DataDuplicates(ignore_columns=["col3"]).run(ds)`

    The `DataDuplicates` check can also be used to remove duplicates from a DataFrame.

    The code provided is an example of how to use the DataDuplicates check in Deepchecks, a library for data quality checks. The check is used to find duplicate rows in a DataFrame.

    The check can be run in different ways, such as:

    - Showing the first 2 duplicates: `DataDuplicates(n_to_show=2).run(ds)`
    - Showing duplicates in specific columns: `DataDuplicates(columns=["col1"]).run(ds)`
    - Ignoring certain columns: `DataDuplicates(ignore_columns=["col3"]).run(ds)`

    The `DataDuplicates` check can also be used to remove duplicates from a DataFrame.

    The code provided is an example of how to use the DataDuplicates check in Deepchecks, a library for data quality checks. The check is used to find duplicate rows in a DataFrame.

    The check can be run in different ways, such as:

    - Showing the first 2 duplicates: `DataDuplicates(n_to_show=2).run(ds)`
    - Showing duplicates in specific columns: `DataDuplicates(columns=["col1"]).run(ds)`
    - Ignoring certain columns: `DataDuplicates(ignore_columns=["col3"]).run(ds)`

    The `DataDuplicates` check can also be used to remove duplicates from