```python
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import classification_report, confusion_matrix
    from sklearn.preprocessing import StandardScaler
    from tensorflow.keras.models import Sequential
    from tensorflow.keras.layers import Dense, Dropout
    from tensorflow.keras.optimizers import Adam
    from keras.wrappers.scikit_learn import KerasClassifier
    from sklearn.model_selection import KFold
    from sklearn.model_selection import cross_val_score

    # Load the dataset
    df = pd.read_csv('device_data.csv')

    # Preprocess the data
    # This step depends on the specifics of your dataset

    # Split the data into features and target variable
    X = df.drop("device_for_ml", axis=1)
    y = df["device_for_ml"]

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

    # Define the keras model
    def create_model():
        model = Sequential()
        model.add(Dense(12, input_dim=8, activation='relu'))
        model.add(Dense(8, activation='relu'))
        model.add(Dense(1, activation='sigmoid'))
        model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
        return model

    # Create model
    model = KerasClassifier(build_fn=create_model, epochs=150, batch_size=10)

    # Cross validation
    kfold = KFold(n_splits=10, shuffle=True)
    results = cross_val_score