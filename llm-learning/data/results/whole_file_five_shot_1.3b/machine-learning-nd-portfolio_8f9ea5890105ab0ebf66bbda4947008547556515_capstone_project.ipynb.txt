```
    ### Instruction:
    [
    Commit Message: "Coding a Neural Network Project"
    Original Code Cells:
    '''
    <Cell_0>
    # Import libraries

    ### General
    import numpy as np
    import pandas as pd
    from time import time
    import math
    from ast import literal_eval

    ### Plot
    import IPython
    import keras
    from IPython.display import display

    ### Scikit-learn
    from sklearn.model_selection import train_test_split, KFold
    from sklearn.preprocessing import LabelEncoder
    from sklearn.metrics import mean_squared_log_error

    ### Keras
    from keras.preprocessing.text import Tokenizer
    from keras.preprocessing.sequence import pad_sequences
    from keras.utils.vis_utils import plot_model

    ### elapsed time
    t_start = time()
    def print_elapsed(text=''):
        took = (time() - t_start) / 60.0
        print('==== "%s" elapsed %.3f minutes' % (text, took))

    ### Data Loading
    try:
        data = pd.read_csv("database_eng.csv")
        print("Dataset has {} samples with {} features each.".format(*data.shape))
        print_elapsed('dataset loaded')
    except:
        print("Dataset could not be loaded. Is the dataset missing?")

    display(data.head(n = 3))

    ### Data Preprocessing
    data['seq_title'] = data['seq_title'].apply(literal_eval)

    target = data['price']
    features = data.drop('price', axis = 1)
    f_train, X_test, t_train, y_test = train_test_split(features, target, random_state=1)
    X_train, X_valid, y_train, y_valid = train_test_split(f_train, t_train, random_state=123, train_size