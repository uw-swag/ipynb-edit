```{toggle}
    ## Code:
    import pandas as pd
    import numpy as np
    from sklearn.metrics import accuracy_score, mean_squared_error
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.preprocessing import StandardScaler
    from sklearn.metrics import classification_report, confusion_matrix

    # Load the dataset
    df = pd.read_csv('diabetes.csv')

    # Split the dataset into features and target variable
    X = df.drop("Outcome", axis=1)
    y = df["Outcome"]

    # Standardize the features
    sc = StandardScaler()
    X = sc.fit_transform(X)

    # Split the dataset into training set and test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Create a Random Forest Classifier
    clf = RandomForestClassifier(n_estimators=100, random_state=42)

    # Train the classifier
    clf.fit(X_train, y_train)

    # Predict the test set results
    y_pred = clf.predict(X_test)

    # Evaluate the classifier
    print(confusion_matrix(y_test, y_pred))
    print(classification_report(y_test, y_pred))
    print(f'Accuracy: {accuracy_score(y_test, y_pred)}')
    print(f'MSE: {mean_squared_error(y_test, y_pred)}')

    ## Code:
    ```
