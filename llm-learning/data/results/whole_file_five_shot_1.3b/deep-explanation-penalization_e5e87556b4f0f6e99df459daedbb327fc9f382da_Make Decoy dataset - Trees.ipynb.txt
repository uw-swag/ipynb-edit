```python
    from transformers import AutoTokenizer, AutoModelForMaskedLM, Trainer, TrainingArguments
    from datasets import load_dataset
    from transformers import SST2Dataset, SST2Example, SST2Prediction

    # Load the SST-2 dataset
    dataset = load_dataset('sst_2')

    # Define the tokenizer
    tokenizer = AutoTokenizer.from_pretrained('bert-base-uncased')

    # Define the model
    model = AutoModelForMaskedLM.from_pretrained('bert-base-uncased')

    # Define the training arguments
    training_args = TrainingArguments(
        output_dir='./results',
        num_train_epochs=3,
        per_device_train_batch_size=16,
        per_device_eval_batch_size=64,
        warmup_steps=500,
        weight_decay=0.01,
        logging_dir='./logs',
        logging_steps=10,
    )

    # Define the trainer
    trainer = Trainer(
        model=model,
        args=training_args,
        train_dataset=dataset['train'],
        eval_dataset=dataset['validation'],
        compute_metrics=lambda eval_pred: {'sst2_acc': (eval_pred[0] == eval_pred[1]).mean()},
    )

    # Train the model
    trainer.train()

    # Evaluate the model
    trainer.evaluate()

    # Predict the model
    predictions = trainer.predict(["This is a test sentence"])
    ```
