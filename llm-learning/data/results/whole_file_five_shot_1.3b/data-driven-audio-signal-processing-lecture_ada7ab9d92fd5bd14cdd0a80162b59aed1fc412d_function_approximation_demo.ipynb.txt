```
    import numpy as np
    import matplotlib.pyplot as plt

    from tensorflow.keras.layers import Input, Dense
    from tensorflow.keras.models import Model

    N = 500  # total number of examples

    X = np.random.uniform(size=N, low=-1/2, high=1/2)
    Y = 1.75 + np.sin(2*np.pi * X) + 1 * np.sin(3*np.pi * X + 1.5) + .05 * np.random.normal(size=len(X))
    Y = Y/np.max(Y)

    # set up the model
    inputs = Input(shape=(1,))
    z = Dense(30, activation='sigmoid')(inputs)
    z = Dense(1, activation='linear')(z)
    model = Model(inputs, z)
    # compile the model
    model.compile(loss="mse", optimizer="adam")

    history = model.fit(X, Y, epochs=2000, batch_size=8, verbose=0)

    Xp = np.linspace(-1/2, 1/2)
    Yp = model.predict(Xp)

    plt.plot(Xp, Yp, color='C0', label='model')
    plt.scatter(X,Y, alpha=.2, color='C1', label='examples')
    plt.xlabel(r'$x$')
    plt.ylabel(r'$y$')
    plt.legend()
    plt.grid()
    plt.show()
    ```
