```
    # Update notebook to reflect changes in atomstat

    # Import necessary libraries
    from atomai import atomnet, atomstat, models
    from atomai.utils import load_model
    import numpy as np

    # Download and load test data
    download_link = 'https://drive.google.com/uc?id=1gs5myob3qVRTHksq3qU90OHLZNH5ynT6'
    !gdown -q $download_link -O 'test_data.npz'
    !unzip -qq 'test_data.npz'

    # Path to file with trained weights
    weights_path = '/content/simple_model_weights.pt'

    # Initialize model (by default all models that we train are 'dilUnet')
    model = models.dilUnet(nb_classes=3)

    # Load the weights into the model skeleton
    model = load_model(model, weights_path)

    # Load experimental data
    expdata = np.load('bfo_test_img.npy')

    # Get raw NN output
    nn_input, nn_output = atomnet.predictor(expdata, model, use_gpu=False).run()

    # Transform NN output into atomic coordinates
    coordinates = atomnet.locator(nn_output).run()

    # Transform NN output into atomic statistics
    imstack = atomstat.imlocal(nn_output, coordinates, r=16, coord_class=1)

    # Plot scree plot
    imstack.pca_scree_plot(plot_results=True)

    # Perform PCA
    pca_results = imstack.imblock_pca(4, plot_results=True)

    # Perform ICA
    ica_results = imstack.imblock_ica(4, plot_results=True)

    # Perform NMF
    nmf_results = imstack.imblock_nmf(4, plot_results=True)
    ```
