```
    # 11.10 Adam
    class Adam:
        def __init__(self, lr=0.01, beta1=0.9, beta2=0.999, epsilon=1e-8):
            self.lr = lr
            self.beta1 = beta1
            self.beta2 = beta2
            self.epsilon = epsilon
            self.m = None
            self.v = None
            self.t = 0

        def step(self, grads, params):
            if self.m is None:
                self.m = [0] * len(params)
                self.v = [0] * len(params)

            self.t += 1
            lr_t = self.lr * (1 + 0.9 * (self.t // 100) + 0.999 * (self.t // 10000))

            for i, param in enumerate(params):
                if grads[param] is None:
                    continue

                self.m[i] = self.beta1 * self.m[i] + (1 - self.beta1) * grads[param]
                self.v[i] = self.beta2 * self.v[i] + (1 - self.beta2) * np.square(grads[param])

                param -= lr_t * self.m[i] / (np.sqrt(self.v[i]) + self.epsilon)

            return param
    ```
    '''
    }
    ```
