```python
    <Cell_0>
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.metrics import mean_squared_error
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression
    from sklearn.metrics import mean_squared_error
    from sklearn.metrics import r2_score
    from sklearn.model_selection import cross_val_score

    # Load the data
    df = pd.read_csv('data.csv')

    # Split the data into features and target variable
    X = df.drop("target", axis=1)
    y = df["target"]

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Create a linear regression model
    model = LinearRegression()

    # Fit the model to the training data
    model.fit(X_train, y_train)

    # Make predictions on the testing data
    predictions = model.predict(X_test)

    # Calculate the mean squared error of the predictions
    mse = mean_squared_error(y_test, predictions)

    # Calculate the R^2 score
    r2 = r2_score(y_test, predictions)

    # Calculate the cross-validated score
    cv_scores = cross_val_score(model, X, y, cv=5)

    # Print the results
    print("Mean Squared Error: ", mse)
    print("R^2 Score: ", r2)
    print("Cross-validated Scores: ", cv_scores)

    # Plot the actual vs predicted values
    plt.scatter(y_test, predictions)
    plt.xlabel("Actual")
    plt.ylabel("Predicted")
    plt.title