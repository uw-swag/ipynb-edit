```python
    import pandas as pd
    from sklearn.preprocessing import LabelEncoder
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OrdinalEncoder
    from sklearn.ensemble import RandomForestClassifier
    from deepchecks import Dataset
    from deepchecks.checks.performance import SegmentPerformance

    name_data = urlopen('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.names')
    lines = [l.decode("utf-8") for l in name_data if ':' in l.decode("utf-8") and '|' not in l.decode("utf-8")]

    features = [l.split(':')[0] for l in lines]
    label_name = 'income'

    cat_features = [l.split(':')[0] for l in lines if 'continuous' not in l]

    train_df = pd.read_csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',
                           names=features + [label_name])
    val_df = pd.read_csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.test',
                         names=features + [label_name], skiprows=1)

    val_df[label_name] = val_df [label_name].str[:-1]

    encoder = LabelEncoder()
    encoder.fit(train_df[label_name])
    train_df[label_name] = encoder.transform(train_df[label_name])
    val_df[label_name] = encoder.transform(val_df[label_name])

    numeric_features = list(set(train_df.columns) - set(cat_features))

    preprocessor = ColumnTransformer(
        transformers=[
            ("num", numeric_transformer,