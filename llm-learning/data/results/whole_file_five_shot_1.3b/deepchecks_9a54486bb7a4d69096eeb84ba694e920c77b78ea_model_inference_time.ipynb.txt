```
    <Cell_0>
from sklearn.datasets import load_iris
from sklearn.ensemble import AdaBoostClassifier
from sklearn.model_selection import train_test_split

from deepchecks import Dataset
from deepchecks.checks.methodology import ModelInferenceTime
<\Cell_0>
<Cell_1>
iris = load_iris(as_frame=True)
train, test = train_test_split(iris.frame, test_size=0.33, random_state=42)

train_ds = Dataset(train, features=iris.feature_names, label='target')
test_ds = Dataset(test, features=iris.feature_names, label='target')

clf = AdaBoostClassifier().fit(train_ds.data[train_ds.features], train_ds.data[train_ds.label_name])
<\Cell_1>
<Cell_2>
check = ModelInferenceTime()
check.run(test_ds, clf)
<\Cell_2>
<Cell_3>
check = ModelInferenceTime().add_condition_inference_time_is_not_greater_than(0.00001)
check.run(test_ds, clf)
<\Cell_3>
    ```

    The functionality split in this case is a change in the code structure, not a new functionality. The original code was already split into multiple cells, and the new code is just adding a new check to the existing code.
