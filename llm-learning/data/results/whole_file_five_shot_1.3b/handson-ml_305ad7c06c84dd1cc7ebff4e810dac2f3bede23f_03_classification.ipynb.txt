```
    #@title Classification Notebook
    #@markdown This is the classification notebook.

    ### Classification

    ## Step 1: Importing the necessary libraries

    %matplotlib inline
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns; sns.set()

    from sklearn.datasets import make_blobs
    from sklearn.tree import DecisionTreeClassifier
    from sklearn.ensemble import BaggingClassifier
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import train_test_split
    from sklearn import metrics
    from sklearn.metrics import confusion_matrix

    ### Step 2: Generating the data

    X, y = make_blobs(n_samples=300, centers=4,
                      random_state=0, cluster_std=1.0)
    plt.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='rainbow');

    ### Step 3: Training the models

    tree = DecisionTreeClassifier()
    tree.fit(X, y)

    bag = BaggingClassifier(tree, n_estimators=100, max_samples=0.8,
                            random_state=1)
    bag.fit(X, y)

    model = RandomForestClassifier(n_estimators=1000)
    model.fit(X, y)

    ### Step 4: Evaluating the models

    ypred = model.predict(X)
    print(metrics.classification_report(ypred, y))

    mat = confusion_matrix(y, ypred)
    sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False)
    plt.xlabel('true label')
    plt.ylabel('predicted label');
    ```
