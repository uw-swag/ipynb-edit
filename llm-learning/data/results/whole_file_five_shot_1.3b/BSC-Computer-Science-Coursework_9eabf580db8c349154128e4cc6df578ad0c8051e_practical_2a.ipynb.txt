```python
    <Cell_0>
    %run ../common/import_all.py

    from common.setup_notebook import set_css_style, setup_matplotlib, config_ipython
    config_ipython()
    setup_matplotlib()
    set_css_style()
    <\Cell_0>
    <Cell_1>
    ## Importing necessary libraries
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression
    from sklearn import metrics

    ## Loading the dataset
    df = pd.read_csv('../../mlrefined_datasets/superlearn_datasets/handling_numerical_data.csv')

    ## Data preprocessing
    df = df.select_dtypes(include=[np.number])
    df = df.fillna(df.mean())

    ## Feature scaling
    from sklearn.preprocessing import StandardScaler
    sc = StandardScaler()
    df = sc.fit_transform(df)

    ## Splitting the dataset
    X = df.iloc[:, :-1].values
    y = df.iloc[:, -1].values
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

    ## Training the model
    regressor = LinearRegression()
    regressor.fit(X_train, y_train)

    ## Predicting the results
    y_pred = regressor.predict(X_test)

    ## Evaluating the model
    print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))
    print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))
    print('Root Mean Squared Error:', np.