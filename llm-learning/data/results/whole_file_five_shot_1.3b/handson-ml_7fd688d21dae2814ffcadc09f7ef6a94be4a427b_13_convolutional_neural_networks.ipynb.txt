```
    ### Instruction:
    [
    Commit Message: "Implemented a simple linear regression model"
    Original Code Cells:
    '''
    <Cell_0>
    # To support both python 2 and python 3
    from __future__ import division, print_function, unicode_literals

    # Common imports
    import numpy as np
    import numpy.random as rnd
    import os

    # to make this notebook's output stable across runs
    rnd.seed(42)

    # To plot pretty figures
    %matplotlib inline
    import matplotlib
    import matplotlib.pyplot as plt
    plt.rcParams['axes.labelsize'] = 14
    plt.rcParams['xtick.labelsize'] = 12
    plt.rcParams['ytick.labelsize'] = 12

    # Where to save the figures
    PROJECT_ROOT_DIR = "."
    CHAPTER_ID = "linear_regression"

    def save_fig(fig_id, tight_layout=True):
        path = os.path.join(PROJECT_ROOT_DIR, "images", CHAPTER_ID, fig_id + ".png")
        print("Saving figure", fig_id)
        if tight_layout:
            plt.tight_layout()
        plt.savefig(path, format='png', dpi=300)
    <\Cell_0>
    <Cell_1>
    def generate_data(n_samples=30):
        rnd.seed(42)
        X = 10 * rnd.rand(n_samples)
        y = 2 * X - 15 + rnd.randn(n_samples)
        return X, y
    <\Cell_1>
    <Cell_2>
    def plot_data(X, y):
        plt.scatter(X, y, c='C0')
        plt.xlabel("$X$", fontsize=18)
        plt.ylabel("$y$", fontsize=18, rotation=0)