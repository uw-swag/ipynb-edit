
    ### Instruction:
    [
    Commit Message: "Adding a new dictionary to count the number of chipped orders"
    Original Code Cells:
    '''
    ### Response:
    from collections import defaultdict
    dchips = defaultdict(int)

    for row in data:
        if 'Chips' in row[2]:
            dchips[row[2]] += int(row[1])

    dict(dchips)
<\Cell_46>
<Cell_47>
# This is a tiny variation of our code that previously raised an error

# Create an empty dictionary that will eventually contain integers (and thus the default value is 0)
dchips = defaultdict(int)

# We no longer have to check if the key is present
for row in data:
    dchips[row[2]] += int(row[1])

dict(dchips)
<\Cell_47>
<Cell_48>
# This is a tiny variation of our code that previously raised an error

# Create an empty dictionary that will eventually contain integers (and thus the default value is 0)
dchips = defaultdict(int)

# We no longer have to check if the key is present
for row in data:
    dchips[row[2]] += int(row[1])

dict(dchips)
<\Cell_48>
<Cell_49>
# This is a tiny variation of our code that previously raised an error

# Create an empty dictionary that will eventually contain integers (and thus the default value is 0)
dchips = defaultdict(int)

# We no longer have to check if the key is present
for row in data:
    dchips[row[2]] += int(row[1])

dict(dchips)
<\Cell_49>
<Cell_50>
# This is a tiny variation of our code that previously raised an error

# Create an empty dictionary that will eventually contain integers (and thus the default value is 0)
dchips = defaultdict(int)

# We no longer have to check if the key is present
for row in data