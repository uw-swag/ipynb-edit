```
    df_train = df_train.astype({'numeric_without_drift': 'float', 'numeric_with_drift': 'float'})
    df_test = df_test.astype({'numeric_without_drift': 'float', 'numeric_with_drift': 'float'})

    model.fit(train_dataset.features_columns, label)

    label = np.random.randint(0, 2, size=(df_test.shape[0],))
    df_test['target'] = label

    result = check.run(train_dataset=train_dataset, test_dataset=test_dataset, model=model)
    ```
    '''

    ### Instruction:
    [
    Commit Message: "Adding nblinks instead of copy (#292)"
    Original Code Cells:
    '''
    <Cell_0>
import numpy as np
import pandas as pd

from deepchecks import Dataset
from deepchecks.checks import TrainTestDrift
import pprint
%load_ext autoreload
%autoreload 2
<\Cell_0>
<Cell_1>
np.random.seed(42)

train_data = np.concatenate([np.random.randn(1000,2), np.random.choice(a=['apple', 'orange', 'banana'], p=[0.5, 0.3, 0.2], size=(1000, 2))], axis=1)
test_data = np.concatenate([np.random.randn(1000,2), np.random.choice(a=['apple', 'orange', 'banana'], p=[0.5, 0.3, 0.2], size=(1000, 2))], axis=1)

df_train = pd.DataFrame(train_data, columns=['numeric_without_drift', 'numeric_with_drift', 'categorical_without_drift', 'categorical_with_drift'])
df_test = pd.DataFrame(test_