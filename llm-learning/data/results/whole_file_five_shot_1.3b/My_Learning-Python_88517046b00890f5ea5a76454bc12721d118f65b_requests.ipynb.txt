```
    <Cell_0>
    import requests
    <\Cell_0>
    <Cell_1>
    response = requests.get('https://api.github.com')
    <\Cell_1>
    <Cell_2>
    print(response.status_code)
    <\Cell_2>
    <Cell_3>
    if response.status_code == 200:
        print("Success!")
    elif response.status_code == 404:
        print("Not Found")
    <\Cell_3>
    <Cell_4>
    if response:
        print("Success!")
    else:
        print("An error has occurred.")
    <\Cell_4>
    <Cell_5>
    if response:
        print("Success!")
    else:
        print("An error has occurred.")
    <\Cell_5>
    <Cell_6>
    from requests.exceptions import HTTPError
    <\Cell_6>
    <Cell_7>
    try:
        response = requests.get('https://api.github.com/invalid')
        response.raise_for_status()
    except HTTPError as http_err:
        print('HTTP error occurred: {}'.format(http_err))
    except Exception as err:
        print('other error occurred: {}'.format(err))
    else:
        print('Success!')
    <\Cell_7>
    <Cell_8>
    response.content
    <\Cell_8>
    <Cell_9>
    response.text
    <\Cell_9>
    <Cell_10>
    response.json()
    <\Cell_10>
    <Cell_11>
    response.headers
    <\Cell_11>
    <Cell_12>
    response.headers['content-type']
    <\Cell_12>
    ```
    The code above is a simple example of how to use the requests library in Python to interact with the GitHub API. It includes getting a response, checking the status code, handling exceptions, and accessing various properties of the response.
