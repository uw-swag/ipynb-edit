
    [
    Commit Message: "change ADALINE learning rate error; perceptron first notes"
    Original Code Cells:
    '''
    <Cell_0>
    import numpy as np

    def random_weights(X, random_state: int):
        '''create vector of random weights
        Parameters
        ----------
        X: 2-dimensional array, shape = [n_samples, n_features]
        Returns
        -------
        w: array, shape = [w_bias + n_features]'''
        rand = np.random.RandomState(random_state)
        w = rand.normal(loc=0.0, scale=0.01, size=1 + X.shape[1])
        return w
    <\Cell_0>
    '''
    ]

    ### Response:
    
    [
    Commit Message: "change ADALINE learning rate error; perceptron first notes"
    Original Code Cells:
    '''
    <Cell_0>
    import numpy as np

    def random_weights(X, random_state: int):
        '''create vector of random weights
        Parameters
        ----------
        X: 2-dimensional array, shape = [n_samples, n_features]
        Returns
        -------
        w: array, shape = [w_bias + n_features]'''
        rand = np.random.RandomState(random_state)
        w = rand.normal(loc=0.0, scale=0.01, size=1 + X.shape[1])
        return w
    <\Cell_0>
    '''
    ]

    ### Response:
    
    [
    Commit Message: "change ADALINE learning rate error; perceptron first notes"
    Original Code Cells:
    '''
    <Cell_0>
    import numpy as np

    def random_weights(X, random_state: int):
        '''create vector of random weights
        Parameters
        ----------
        X: 2-dimensional array, shape = [n_samples, n_features]
        Returns
        -------