
<Cell_0>
#load data
import scipy.io as sio
import numpy as np
import matplotlib.pyplot as plt

data = sio.loadmat('ex7data1.mat')
X = data['X']
print X.shape
print X[:5]

plt.plot(X[:,0],X[:,1],'bo')
plt.xlabel('x1')
plt.ylabel('x2')
plt.show()
<\Cell_0>
<Cell_1>
#feature normalize
def featureNormalize(X):
    X_norm = X
    mu = np.zeros((1,X.shape[1]))
    sigma = np.zeros((1,X.shape[1]))
    
    mu = np.mean(X,axis=0) #mean value of every feature
    sigma = np.std(X,axis=0)#std of every feature
    X_norm = (X - mu) / sigma
    
    return X_norm,mu,sigma 

<\Cell_1>
<Cell_2>
#complete the pca
def pca(data_normal):
    m,n = data_normal.shape
    sigma = data_normal.T.dot(data_normal) / m  #np.cov()
    U,S,V = np.linalg.svd(sigma)  #np.linalg.eig()
    return U,S,V

<\Cell_2>
<Cell_3>
X_norm,mu,sigma = featureNormalize(X)
U,S,V = pca(X_norm)
print "you should expect to see -0.707107 -0.707107)\n"
print U[0,0],U[1,0]


<\Cell_3>
<Cell_4>
plt.plot(X_norm[:,0],X_norm[:,1],'bo')
plt.xlabel('x1')
plt.ylabel('x2')
plt.show()

<\