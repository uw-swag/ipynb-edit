```python
    # Copyright 2020-2024 Jordi Corbilla. All Rights Reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # ==============================================================================

    import deepchecks
    from deepchecks.base import Dataset
    from sklearn.ensemble import GradientBoostingRegressor
    from sklearn.datasets import load_diabetes
    from sklearn.model_selection import train_test_split
    from deepchecks.checks.performance import RegressionErrorDistribution

    # Load the diabetes dataset
    diabetes_df = load_diabetes(return_X_y=False, as_frame=True).frame

    # Split the dataset into training and testing sets
    train_df, test_df = train_test_split(diabetes_df, test_size=0.33, random_state=42)

    # Create a Dataset object for the training and testing data
    train = Dataset(train_df, label='target', cat_features=['sex'])
    test = Dataset(test_df, label='target', cat_features=['sex'])

    # Create a Gradient Boosting Regressor model
    clf = GradientBoostingRegressor(random_state=0)

    # Fit the model to the training data
    _ = clf.fit(train.features_columns, train.label_col)

    # Create a RegressionErrorDistribution check
    check = RegressionErrorDistribution()

    #