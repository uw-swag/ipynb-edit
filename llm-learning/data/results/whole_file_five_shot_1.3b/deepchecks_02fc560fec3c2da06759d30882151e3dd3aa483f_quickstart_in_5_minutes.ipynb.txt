```
    <Cell_0>
    # If you don't have deepchecks installed yet:
    import sys
    !{sys.executable} -m pip install deepchecks -U --quiet #--user
    <\Cell_0>
    <Cell_1>
    # General imports
    import pandas as pd
    import numpy as np
    np.random.seed(22)

    from sklearn.datasets import load_iris
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import train_test_split

    # Load Data
    iris_df = load_iris(return_X_y=False, as_frame=True)['frame']
    label_col = 'target'
    df_train, df_test = train_test_split(iris_df, stratify=iris_df[label_col], random_state=0)

    # Train Model
    rf_clf = RandomForestClassifier()
    rf_clf.fit(df_train.drop(label_col, axis=1), df_train[label_col]);
    <\Cell_1>
    <Cell_2>
    from deepchecks import Dataset

    # We explicitly state that this dataset has no categorical features, otherwise they will be automatically inferred
    # If the dataset has categorical features, the best practice is to pass a list with their names

    ds_train = Dataset(df_train, label=label_col, cat_features=[])
    ds_test =  Dataset(df_test,  label=label_col, cat_features=[])
    <\Cell_2>
    <Cell_3>
    from deepchecks.suites import full_suite

    suite = full_suite()
    <\Cell_3>
    <Cell_4>
    # note that we set check_datasets_policy to 'both' so that for single dataset checks (e.g. some of the integrity checks),
    # both the test and the train data will be checked.

    suite.run(train_dataset=ds_train, test_dataset