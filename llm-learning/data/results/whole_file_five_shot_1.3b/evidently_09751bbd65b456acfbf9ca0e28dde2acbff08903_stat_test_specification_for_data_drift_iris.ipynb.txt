```python
    <Cell_0>
    import pandas as pd
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn import datasets
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import accuracy_score
    from sklearn.preprocessing import StandardScaler
    from sklearn.pipeline import Pipeline
    from evidently.dashboard import Dashboard
    from evidently.dashboard.tabs import DataDriftTab, CatTargetDriftTab
    from evidently.options import DataDriftOptions
    from evidently.model_profile import Profile
    from evidently.model_profile.sections import DataDriftProfileSection, CatTargetDriftProfileSection 

    import warnings
    warnings.filterwarnings('ignore')
    warnings.simplefilter('ignore')
    <\Cell_0>
    <Cell_1>
    iris = datasets.load_iris()
    <\Cell_1>
    <Cell_2>
    iris_frame = pd.DataFrame(iris.data, columns = iris.feature_names)
    <\Cell_2>
    <Cell_3>
    iris_frame['target'] = iris.target
    <\Cell_3>
    <Cell_4>
    X = iris_frame.iloc[:, :-1]
    y = iris_frame.iloc[:, -1]
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    <\Cell_4>
    <Cell_5>
    pipeline = Pipeline([('scaler', StandardScaler()), ('clf', RandomForestClassifier())])
    pipeline.fit(X_train, y_train)
    y_pred = pipeline.predict(X_test)
    print("Accuracy:", accuracy_score(y_test, y_pred))
    <\Cell_5>
    <Cell_6>
    stat_test_option = DataDriftOptions(num_target_stattest_func