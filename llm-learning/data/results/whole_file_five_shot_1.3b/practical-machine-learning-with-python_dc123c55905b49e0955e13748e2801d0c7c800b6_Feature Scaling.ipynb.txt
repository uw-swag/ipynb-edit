```
    <Cell_0>
    from sklearn.preprocessing import StandardScaler, MinMaxScaler, RobustScaler
    import numpy as np
    import pandas as pd
    np.set_printoptions(suppress=True)
    <\Cell_0>
    <Cell_1>
    views = pd.DataFrame([1295., 25., 19000., 5., 1., 300.], columns=['views'])
    views
    <\Cell_1>
    <Cell_2>
    ss = StandardScaler()
    views['zscore'] = ss.fit_transform(views[['views']])
    views
    <\Cell_2>
    <Cell_3>
    vw = np.array(views['views'])
    (vw[0] - np.mean(vw)) / np.std(vw)
    <\Cell_3>
    <Cell_4>
    mms = MinMaxScaler()
    views['minmax'] = mms.fit_transform(views[['views']])
    views
    <\Cell_4>
    <Cell_5>
    (vw[0] - np.min(vw)) / (np.max(vw) - np.min(vw))
    <\Cell_5>
    <Cell_6>
    rs = RobustScaler()
    views['robust'] = rs.fit_transform(views[['views']])
    views
    <\Cell_6>
    <Cell_7>
    quartiles = np.percentile(vw, (25., 75.))
    iqr = quartiles[1] - quartiles[0]
    (vw[0] - np.median(vw)) / iqr
    <\Cell_7>
    ```
