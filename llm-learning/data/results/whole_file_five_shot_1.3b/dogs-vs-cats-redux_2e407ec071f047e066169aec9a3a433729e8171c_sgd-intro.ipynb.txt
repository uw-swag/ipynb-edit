```

    ### Instruction:
    [
    Commit Message: "[ADD] New Python file"
    Original Code Cells:
    '''
    <Cell_0>
%matplotlib inline
import math,sys,os,numpy as np
from numpy.random import random
from matplotlib import pyplot as plt, rcParams, animation, rc
from __future__ import print_function, division
from ipywidgets import interact, interactive, fixed
from ipywidgets.widgets import *
rc('animation', html='html5')
rcParams['figure.figsize'] = 3, 3
%precision 4
np.set_printoptions(precision=4, linewidth=100)
<\Cell_0>
<Cell_1>
def lin(a,b,x): return a*x+b
<\Cell_1>
<Cell_2>
a=3.
b=8.
<\Cell_2>
<Cell_3>
n=30
x = random(n)
y = lin(a,b,x)
<\Cell_3>
<Cell_4>
x
<\Cell_4>
<Cell_5>
y
<\Cell_5>
<Cell_6>
plt.scatter(x,y)
<\Cell_6>
<Cell_7>
def sse(y,y_pred): return ((y-y_pred)**2).sum()
def loss(y,a,b,x): return sse(y, lin(a,b,x))
def avg_loss(y,a,b,x): return np.sqrt(loss(y,a,b,x)/n)
<\Cell_7>
<Cell_8>
a_guess=-1.
b_guess=1.
avg_loss(y, a_guess, b_guess, x)
<\Cell_8>
<Cell_9>
lr=0.01
# d[(y-(a*x+b))**2,b] = 2 (b + a x - y)      = 2 (y