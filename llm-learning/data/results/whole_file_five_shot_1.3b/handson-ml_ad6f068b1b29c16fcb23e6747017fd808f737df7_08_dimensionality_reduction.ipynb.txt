
    '''
    [
    ### Instruction:
    [
    Commit Message: "Add exercise solutions for chapter 09"
    Original Code Cells:
    '''
    <Cell_0>
    # To support both python 2 and python 3
    from __future__ import division, print_function, unicode_literals

    # Common imports
    import numpy as np
    import os

    # to make this notebook's output stable across runs
    np.random.seed(42)

    # To plot pretty figures
    %matplotlib inline
    import matplotlib.pyplot as plt
    plt.rcParams['axes.labelsize'] = 14
    plt.rcParams['xtick.labelsize'] = 12
    plt.rcParams['ytick.labelsize'] = 12

    # Where to save the figures
    PROJECT_ROOT_DIR = "."
   CHAPTER_ID = "dim_reduction"

    def save_fig(fig_id, tight_layout=True):
        path = os.path.join(PROJECT_ROOT_DIR, "images", CHAPTER_ID, fig_id + ".png")
        print("Saving figure", fig_id)
        if tight_layout:
            plt.tight_layout()
        plt.savefig(path, format='png', dpi=300)

    # New code
    import numpy as np
    from sklearn.decomposition import PCA

    n_samples = 1000
    np.random.seed(42)
    X = np.random.randn(n_samples, 2)
    pca = PCA(n_components=2)
    X_pca = pca.fit_transform(X)

    plt.figure(figsize=(8, 6))
    plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y, edgecolor='none', alpha=0.5,
                cmap=plt.cm.get_cmap())
    plt.x