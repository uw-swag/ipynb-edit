```
    这是一个使用k-means聚类的Python实现。首先，我们加载数据并进行可视化。然后，我们定义了两个函数：computeDistance和findClosestCentroids。computeDistance函数计算两个向量的欧氏距离，findClosestCentroids函数根据给定的质心找到数据点到质心的最近距离。

    接下来，我们定义了一个Kmeans类，该类包含一个runKmeans方法。这个方法首先使用初始质心调用findClosestCentroids函数，然后使用change_centroids函数计算新的质心，并重复这个过程，直到质心不再改变。

    然后，我们用初始质心和随机质心测试了k-means聚类。我们还绘制了聚类结果和初始质心。

    注意：这个实现假设你已经安装了scipy和numpy库。如果没有，你可以使用pip命令安装：
    ```
    pip install scipy numpy matplotlib
    ```
    或者使用conda命令：
    ```
    conda install scipy numpy matplotlib
    ```
    注意：这个实现的结果可能与你的预期不符，因为k-means聚类是一种无监督学习算法，它假设数据集中的质心是随机的。
    在实际应用中，你可能需要根据数据集的特性来选择合适的质心。
    此外，这个实现没有实现k-means算法的所有步骤，比如初始化质心、计算质心、更新质心等。这些步骤在实际应用中可能需要更多的代码。
    最后，这个实现没有实现k-means算法的所有步骤，比如初始化质心、计算质心、更新质心等。这些步骤在实际应用中可能需要更多的代码。
    最后，这个实现没有实现k-means算法的所有步骤，比如初始化质心、计算质心、更新质心等。这些步骤在实际应用中可能需要更多的代码。
    最后，这个实现没有实现k-means算法的所有步骤，比如初始