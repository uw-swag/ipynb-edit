```
    ### Instruction:
    [
    Commit Message: "Add notebooks for chapters 5 to 14"
    Original Code Cells:
    '''
    <Cell_0>
    import numpy as np
    import matplotlib.pyplot as plt
    from matplotlib.colors import ListedColormap
    import seaborn as sns
    import pandas as pd
    <\Cell_0>
    <Cell_1>
    # Setup plots
    %matplotlib inline
    plt.rcParams['figure.figsize'] = 10, 8
    %config InlineBackend.figure_format = 'retina'
    sns.set()
    <\Cell_1>
    <Cell_2>
    # Import ML packages
    import sklearn
    print(f'scikit-learn version: {sklearn.__version__}')

    from sklearn.datasets import make_classification
    from sklearn.neighbors import KNeighborsClassifier
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    <\Cell_2>
    <Cell_3>
    def plot_decision_boundary(pred_func, X, y, figure=None):
        """Plot a decision boundary"""

        if figure is None:  # If no figure is given, create a new one
            plt.figure()
        # Set min and max values and give it some padding
        x_min, x_max = X[:, 0].min() - .5, X[:, 0].max() + .5
        y_min, y_max = X[:, 1].min() - .5, X[:, 1].max() + .5
        h = 0.01
        # Generate a grid of points with distance h between them
        xx, yy = np.meshgrid(np.arange(x_min, x_max, h),
                         np.arange(y_min, y_max, h))
        # Predict the function value for the whole grid
        Z = pred_func(np.c_[