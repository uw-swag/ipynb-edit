```python
    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    import nannyml as nml
    from IPython.display import display

    reference_df = nml.load_synthetic_binary_classification_dataset()[0]
    analysis_df = nml.load_synthetic_binary_classification_dataset()[1]
    analysis_target_df = nml.load_synthetic_binary_classification_dataset()[2]
    analysis_df = analysis_df.merge(analysis_target_df, on='identifier')

    display(reference_df.head(3))

    calc = nml.TargetDistributionCalculator(
        y_true='work_home_actual',
        timestamp_column_name='timestamp',
        problem_type='classification_binary'
    )

    calc.fit(reference_df)
    results = calc.calculate(analysis_df)
    display(results.data.head(3))

    target_drift_fig = results.plot(kind='target_drift', plot_reference=True)
    target_drift_fig.show()

    target_drift_fig.write_image('../_static/target_distribution_metric.svg')

    target_distribution_fig = results.plot(kind='target_distribution', plot_reference=True)
    target_distribution_fig.show()

    target_distribution_fig.write_image('../_static/target_distribution_statistical.svg')
    ```
