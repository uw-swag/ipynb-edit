```python
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    import seaborn as sns
    from keras.models import Sequential
    from keras.layers import Dense, Dropout, Flatten
    from keras.layers.convolutional import Conv2D, MaxPooling2D
    from keras.optimizers import Adam
    from keras.wrappers.scikit_learn import KerasClassifier
    from sklearn.model_selection import cross_val_score
    from sklearn.preprocessing import LabelBinarizer
    from keras.models import load_model
    from keras.layers import LeakyReLU

    # 'Run CartPole' notebook
    from keras.datasets import cartpole
    dataset = cartpole.load_data()
    X = dataset[0]
    Y = dataset[1]

    # 'Run LunarLander' notebook
    from keras.datasets import lunar_lander
    dataset = lunar_lander.load_data()
    X = dataset[0]
    Y = dataset[1]

    # Preprocess data
    X = X.astype('float32')
    X = X / 255.0
    Y = Y.astype('int32')

    # Model architecture
    model = Sequential()
    model.add(Dense(12, input_dim=4, activation='relu'))
    model.add(Dense(8, activation='relu'))
    model.add(Dense(1, activation='sigmoid'))
    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

    # Train model
    model.fit(X, Y, epochs=100, batch_size=10)

    # Evaluate model
    scores = model.evaluate(X, Y)
    print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))

