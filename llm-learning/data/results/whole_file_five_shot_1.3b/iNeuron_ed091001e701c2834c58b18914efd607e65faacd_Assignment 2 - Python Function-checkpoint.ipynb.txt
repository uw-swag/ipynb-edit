```
    import operator 

    def myReduce(function, iterable, initializer=None):
        it = iter(iterable)
        if initializer is None:
            value = next(it)
        else:
            value = initializer
        for element in it:
            value = function(value, element)
        return value

    print(myReduce(operator.add, [1, 4, 3, 7, 2]))

    def myfilter(fun, sequence):
        result = []
        for i in range(len(sequence)):
            if fun(sequence[i]) == True:
                result.append(sequence[i])
        return result
        
    def testFun(a):
        if len(a) > 5:
            return True
        return False
    
    print(myfilter(testFun, ["paras", "test", "amazing", "elephant", "is", "cool", "iNeuron"]))

    print([x for x in "ACADGILD"])
    lst=["x", "y", "z"]
    print([i*j for i in lst for j in range(1, 5)])
    print([x*i for x in range(1, 5) for i in lst])
    print([[j] for i in range(2, 5) for j in range(i, i+3)])
    print([[i+j for i in range(0, 4)] for j in range(2, 6)])
    print([(j, i) for i in range(1, 4) for j in range(1, 4)])

    def longestWord(lst):
        m = ""
        for i in range(len(lst)):
            if len(lst[i]) >= len(m):
                m = lst[i]
        return m
    
    print(longestWord(["paras", "test", "amazing", "elephant", "is", "cool", "iNeuron"]))   

    def find_length(lst):
        return list(map(len, l