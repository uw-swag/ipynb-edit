```python
    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn.linear_model import LinearRegression
    from sklearn.preprocessing import PolynomialFeatures
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression
    from sklearn.metrics import mean_squared_error
    from sklearn.model_selection import cross_val_score

    # Generate some example data
    np.random.seed(0)
    X = np.linspace(0, 10, 100).reshape(-1, 1)
    y = 2 * X + 1 + np.random.normal(0, 1, 100).reshape(-1, 1)

    # Linear Regression
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    lin_reg = LinearRegression()
    lin_reg.fit(X_train, y_train)
    y_pred = lin_reg.predict(X_test)
    print("Linear Regression MSE: ", mean_squared_error(y_test, y_pred))

    # Polynomial Regression
    poly_features = PolynomialFeatures(degree=2)
    X_train_poly = poly_features.fit_transform(X_train)
    X_test_poly = poly_features.fit_transform(X_test)
    lin_reg_poly = LinearRegression()
    lin_reg_poly.fit(X_train_poly, y_train)
    y_pred_poly = lin_reg_poly.predict(X_test_poly)
    print("Polynomial Regression MSE: ", mean_squared_error(y_test, y_pred_poly))

    # Model Selection
    scores = cross_val_score(lin_reg, X, y, cv=10, scoring="neg_mean_squared_error")
    print("Linear Regression CV MSE: ",