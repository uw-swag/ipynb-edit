
    The commit message "Upgrade to 0.11.0 (#139)" indicates a major version upgrade of the project. The project is using the AI library DJL (Deep Java Library) version 0.10.0. 

    The project also uses the SLF4J version 1.7.26 for logging, and the MXNet version 1.7.0-backport for the AI library.

    The function `showHeatmaps` is used to display a 2D matrix as a heatmap. This function is used to visualize the attention weights generated by the model.

    The attention weights are a 10x10 matrix, and the function `showHeatmaps` is used to display this matrix. The x-axis represents the keys, and the y-axis represents the queries.

    The heatmap is generated by reshaping the attention weights into a 2D matrix and then displaying it using the `showHeatmaps` function.

    The `showHeatmaps` function is used to display the attention weights, which is a crucial part of the model's attention mechanism.

    The commit message also mentions that the project is using the DJL version 0.10.0, which is a major version upgrade from the previous version.

    The project also uses the SLF4J version 1.7.26 for logging, and the MXNet version 1.7.0-backport for the AI library.

    The function `showHeatmaps` is used to display a 2D matrix as a heatmap. This function is used to visualize the attention weights generated by the model.

    The attention weights are a 10x10 matrix, and the function `showHeatmaps` is used to display this matrix. The x-axis represents the keys, and the y-axis represents the queries.

    The heatmap is generated by reshaping the attention weights into a 2D matrix and then displaying it using the `showHeatmaps` function.

    The `showHeatmaps` function is used to display the attention weights, which is a crucial part of the model's attention mechanism.

    The commit message also mentions that the project is using the DJL version 0.10.