```
    #@title Hyperparameter tuning for Random Forest Regressor
    #@markdown This is a Jupyter notebook example. You can run this cell to perform hyperparameter tuning for a Random Forest Regressor.

    ### Instruction:
    [
    Commit Message: "Increased Max_Depth & n_estimators"
    Original Code Cells:
    '''
    <Cell_0>
    #Imports
    import numpy as np
    import pandas as pd
    from scipy.stats import skew
    from scipy.stats.stats import pearsonr
    import matplotlib
    import matplotlib.pyplot as plt
    import seaborn as sns
    pd.options.display.max_columns = 50
    sns.set_style('darkgrid')
    matplotlib.rc('font', size=20)
    matplotlib.rc('axes', titlesize=20)
    matplotlib.rc('axes', labelsize=20)
    matplotlib.rc('xtick', labelsize=20)
    matplotlib.rc('ytick', labelsize=20)
    matplotlib.rc('legend', fontsize=20)
    matplotlib.rc('figure', titlesize=20)
    %matplotlib inline

    from sklearn.ensemble import RandomForestRegressor
    from sklearn.linear_model import LinearRegression, Ridge, RidgeCV, LassoCV, LassoLarsCV, ElasticNet, Lasso
    from sklearn.cross_validation import cross_val_score
    import xgboost as xgb
    from sklearn.ensemble import RandomForestRegressor
    from sklearn.model_selection import GridSearchCV
    from sklearn.metrics import mean_squared_error
    from math import sqrt
    from sklearn.model_selection import train_test_split
    from sklearn.metrics import mean_squared_error
    from sklearn.metrics import mean_absolute_error
    from sklearn.metrics import r2_score
    from sklearn.model