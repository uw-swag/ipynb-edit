```python
    import pandas as pd
    from sklearn.model_selection import train_test_split
    from sklearn.tree import DecisionTreeClassifier
    from sklearn.metrics import accuracy_score
    from time import time

    # Load your data
    df = pd.read_csv('your_data.csv')

    # Define features and target
    X = df.drop('target', axis=1)
    y = df['target']

    # Split your data
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Define the model
    model = DecisionTreeClassifier()

    # Fit the model
    start_time = time()
    model.fit(X_train, y_train)
    end_time = time()

    # Make predictions
    y_pred = model.predict(X_test)

    # Calculate the model's accuracy
    accuracy = accuracy_score(y_test, y_pred)

    # Calculate the model's inference time
    inference_time = end_time - start_time

    # Add the model's inference time to the dataframe
    df['ModelInferenceTime'] = inference_time

    # Print the model's inference time
    print(f'Model inference time: {df["ModelInferenceTime"].mean()} seconds')
    ```
    This code will add a new column 'ModelInferenceTime' to your dataframe, which represents the average inference time of the model. The inference time is calculated by subtracting the time the model is fitted from the time the model is used to make predictions.
