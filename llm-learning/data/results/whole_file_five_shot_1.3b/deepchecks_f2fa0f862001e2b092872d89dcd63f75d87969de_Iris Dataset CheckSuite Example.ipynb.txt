```python
    import pandas as pd
    import numpy as np
    np.random.seed(42)

    from sklearn.datasets import load_iris
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import train_test_split

    iris_df = load_iris(return_X_y=False, as_frame=True)['frame']
    label_col = 'target'
    df_train, df_test = train_test_split(iris_df, stratify=iris_df[label_col], random_state=0)

    rf_clf = RandomForestClassifier()
    rf_clf.fit(df_train.drop(label_col, axis=1), df_train[label_col])

    from deepchecks import Dataset

    ds_train = Dataset(df_train, label = label_col)
    ds_test =  Dataset(df_test, label = label_col)

    from deepchecks.suites import OverallGenericCheckSuite

    from deepchecks import CheckSuite
    from deepchecks.checks import *

    # check out which builtin performance checks exist
    print([class_name for class_name in dir(performance) if class_name[0].isupper()])

    MyModelSuite = CheckSuite('Simple Suite For Model Performance',
        ModelInfo(),
        PerformanceReport(),
        TrainTestDifferenceOverfit(),
        ConfusionMatrixReport(),
        NaiveModelComparison(),
        NaiveModelComparison(naive_model_type='statistical')
    )

    MyModelSuite.run(model=rf_clf, train_dataset=ds_train, test_dataset=ds_test, check_datasets_policy='both')
    ```
