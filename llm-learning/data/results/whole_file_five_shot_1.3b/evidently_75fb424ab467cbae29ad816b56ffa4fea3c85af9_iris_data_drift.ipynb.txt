```
    import pandas as pd
    import numpy as np

    from sklearn import datasets, model_selection, neighbors

    from evidently.dashboard import Dashboard
    from evidently.tabs import DriftTab, CatTargetDriftTab, ClassificationPerformanceTab

    iris = datasets.load_iris()

    iris_frame = pd.DataFrame(iris.data, columns = iris.feature_names)

    iris_data_drift_report = Dashboard(iris_frame, iris_frame, column_mapping = None, tabs=[DriftTab])
    iris_data_drift_report.show()

    iris_data_and_target_drift_report = Dashboard(iris_frame[:75], iris_frame[75:], 
                                                  column_mapping = None, tabs=[DriftTab, CatTargetDriftTab])
    iris_data_and_target_drift_report.show()

    iris_data_and_target_drift_report.save('reports/iris_data_and_target_drift.html')

    iris_frame = pd.DataFrame(iris.data, columns = iris.feature_names)

    reference, production, y_train, y_test = model_selection.train_test_split(iris_frame, 
                                                                              iris.target, 
                                                                              random_state=0)

    model = neighbors.KNeighborsClassifier(n_neighbors=1)

    model.fit(reference, y_train)

    train_predictions = model.predict(reference)
    test_predictions = model.predict(production)

    reference['target'] = y_train
    reference['prediction'] = train_predictions

    production['target'] = y_test
    production['prediction'] = test_predictions

    reference.target = reference.target.apply(lambda x: iris.target_names[x])
    reference.prediction = reference.prediction.apply(lambda x: iris.target_names[x])

    production