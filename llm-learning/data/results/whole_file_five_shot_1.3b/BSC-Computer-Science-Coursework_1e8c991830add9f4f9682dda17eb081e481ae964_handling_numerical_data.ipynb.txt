
    '''
    Commit Message: "Added Data Science Practical 03 "handling_numerical_data""
    Original Code Cells:
    '''
    <Cell_0>
    import numpy as np
    from sklearn import preprocessing

    # create a feature
    feature = np.array([
                        [-500.5],
                        [-100.1],
                        [0],
                        [100.11],
                        [900.9]
                      ])

    # create scaler
    minmax_scaler = preprocessing.MinMaxScaler(feature_range=(0,1))

    # scale feature
    scaled_feature = minmax_scaler.fit_transform(feature)

    scaled_feature
    <\Cell_0>
    <Cell_1>
    from sklearn import preprocessing

    # create a feature
    feature = np.array([
                      [-1000.1],
                      [-200.2],
                      [500.5],
                      [600.6] ,
                      [9000.9]
                    ])

    # create scaler
    scaler  =  preprocessing.StandardScaler()

    # transform the feature
    standardized = scaler.fit_transform(feature)

    standardized
    <\Cell_1>
    <Cell_2>
    print( "Mean {}".format(round(standardized.mean())))
    print("Standard Deviation: {}".format(standardized.std()))
    <\Cell_2>
    <Cell_3>
    # using the RobustScaler method:

    # create scaler
    robust_scaler = preprocessing.RobustScaler()

    # transform feature
    robust_scaler.fit_transform(feature)
    <\Cell_3>
    <Cell_4>
    import numpy as np
    from sklearn.preprocessing import Normalizer

    # create feature matrix
    features = np.array([
                        [0.5, 0.5],
                        [1.1,	3.4] ,
                        [1.5, 20.2]