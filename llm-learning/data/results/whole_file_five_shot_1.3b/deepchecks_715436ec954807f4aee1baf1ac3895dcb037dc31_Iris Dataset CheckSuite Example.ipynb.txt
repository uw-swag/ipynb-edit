```python
    import pandas as pd
    import numpy as np
    np.random.seed(42)

    from sklearn.datasets import load_iris
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import train_test_split

    # Update warnings to not print source line
    import warnings

    def custom_formatwarning(msg, *args, **kwargs):
        # ignore everything except the message
        return str(msg) + '\n'

    warnings.formatwarning = custom_formatwarning

    iris_df = load_iris(return_X_y=False, as_frame=True)['frame']
    label_col = 'target'
    df_train, df_test = train_test_split(iris_df, stratify=iris_df[label_col], random_state=0)

    rf_clf = RandomForestClassifier()
    rf_clf.fit(df_train.drop(label_col, axis=1), df_train[label_col])

    from deepchecks import Dataset

    ds_train = Dataset(df_train, label = label_col)
    ds_test =  Dataset(df_test, label = label_col)

    from deepchecks.suites import OverallGenericCheckSuite

    OverallGenericCheckSuite.run(train_dataset=ds_train, test_dataset=ds_test, model=rf_clf, check_datasets_policy='both')

    train_len = round(0.67*iris_df.shape[0])
    alternative_train_df = Dataset(iris_df[:train_len], label = label_col)
    alternative_test_df = Dataset(iris_df[train_len:], label = label_col)

    OverallGenericCheckSuite.run(train_dataset=alternative_train_df, test_dataset=alternative_test_df,
                             model=rf_clf, check_datasets_policy='both')
    ```
