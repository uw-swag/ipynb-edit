```
    <Cell_0>
    # SETUP. You don't need to worry for now about what this code does or how it works. If you're ever curious about the 
    # code behind these exercises, it's available under an open source license here: https://github.com/Kaggle/learntools/
    from learntools.core import binder; binder.bind(globals())
    from learntools.python.ex2 import *
    print('Setup complete.')
    <\Cell_0>
    <Cell_1>
    def round_to_two_places(num):
        """Return the given number rounded to two decimal places. 
        
        >>> round_to_two_places(3.14159)
        3.14
        """
        # Replace this body with your own code.
        # ("pass" is a keyword that does literally nothing. We used it as a placeholder
        # because after we begin a code block, Python requires at least one line of code)
        pass

    q1.check()
    <\Cell_1>
    <Cell_2>
    #%%RM_IF(PROD)%%
    q1.assert_check_unattempted()
    <\Cell_2>
    <Cell_3>
    #%%RM_IF(PROD)%%
    def round_to_two_places(num):
        """Return the given number rounded to two decimal places. 
        
        >>> round_to_two_places(3.14159)
        3.14
        """
        return round(num, 2)

    q1.assert_check_passed()
    <\Cell_3>
    <Cell_4>
    #%%RM_IF(PROD)%%
    def round_to_two_places(num):
        """Return the given number rounded to two decimal places. 
        
        >>> round_to_two_places(3.14159)
        3.14
        """
        return round(num, 3)

    q1.assert_check_failed()
    <\Cell_4>
    <Cell_5>
   