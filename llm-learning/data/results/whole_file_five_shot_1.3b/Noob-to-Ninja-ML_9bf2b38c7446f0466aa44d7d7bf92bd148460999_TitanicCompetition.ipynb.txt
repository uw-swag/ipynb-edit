```python
    # Importing necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import accuracy_score
    from sklearn.preprocessing import LabelEncoder

    # Loading the dataset
    train_data = pd.read_csv('train.csv')
    test_data = pd.read_csv('test.csv')

    # Data preprocessing
    # Filling missing values
    train_data['Age'].fillna(train_data['Age'].median(), inplace=True)
    train_data['Embarked'].fillna(train_data['Embarked'].mode()[0], inplace=True)
    test_data['Age'].fillna(test_data['Age'].median(), inplace=True)
    test_data['Embarked'].fillna(test_data['Embarked'].mode()[0], inplace=True)

    # Encoding categorical variables
    label_encoder = LabelEncoder()
    train_data['Sex'] = label_encoder.fit_transform(train_data['Sex'])
    train_data['Embarked'] = label_encoder.fit_transform(train_data['Embarked'])
    test_data['Sex'] = label_encoder.fit_transform(test_data['Sex'])
    test_data['Embarked'] = label_encoder.fit_transform(test_data['Embarked'])

    # Feature selection
    features = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Embarked']
    X_train = train_data[features]
    y_train = train_data['Survived']
    X_test = test_data[features]

    # Model training
    model = LogisticRegression()
    model.fit(X_train, y_train)

    # Predicting on test data
    predictions = model.predict(X_test)
