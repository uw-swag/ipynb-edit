```markdown
    # Convention

    ## File Structure

    The project follows a standard file structure as follows:

    ```
    /data
        /raw
            training.csv
        /processed
            cleaned_data.csv
        /interim
            intermediate_data.csv
    ```

    ## Naming Conventions

    - Python files: Use lowercase with underscores. For example, `cleaned_data.py`.
    - Jupyter notebook files: Use lowercase with underscores. For example, `cleaned_data.ipynb`.
    - Markdown files: Use lowercase with underscores. For example, `convention.md`.
    - Python modules: Use lowercase with underscores. For example, `mlutils.py`.

    ## Code Formatting

    - Python: Use PEP8 for Python code.
    - Markdown: Use Markdown for README files.

    ## Version Control

    - Commit messages: Use imperative and present tense. For example, "Added new feature" or "Fixed bug in regression test".
    - Pull requests: Use clear and concise titles. For example, "Added feature to clean data" or "Fixed regression test".

    ## Documentation

    - README: Provide an overview of the project, its features, and how to install and use it.
    - CONTRIBUTING: Guidelines for contributing to the project.
    - REPORTING_BUGS: How to report bugs or issues.

    ## Testing

    - Unit tests: Write unit tests for individual functions and classes.
    - Integration tests: Write integration tests to verify the correct functioning of the system.
    - Regression tests: Test the system with known good data to ensure it's working as expected.

    ## Deployment

    - Documentation: Provide detailed instructions on how to deploy the system.
    - CI/CD: Use CI/CD tools for continuous integration and deployment.

    ## Code of Conduct

    - Code of conduct: Provide a code of conduct for the project.
    ```
    This convention helps maintain a consistent codebase and ensures that everyone