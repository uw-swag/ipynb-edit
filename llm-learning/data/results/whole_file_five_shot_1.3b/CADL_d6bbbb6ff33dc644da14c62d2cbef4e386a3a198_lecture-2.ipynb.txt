
    ### Instruction:
    [
    Commit Message:" Adding a new cell for the linear regression model"
    Original Code Cells:
    '''
    <Cell_0>
    # We're going to add a new cell for the linear regression model
    X = tf.placeholder(tf.float32, shape=[None, 2], name='X')
    Y = tf.placeholder(tf.float32, shape=[None, 3], name='Y')
    n_neurons = [2, 64, 64, 64, 64, 64, 3]

    current_input = X
    cost = tf.reduce_mean(
        tf.reduce_sum(distance(Y_pred, Y), 1))
    optimizer = tf.train.AdamOptimizer(0.001).minimize(cost)
<\Cell_0>
<Cell_1>
# Let's create a new network

# We'll connect the output of our last network to another one

# And then we'll retrain with our new Y_pred

# We'll now create a new cell for the linear regression model
X = tf.placeholder(tf.float32, shape=[None, 2], name='X')
Y = tf.placeholder(tf.float32, shape=[None, 3], name='Y')
n_neurons = [2, 64, 64, 64, 64, 3]

current_input = X
cost = tf.reduce_mean(
    tf.reduce_sum(distance(Y_pred, Y), 1))
optimizer = tf.train.AdamOptimizer(0.001).minimize(cost)
<\Cell_1>
<Cell_2>
# Let's create a new network

# We'll now create a new cell for the linear regression model
X = tf.placeholder(tf.float32, shape=[None, 2], name='X')
Y = tf