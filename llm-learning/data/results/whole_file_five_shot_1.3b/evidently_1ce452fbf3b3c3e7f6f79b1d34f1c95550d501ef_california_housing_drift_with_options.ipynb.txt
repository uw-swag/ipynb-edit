
<Cell_0>
import pandas as pd

from sklearn.datasets import fetch_california_housing

from evidently.dashboard import Dashboard
from evidently.pipeline.column_mapping import ColumnMapping
from evidently.tabs import DataDriftTab, NumTargetDriftTab

from evidently.model_profile import Profile
from evidently.profile_sections import DataDriftProfileSection
<\Cell_0>
<Cell_1>
dataset = fetch_california_housing(as_frame=True)
df = dataset.frame
<\Cell_1>
<Cell_2>
target = 'MedHouseVal'
prediction = 'prediction'

numerical_features = ['MedInc', 'HouseAge', 'AveRooms', 'AveBedrms', 'Population', 'AveOccup',
                      'Latitude', 'Longitude']
categorical_features = []
features = numerical_features 
<\Cell_2>
<Cell_3>
column_mapping = ColumnMapping()

column_mapping.target = target
column_mapping.prediction = prediction
column_mapping.numerical_features = numerical_features
column_mapping.categorical_features = categorical_features
<\Cell_3>
<Cell_4>
ref_data = df[:15000]
prod_data = df[15000:]
<\Cell_4>
<Cell_5>
data_and_target_drift_dashboard = Dashboard(tabs=[DataDriftTab(), NumTargetDriftTab()])

data_and_target_drift_dashboard.calculate(ref_data.sample(1000, random_state=0), 
                                          prod_data.sample(1000, random_state=0),
                                          column_mapping = column_mapping)

data_and_target_drift_dashboard.show()
<\Cell_5>
<Cell_6>
import numpy as np
from scipy.stats import anderson_ksamp
from evidently.options import DataDriftOptions
<\Cell_6>
<Cell_7>
def