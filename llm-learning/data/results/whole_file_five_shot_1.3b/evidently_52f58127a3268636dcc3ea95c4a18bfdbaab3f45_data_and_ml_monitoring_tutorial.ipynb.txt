```python
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import confusion_matrix
    from sklearn.ensemble import RandomForestClassifier

    # Load the data
    df = pd.read_csv('loan_data.csv')

    # Check for missing values
    print(df.isnull().sum())

    # Check the distribution of the target variable
    sns.countplot(df['Loan_Status'])
    plt.show()

    # Split the data into features and target variable
    X = df.drop('Loan_Status', axis=1)
    y = df['Loan_Status']

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Train a logistic regression model
    model = LogisticRegression()
    model.fit(X_train, y_train)

    # Make predictions
    y_pred = model.predict(X_test)

    # Print the accuracy of the model
    print("Accuracy:", model.score(X_test, y_test))

    # Create a confusion matrix
    cm = confusion_matrix(y_test, y_pred)

    # Visualize the confusion matrix
    sns.heatmap(cm, annot=True)
    plt.show()

    # Train a random forest classifier
    model = RandomForestClassifier()
    model.fit(X_train, y_train)

    # Make predictions
    y_pred = model.predict(X_test)

    # Print the accuracy of the model
    print("Accuracy:", model.score(X_test, y_test))

    # Create a confusion matrix
    cm = confusion_matrix(y_test, y