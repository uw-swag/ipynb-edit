





    ### Instruction:
    [
    Commit Message: "removing unused imports"

    Original Code Cells:
    '''
    <Cell_0>
import _pickle as pickle
import numpy as np
import matplotlib.pyplot
from matplotlib.pyplot import imshow
import keras
from keras.preprocessing import image
from keras.applications.imagenet_utils import decode_predictions, preprocess_input
from keras.models import Model
from sklearn.decomposition import PCA
from scipy.spatial import distance
from tqdm import tqdm
<\Cell_0>
<Cell_1>
model = keras.applications.VGG16(weights='imagenet', include_top=True)
model.summary()
<\Cell_1>
<Cell_2>
# get_image will return a handle to the image itself, and a numpy array of its pixels to input the network
def get_image(path):
    img = image.load_img(path, target_size=model.input_shape[1:3])
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)
    return img, x
<\Cell_2>
<Cell_3>
feat_extractor = Model(inputs=model.input, outputs=model.get_layer("fc2").output)
feat_extractor.summary()
<\Cell_3>
<Cell_4>
features = []
for image_path in tqdm(images):
    img, x = get_image(image_path)
    feat = feat_extractor.predict(x)[0]
    features.append(feat)
<\Cell_4>
<Cell_5>
features = np.array(features)
pca = PCA(n_components=300)
pca.fit(features)
pca_features = pca.transform(features)
<\Cell_5>
<Cell_6>
pickle.