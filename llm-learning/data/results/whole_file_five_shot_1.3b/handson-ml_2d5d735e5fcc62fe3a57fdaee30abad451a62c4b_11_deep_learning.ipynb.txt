
    n_epochs = 100
    batch_size = 50

    n_outputs = 10

    X = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)
    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)

    n_epochs = 10
    batch_size = 50

    n_outputs = 10

    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)
    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)

    n_outputs = 10

    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)
    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)

    n_outputs = 10

    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)
    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)

    n_outputs = 10

    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)
    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)

    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)
    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)

    y = tf.layers.dense(n_outputs, n_outputs, kernel_initializer=he_init)
    y = tf.layers.dense(n_