```python
    # Illustration of function approximation capabilities of DNNs
    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn.neural_network import MLPRegressor

    # Generate some data
    np.random.seed(0)
    X = np.random.normal(size=(100, 1))
    y = 3 * X[:, 0] + 2 + np.random.normal(size=100)

    # Fit a neural network
    regr = MLPRegressor(random_state=1, max_iter=300).fit(X, y)

    # Predict
    y_pred = regr.predict(X)

    # Plot the results
    plt.scatter(X, y)
    plt.plot(X, y_pred, color='red')
    plt.show()
    ```
