```python
    # Importing necessary libraries
    import pandas as pd
    import numpy as np
    import sklearn
    from sklearn.datasets import load_iris
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import train_test_split

    # Loading the data
    iris_df = load_iris(return_X_y=False, as_frame=True)['frame']
    label_col = 'target'
    df_train, df_test = train_test_split(iris_df, stratify=iris_df[label_col], random_state=0)

    # Training the model
    rf_clf = RandomForestClassifier()
    rf_clf.fit(df_train.drop(label_col, axis=1), df_train[label_col])

    # Importing necessary libraries and modules
    import deepchecks
    from deepchecks import Dataset

    # We explicitly state that this dataset has no categorical features, otherwise they will be automatically inferred
    # If the dataset has categorical features, the best practice is to pass a list with their names

    ds_train = Dataset(df_train, label_name=label_col, cat_features=[], set_datetime_from_dataframe_index=False)
    ds_test =  Dataset(df_test,  label_name=label_col, cat_features=[])

    # Running the suite
    suite = full_suite()
    suite.run(train_dataset=ds_train, test_dataset=ds_test, model=rf_clf)

    # Lets first print the suite to find the conditions that we want to change:
    suite

    # Now we can use the check's index and the condition's number to remove it:
    print(suite[6])
    suite[6].remove_condition(0)

    # Print and see that the condition was removed
    suite[6]
    ```
