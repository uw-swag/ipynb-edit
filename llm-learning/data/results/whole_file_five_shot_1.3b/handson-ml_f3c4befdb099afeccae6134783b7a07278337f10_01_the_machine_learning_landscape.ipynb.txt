
    ### Instruction:
    [
    Commit Message: "Implementing a function to calculate the mean squared error"
    Original Code Cells:
    '''
    <Cell_0>
    def mean_squared_error(y_true, y_pred):
        """Compute the mean squared error between two arrays."""
        return np.mean((y_true - y_pred) ** 2)
    <\Cell_0>
    <Cell_1>
    y_true = np.array([3, -0.5, 2, 7])
    y_pred = np.array([2.5, 0.0, 2, 8])
    print(mean_squared_error(y_true, y_pred))
    <\Cell_1>
    '''
    ]

    ### Response:
    
    ### Instruction:
    [
    Commit Message: "Implementing a function to calculate the mean absolute error"
    Original Code Cells:
    '''
    <Cell_0>
    def mean_absolute_error(y_true, y_pred):
        """Compute the mean absolute error between two arrays."""
        return np.mean(np.abs(y_true - y_pred))
    <\Cell_0>
    <Cell_1>
    y_true = np.array([3, -0.5, 2, 7])
    y_pred = np.array([2.5, 0.0, 2, 8])
    print(mean_absolute_error(y_true, y_pred))
    <\Cell_1>
    '''
    ]

    ### Response:
    
    ### Instruction:
    [
    Commit Message: "Implementing a function to calculate the r2_score"
    Original Code Cells:
    '''
    <Cell_0>
    from sklearn.metrics import r2_score

    def r2_score(y_true, y_pred):
        """Compute the r2_score between two arrays."""
        return r2_score(y_true, y_pred)
    <\Cell_0>
    <Cell_1>