```python
    import dash
    import dash_core_components as dcc
    import dash_html_components as html

    app = dash.Dash(__name__)

    app.layout = html.Div([
        dcc.TabPanel(label="Tab 1", children=[
            html.Div("Content for Tab 1"),
            dcc.Graph(id='example-graph'),
        ]),
        dcc.TabPanel(label="Tab 2", children=[
            html.Div("Content for Tab 2"),
            dcc.Graph(id='example-graph-2'),
        ]),
    ])

    @app.callback(
        dash.dependencies.Output('example-graph', 'figure'),
        [dash.dependencies.Input('tabs', 'value')]
    )
    def update_graph(tab_name):
        if tab_name == 'Tab 1':
            return {
                'data': [
                    {'x': [1, 2, 3], 'y': [4, 1, 2], 'type': 'bar', 'name': 'SF'},
                    {'x': [1, 2, 3], 'y': [2, 4, 5], 'type': 'bar', 'name': 'Montreal'},
                ],
                'layout': {
                    'title': 'Bar Chart'
                }
            }
        elif tab_name == 'Tab 2':
            return {
                'data': [
                    {'x': [1, 2, 3], 'y': [4, 1, 2], 'type': 'line', 'name': 'SF'},
                    {'x': [1, 2, 3], 'y': [2, 4, 5], 'type': 'line', 'name': 'Montreal'},
                ],
                'layout': {
                    'title': 'Line Chart'
                }
            }

    if __name__ == '__main__':
        app.run_server(debug=True)
    ```

    This code creates a Dash application with two tabs. The first tab displays a bar chart, and the second tab displays a line chart. The `