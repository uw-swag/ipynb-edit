
    The upgrade to djl 0.13.0 (#176) includes several improvements and bug fixes.

    - The `MultiHeadAttention` class has been updated to use the new `DotProductAttention` class. This class is responsible for calculating the attention scores.

    - The `transposeQkv` and `transposeOutput` methods have been added to the `MultiHeadAttention` class. These methods are used to transpose the query, key, and value matrices before passing them to the attention mechanism.

    - The `forwardInternal` method in the `MultiHeadAttention` class now returns the transposed output.

    - The `forward` method in the `MultiHeadAttention` class now accepts a `PairList<String, Object>` parameter, which is used to pass additional parameters to the attention mechanism.

    - The `forward` method in the `MultiHeadAttention` class now returns the transposed output of the attention mechanism.

    - The `forward` method in the `MultiHeadAttention` class now accepts a `ParameterStore` parameter, which is used to pass parameters to the attention mechanism.

    - The `forward` method in the `MultiHeadAttention` class now accepts a `NDList` parameter, which is used to pass the input to the attention mechanism.

    - The `forward` method in the `MultiHeadAttention` class now returns the output of the attention mechanism.

    - The `forward` method in the `MultiHeadAttention` class now accepts a `DataType` parameter, which is used to specify the data type of the input and output.

    - The `forward` method in the `MultiHeadAttention` class now accepts a `Shape...` parameter, which is used to specify the shape of the input.

    - The `forward` method in the `MultiHeadAttention` class now accepts a `NDManager` parameter, which is used to create the input and output tensors.

    - The `forward` method in the `MultiHeadAttention` class now accepts a `boolean` parameter, which is used to specify whether the attention mechanism is in training mode or not.

    - The `forward` method in the `MultiHeadAttention` class now accepts a `PairList<String, Object>` parameter