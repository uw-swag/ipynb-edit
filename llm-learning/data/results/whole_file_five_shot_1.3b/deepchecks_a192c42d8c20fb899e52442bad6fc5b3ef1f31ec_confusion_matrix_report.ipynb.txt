





    ### Instruction:
    [
    Commit Message: "[Automatic] Examples Update (#511)"
    Original Code Cells:
    '''
    <Cell_0>
from deepchecks.base import Dataset
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
import pandas as pd
from deepchecks.checks.performance import ConfusionMatrixReport
<\Cell_0>
<Cell_1>
iris = load_iris(as_frame=True)
clf = RandomForestClassifier()
frame = iris.frame
X = iris.data
y = iris.target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)
clf.fit(X_train, y_train)
ds = Dataset(pd.concat([X_test, y_test], axis=1), 
            features=iris.feature_names,
            label='target')
<\Cell_1>
<Cell_2>
check = ConfusionMatrixReport()
<\Cell_2>
<Cell_3>
check.run(ds, clf)
<\Cell_3>

    '''
    ]

    ### Response:
    




    ### Instruction:
    [
    Commit Message: "[Automatic] Examples Update (#512)"
    Original Code Cells:
    '''
    <Cell_0>
from deepchecks.base import Dataset
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
import pandas as pd
from deepchecks.checks.performance import MeanSquaredError
<\Cell_0>
<Cell_1>
boston = load_boston(as_frame=True)
clf = GradientBoostingRegressor()
frame = b