
    The code you provided has been updated to make the code more readable and maintainable. Here are some of the changes I made:

    1. I replaced the `linspace` function with `np.linspace` to generate evenly spaced values.
    2. I replaced the `sin` function with `np.sin` to generate sine wave.
    3. I replaced the `array` function with `np.array` to create a numpy array.
    4. I replaced the `imshow` function with `matplotlib.pyplot.imshow` to display an image.
    5. I replaced the `classification_report` function with `sklearn.metrics.classification_report` to generate a detailed report.
    6. I replaced the `GridSearchCV` function with `sklearn.model_selection.GridSearchCV` to perform a grid search for hyperparameter tuning.
    7. I replaced the `train_test_split` function with `sklearn.model_selection.train_test_split` to split the data into training and testing sets.
    8. I replaced the `CalibratedClassifierCV` function with `sklearn.calibration.CalibratedClassifierCV` to calibrate the classifier.
    9. I replaced the `argsort` function with `np.argsort` to sort the features by their importance.
    10. I replaced the `stratify` parameter in the `train_test_split` function with `stratify = Y_train` to maintain the proportion of classes in the training set.
    11. I replaced the `idxmax` function with `pd.DataFrame(y_val).idxmax(axis=1).values` to get the predicted class for each sample.
    12. I replaced the `sigmoid` method in the `CalibratedClassifierCV` function with `method='sigmoid'` to calibrate the classifier.
    13. I replaced the `split` method in the `classification_report` function with `.split()[19]` to get the F1-score.
    14. I replaced the `while` loop with a while loop to perform the grid search.
    15. I replaced the `max` function with `max