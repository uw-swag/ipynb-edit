```
    ### Instruction:
    [
    Commit Message: "Add notebooks for chapters 21 to 30"
    Original Code Cells:
    '''
    <Cell_0>
from __future__ import division, print_function, unicode_literals

import numpy as np
import numpy.random as rnd
rnd.seed(42) # to make this notebook's output stable across runs

import os

%matplotlib inline
import matplotlib
import matplotlib.pyplot as plt
plt.rcParams['axes.labelsize'] = 14
plt.rcParams['xtick.labelsize'] = 12
plt.rcParams['ytick.labelsize'] = 12

PROJECT_ROOT_DIR = "."
CHAPTER_ID = "classification"

def save_fig(fig_id, tight_layout=True):
    path = os.path.join(PROJECT_ROOT_DIR, "images", CHAPTER_ID, fig_id + ".png")
    print("Saving figure", fig_id)
    if tight_layout:
        plt.tight_layout()
    plt.savefig(path, format='png', dpi=300)
<\Cell_0>
<Cell_1>
from sklearn.datasets import fetch_mldata
mnist = fetch_mldata('MNIST original')
<\Cell_1>
<Cell_2>
mnist
<\Cell_2>
<Cell_3>
X, y = mnist["data"], mnist["target"]
X.shape
<\Cell_3>
<Cell_4>
y.shape
<\Cell_4>
<Cell_5>
28*28
<\Cell_5>
<Cell_6>
def plot_digit(data):
    image = data.reshape(28, 28)
    plt.imshow(image, cmap = matplotlib.cm.binary,
               interpolation="nearest")
    plt.axis("off")

some_digit = X[36