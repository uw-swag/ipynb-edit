```python
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt

    from mlchecks.checks.leakage import *
    from mlchecks.base import Dataset

    # Simplify display
    df = pd.DataFrame(np.random.randn(100, 3), columns=['x1', 'x2', 'x3'])
    df['x4'] = df['x1'] * 0.5 + df['x2']
    df['label'] = df['x2'] + 0.1 * df['x1']
    df['x5'] = df['label'].apply(lambda x: 'v1' if x < 0 else 'v2')

    ds = Dataset(df, label='label')

    # Simplify display
    single_feature_contribution(ds)

    # Simplify display
    my_check = SingleFeatureContribution(ppscore_params={'sample': 10})
    my_check.run(dataset=ds)

    df_validation = df.copy()
    df_validation['x2'] = df['x2'] + 0.5 * df['x1']
    df_validation['x3'] = 0.3 * df['x3'] + df['label']

    ds_validation = Dataset(df_validation, label='label')

    # Simplify display
    single_feature_contribution_train_validation(train_dataset=ds, validation_dataset=ds_validation)

    # Simplify display
    my_check = SingleFeatureContributionTrainValidation(ppscore_params={'sample': 10})
    my_check.run(train_dataset=ds, validation_dataset=ds_validation)
    ```
