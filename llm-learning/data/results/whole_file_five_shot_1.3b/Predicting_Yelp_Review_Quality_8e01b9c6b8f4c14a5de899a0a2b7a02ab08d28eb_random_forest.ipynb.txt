```python
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.linear_model import LogisticRegression
    from sklearn.model_selection import train_test_split
    from sklearn.metrics import accuracy_score
    from sklearn.preprocessing import StandardScaler
    import pandas as pd
    import numpy as np

    # Load the dataset
    df = pd.read_csv('perovskite.csv')

    # Preprocess the data
    # Assuming that the last column is the target variable and the rest are features
    X = df.iloc[:, :-1].values
    y = df.iloc[:, -1].values

    # Split the dataset into the Training set and Test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

    # Feature Scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Random Forest Classifier
    classifier_rf = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)
    classifier_rf.fit(X_train, y_train)
    y_pred_rf = classifier_rf.predict(X_test)

    # Logistic Regression
    classifier_lr = LogisticRegression(random_state = 0)
    classifier_lr.fit(X_train, y_train)
    y_pred_lr = classifier_lr.predict(X_test)

    # Accuracy
    accuracy_rf = accuracy_score(y_test, y_pred_rf)
    accuracy_lr = accuracy_score(y_test, y_pred_lr)

    print(f'Random Forest Accuracy: {accuracy_rf}')
    print(f'Logistic Regression Accuracy: {accuracy_lr}')
    ```
