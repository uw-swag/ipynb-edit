```python
    import pandas as pd
    from sklearn.metrics import mean_squared_error
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression

    # Load the data
    df = pd.read_csv('data.csv')

    # Check for missing values
    print(df.isnull().sum())

    # Check for duplicate rows
    print(df.duplicated().sum())

    # Check for outliers
    z_scores = np.abs((df - df.mean()) / df.std())
    print(df[(z_scores > 2).any(axis=1)])

    # Check for data types
    print(df.dtypes)

    # Check for data distribution
    print(df.describe())

    # Split the data into train and test sets
    X_train, X_test, y_train, y_test = train_test_split(df.drop('target', axis=1), df['target'], test_size=0.2, random_state=42)

    # Train a linear regression model
    model = LinearRegression()
    model.fit(X_train, y_train)

    # Make predictions
    predictions = model.predict(X_test)

    # Check the mean squared error of the predictions
    print('Mean Squared Error:', mean_squared_error(y_test, predictions))
    ```
    This notebook provides a set of exemplary data quality checks. It first checks for missing values, duplicate rows, outliers, data types, and data distribution. It then splits the data into a training set and a test set, trains a linear regression model, and makes predictions. Finally, it checks the mean squared error of the predictions.
