
    '''
    Commit Message: "Update 03. K-Means Clustering.ipynb"

    Original Code Cells:
    '''
    <Cell_0>
import numpy as np 
import pandas as pd
from scipy import ndimage 
from scipy.cluster import hierarchy 
from scipy.spatial import distance_matrix 
from matplotlib import pyplot as plt 
from sklearn import manifold, datasets 
from sklearn.cluster import KMeans 
from sklearn.datasets import make_blobs 
%matplotlib inline
<\Cell_0>
<Cell_1>
X1, y1 = make_blobs(n_samples=50, centers=[[4,4], [-2, -1], [1, 1], [10,4]], cluster_std=0.9)
<\Cell_1>
<Cell_2>
plt.scatter(X1[:, 0], X1[:, 1], marker='o') 
<\Cell_2>
<Cell_3>
kmeans = KMeans(n_clusters = 4)
<\Cell_3>
<Cell_4>
kmeans.fit(X1,y1)
<\Cell_4>
<Cell_5>
# Create a figure of size 6 inches by 4 inches.
plt.figure(figsize=(6,4))

# These two lines of code are used to scale the data points down,
# Or else the data points will be scattered very far apart.

# Create a minimum and maximum range of X1.
x_min, x_max = np.min(X1, axis=0), np.max(X1, axis=0)

# Get the average distance for X1.
X1 = (X1 - x_min) / (x_max - x_min)

# This loop displays all of the datapoints.
for i in range(X1.shape[0]):
    # Replace the data points with their respective cluster value 
    # (ex. 0) and is color coded with a col