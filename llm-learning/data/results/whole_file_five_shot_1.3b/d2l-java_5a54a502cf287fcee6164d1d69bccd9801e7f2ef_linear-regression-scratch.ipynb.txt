
    The training utils class has been refactored to improve the readability and maintainability of the code. The class now follows the MVC (Model-View-Controller) design pattern, which is a common design pattern in software development. The model represents the data and the business logic, the view represents the user interface and the controller handles the communication between the model and the view.

    The refactoring includes:
    1. Moved the training utils class to a separate file.
    2. Separated the model, view, and controller into different classes.
    3. Made the model a separate class to keep the code clean and organized.
    4. Made the view a separate class to keep the code clean and organized.
    5. Made the controller a separate class to keep the code clean and organized.

    The refactoring also includes:
    1. Changed the naming convention of the variables and methods to follow the PEP8 style guide.
    2. Added comments to explain the purpose of each class and method.
    3. Added a main method to test the functionality of the refactored code.

    The refactoring also includes:
    1. Added a method to generate synthetic data for testing.
    2. Added a method to perform linear regression.
    3. Added a method to compute the squared loss.
    4. Added a method to perform stochastic gradient descent.
    5. Added a method to test the functionality of the refactored code.
