
    ### Code Cells:
    ### code_train, target_train = train_train
    ### target_test = target_test

    ### code_test = target_test
<\Cell_10>
<Cell_11>
# Create a train/test split
data_train, data_test, target_train, target_test = train_test_split(
    data, target, test_size=.25, random_state=0
)

# Create the model as we did before
model.fit(data_train, target_train)

# And for the test set
pred_test = model.predict(data_test)

# Print the accuracy for the test set
print("Testing Accuracy:", accuracy_score(target_test, pred_test))
<\Cell_10>
<Cell_11>
# Create the model as we did before
model.fit(data_train, target_train)

# And for the test set
pred_test = model.predict(data_test)

# Print the accuracy for the test set
print("Testing Accuracy:", accuracy_score(target_test, pred_test))
<\Cell_11>
<Cell_2>
# Create the model as we did before
model.fit(data_train, target_train)

# And for the test set
pred_test = model.predict(data_test)

# Print the accuracy for the test set
print("Testing Accuracy:", accuracy_score(target_test, pred_test))
<\Cell_2>
<Cell_3>
# Create the model as we did before
model.fit(data_train, target_train)

# And for the test set
pred_test = model.predict(data_test)

# Print the accuracy for the test set
print("Testing Accuracy:", accuracy_score(target_test, pred_test))
<\Cell_3>
<Cell_4>
# Create the model as we did before
model.fit(data_train, target_train)

# And for the test set
pred_test = model.predict(data_test)