```
    <Cell_0>
    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn.linear_model import LinearRegression
    from sklearn.metrics import mean_squared_error, r2_score
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import PolynomialFeatures

    np.random.seed(0)
    X = np.random.randn(100, 1)
    y = 2 + 3 * X + np.random.randn(100, 1)
    <\Cell_0>
    <Cell_1>
    plt.scatter(X, y)
    plt.xlabel('X')
    plt.ylabel('y')
    plt.show()
    <\Cell_1>
    <Cell_2>
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    <\Cell_2>
    <Cell_3>
    poly = PolynomialFeatures(degree=2)
    X_train_poly = poly.fit_transform(X_train)
    X_test_poly = poly.transform(X_test)
    <\Cell_3>
    <Cell_4>
    model = LinearRegression()
    model.fit(X_train_poly, y_train)
    <\Cell_4>
    <Cell_5>
    y_pred = model.predict(X_test_poly)
    <\Cell_5>
    <Cell_6>
    print('Coefficients: \n', model.coef_)
    print('Mean squared error: %.2f' % mean_squared_error(y_test, y_pred))
    print('Coefficient of determination: %.2f' % r2_score(y_test, y_pred))
    <\Cell_6>
    <Cell_7>
    plt.scatter(X, y)
    plt.plot(X, y_pred, color='red')
    plt