```
    ## Code: naive_comparison.py

    ## Author: Your Name

    ## Description:
    This script contains the implementation of a naive comparison function.

    ## Importing necessary libraries
    import pandas as pd
    from mlchecks import Dataset
    from mlchecks.checks.integrity.rare_format_detection import RareFormatDetection

    ## Setting pandas options
    pd.set_option('display.max_columns', None)

    ## Generating random data
    np.random.seed(42)
    datelist = pd.date_range(start=datetime.today(), periods=200, freq='D', normalize=True)
    s_date = pd.Series([d.strftime('%Y-%m-%d') for d in datelist], name='date')

    emaillist = [''.join(np.random.choice(a=list('abcdefghijklmnopqrstuvwxyz'), p=[1/26]*26, size=np.random.choice(a=[6,7,8], p=[0.2, 0.5, 0.3]))) + '@gmail.com' for x in range(200)]
    s_email = pd.Series(emaillist, name='email')

    df = pd.DataFrame([s_date, s_email]).T

    ## Displaying the first few rows of the dataframe
    df.head()

    ## Creating a dataset from the dataframe
    ds = Dataset(df)

    ## Running the rareformat detection check
    check = RareFormatDetection()

    check.run(dataset=ds)

    ## Changing dates to different format
    df['date'].loc[0:2] = [datetime.strptime(d, '%Y-%m-%d').strftime('%Y-%b-%d') for d in df['date'].loc[0:2]]

    ## Ch