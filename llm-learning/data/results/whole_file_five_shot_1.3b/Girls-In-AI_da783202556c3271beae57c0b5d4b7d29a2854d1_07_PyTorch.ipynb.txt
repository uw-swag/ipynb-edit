```
    # Load PyTorch library
    !pip3 install torch

    # Creating a zero tensor
    x = torch.Tensor(3, 4)
    print("Type: {}".format(x.type()))
    print("Size: {}".format(x.shape))
    print("Values: \n{}".format(x))

    # Creating a random tensor
    x = torch.randn(2, 3) # normal distribution
    print (x)

    # Zero and Ones tensor
    x = torch.zeros(2, 3)
    print (x)
    x = torch.ones(2, 3)
    print (x)

    # List → Tensor
    x = torch.Tensor([[1, 2, 3],[4, 5, 6]])
    print("Size: {}".format(x.shape)) 
    print("Values: \n{}".format(x))

    # NumPy array → Tensor
    x = torch.from_numpy(np.random.rand(2, 3))
    print("Size: {}".format(x.shape)) 
    print("Values: \n{}".format(x))

    # Changing tensor type
    x = torch.Tensor(3, 4)
    print("Type: {}".format(x.type()))
    x = x.long()
    print("Type: {}".format(x.type()))

    # Addition
    x = torch.randn(2, 3)
    y = torch.randn(3, 2)
    z = torch.mm(x, y)
    print("Size: {}".format(z.shape)) 
    print("Values: \n{}".format(z))

    # Dangers of reshaping (unintended consequences)
    x = torch.tensor([
        [[1,1,1,1], [2,2,2,2], [3,3,3,3]],
        [[10,10,10,10], [20,20,