
    ###
<\Cell_285>
<Cell_286>
plot_digits(X_pca_tsne_reduced, y)
plt.show()
<\Cell_286>
<Cell_287>
from sklearn.decomposition import PCA

pca_tsne = PCA(n_components=0.95, random_state=42).fit(X)
t0 = time.time()
X_pca_tsne_reduced = pca_tsne.transform(X)
t1 = time.time()
print("PCA+t-SNE took {:.1f}s.".format(t1 - t0))
plot_digits(X_pca_tsne_reduced, y)
plt.show()
<\Cell_287>
<Cell_288>
from sklearn.manifold import LocallyLinearEmbedding

t0 = time.time()
X_lle_reduced = LocallyLinearEmbedding(n_components=2, random_state=42).fit_transform(X)
t1 = time.time()
print("LLE took {:.1f}s.".format(t1 - t0))
plot_digits(X_lle_reduced, y)
plt.show()
<\Cell_288>
<Cell_289>
from sklearn.decomposition import MDS

t0 = time.time()
X_mds_reduced = MDS(n_components=2, random_state=42).fit(X)
t1 = time.time()
print("MDS took {:.1f}s.".format(t1 - t0))
plot_digits(X_mds_reduced, y)
plt.show()
<\Cell_289>
<Cell_290>
from sklearn.manifold import LocallyLinearEmbedding

t0 = time.time()
X_lle_reduced = LocallyLinearEmbedding(n_components=2, random_state=42).fit_transform(X)