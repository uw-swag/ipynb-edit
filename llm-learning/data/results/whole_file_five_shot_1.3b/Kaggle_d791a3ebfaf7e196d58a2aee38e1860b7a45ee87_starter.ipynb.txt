```python
    <Cell_0>
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import classification_report, confusion_matrix

    # Load the dataset
    superheroes = pd.read_csv('superheroes.csv')
    superheroes.head()
    </Cell_0>

    <Cell_1>
    # Check for missing values
    superheroes.isnull().sum()
    </Cell_1>

    <Cell_2>
    # Check the distribution of the 'intelligence' column
    sns.distplot(superheroes['intelligence'])
    </Cell_2>

    <Cell_3>
    # Correlation matrix
    correlation_matrix = superheroes.corr()
    sns.heatmap(correlation_matrix, annot=True)
    </Cell_3>

    <Cell_4>
    # Split the dataset into features and target variable
    X = superheroes.drop('superhero', axis=1)
    y = superheroes['superhero']

    # Split the dataset into training set and test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Feature Scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Train the model
    classifier = RandomForestClassifier(n_estimators=200)
    classifier.fit(X_train, y_train)

    # Predict the test set results
    y_pred = classifier.predict(X_test)

    # Evaluate the model
    print(confusion_matrix(y_test, y_pred))
    print