```python
    import json

    def display_json(obj):
        """
        This function converts the given object into a JSON string.
        """
        return json.dumps(obj, indent=4)

    # Test the function
    print(display_json(iris))
    print(display_json(df))
    print(display_json(pd.DataFrame(X)))
    print(display_json(pd.DataFrame({'a':[3,4], 'b':[2,2], 'c':[None, None], 'd':['a', 4]})))
    ```

    The function `display_json` is defined to convert the given object into a JSON string. The `json.dumps` function is used to convert the object into a JSON string. The `indent` parameter is used to specify the number of spaces to use for indentation in the output JSON string.

    The function is then tested with the iris dataset, a DataFrame, and a DataFrame with specific column values.

    The output of the function is the JSON string representation of the input object.
