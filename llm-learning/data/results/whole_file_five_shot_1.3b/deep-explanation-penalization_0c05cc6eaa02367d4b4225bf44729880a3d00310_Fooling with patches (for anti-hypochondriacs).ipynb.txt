```python
    import tensorflow as tf

    # Define your model
    model = tf.keras.models.Sequential([
        tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(150, 150, 3)),
        tf.keras.layers.MaxPooling2D(2, 2),
        tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),
        tf.keras.layers.MaxPooling2D(2, 2),
        tf.keras.layers.Conv2D(128, (3, 3), activation='relu'),
        tf.keras.layers.MaxPooling2D(2, 2),
        tf.keras.layers.Flatten(),
        tf.keras.layers.Dense(512, activation='relu'),
        tf.keras.layers.Dense(1, activation='sigmoid')
    ])

    # Compile your model
    model.compile(loss='binary_crossentropy',
                  optimizer=RMSprop(lr=1e-4),
                  metrics=['accuracy'])
    ```

    The dilation parameter in the `Conv2D` layer is used to control the amount of dilation. It controls the amount of spacing between the kernel values. A larger dilation value means more spacing between kernel values.

    In the code above, I've added a `Conv2D` layer with dilation set to 2, which will result in a 3x3 kernel being used. This is a common practice in image processing to reduce the spatial size of the feature map.
