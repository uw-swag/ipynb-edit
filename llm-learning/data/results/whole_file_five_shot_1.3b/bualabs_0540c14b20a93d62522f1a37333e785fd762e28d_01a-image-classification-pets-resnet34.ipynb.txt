```
    ### Instruction:
    [
    Commit Message: "Run all cells, save to edit markdown later"
    Original Code Cells:
    '''
    <Cell_0>
%reload_ext autoreload
%autoreload 2
%matplotlib inline
<\Cell_0>
<Cell_1>
from fastai import *
from fastai.vision import *
from fastai.metrics import error_rate
<\Cell_1>
<Cell_2>
URLs.PETS
<\Cell_2>
<Cell_3>

<\Cell_3>
<Cell_4>
path = untar_data(URLs.PETS)
path.ls()
<\Cell_4>
<Cell_5>
path_annotations = path/'annotations'
path_images = path/'images'
<\Cell_5>
<Cell_6>
filenames = get_image_files(path_images)
filenames[:5]
<\Cell_6>
<Cell_7>
batchsize = 64
np.random.seed(42)
regex_pattern = r'/([^/]+)_\d+.jpg$'
<\Cell_7>
<Cell_8>
data = ImageDataBunch.from_name_re(path_images, filenames, 
                                   regex_pattern, ds_tfms=get_transforms(), 
                                   size=224, bs=batchsize).normalize()
<\Cell_8>
<Cell_9>
len(data.train_ds), len(data.valid_ds)
<\Cell_9>
<Cell_10>
data.show_batch(rows=3, figsize=(12, 9))
<\Cell_10>
<Cell_11>
print(data.classes)
<\Cell_11>
<Cell_12>
print(data.c)
<\Cell_12>
<Cell_13>
len(data.classes)
<\Cell_13>
<Cell_14>
learn = cnn_le