```python
    import tensorflow as tf
    from tensorflow.keras import datasets, layers, models

    class DeepTransferLearning:
        def __init__(self, input_shape, num_classes):
            self.input_shape = input_shape
            self.num_classes = num_classes

        def create_model(self):
            model = models.Sequential()
            model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=self.input_shape))
            model.add(layers.MaxPooling2D((2, 2)))
            model.add(layers.Conv2D(64, (3, 3), activation='relu'))
            model.add(layers.MaxPooling2D((2, 2)))
            model.add(layers.Conv2D(64, (3, 3), activation='relu'))

            model.add(layers.Flatten())
            model.add(layers.Dense(64, activation='relu'))
            model.add(layers.Dense(self.num_classes, activation='softmax'))

            model.compile(optimizer='adam',
                          loss='categorical_crossentropy',
                          metrics=['accuracy'])

            return model

        def train_model(self, train_images, train_labels):
            model = self.create_model()

            history = model.fit(train_images, train_labels, epochs=10, 
                                validation_data=(validation_data, validation_labels))

            return history

        def evaluate_model(self, test_images, test_labels):
            test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)

            return test_loss, test_acc
    ```
