
    '''
    ### Instruction:
    [
    Commit Message: "Added CSV export"
    Original Code Cells:
    '''
    <Cell_0>
from __future__ import print_function
from ipywidgets import interact, interactive, fixed, interact_manual
import ipywidgets as widgets
from ipywidgets import Button, HBox, VBox
import random
import threading
from IPython.display import display, clear_output
import time
import math
from redpitaya.overlay.mercury import mercury as FPGA

%matplotlib notebook
import matplotlib
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
from matplotlib.animation import FuncAnimation
from IPython.display import display, clear_output
from datetime import datetime, date
import pandas as pd

overlay = FPGA()
ANALOG_TEMP = FPGA.analog_in(0) # define which pin will be used for temperature sensor
voc_air_pin = FPGA.analog_in(1) # define which pin will be used for VOC sensor
alcohol_pin = FPGA.analog_in(2) # define which pin will be used for alcohol sensor

keep_going = False

def work():
    global keep_going
    while keep_going == True:
        time.sleep(0.2)
        voc_volt = voc_air_pin.read()
        voc_gas = voc_volt/(5.0)
        #Scale the result to be between 2.0 and 30.0 to keep on a similar scale to temperature
        voc_ratio = (voc_gas/voc_air)*3
        Alcohol_volt = ANALOG_Alcohol_pin.read()
        Alcohol_gas = Alcohol_volt/(5.0-Alcohol_volt)
        #Scale the result to be between 2.0 and 30.0 to keep on a similar scale to temperature
        Alcohol_ratio = (1/(Alcohol_gas/1.85))*2
        clear_output(wait=