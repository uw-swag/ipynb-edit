```
    # Bump to version 0.7.1
    !pip install -q atomai==0.7.1

    data_dim = X.shape[-1]

    # Initialize model
    dklgp = aoi.models.dklGPR(data_dim)
    # Train
    dklgp.fit(
        X, y, # inputs and outputs
        training_cycles=100, precision="single", lr=1e-2  # training parameters
    )
    mean, var = dklgp.predict(X, batch_size=len(X))
    dklgp = aoi.models.dklGPR(data_dim)
    dklgp.fit(X_p, y_p, training_cycles=100, precision="single", lr=1e-2)
    mean, var = dklgp.predict(X, batch_size=len(X))
    mean, var = dklgp.predict(X, batch_size=len(X))
    split_ = 1500

    X_p = X[xy_stack[:, 0]<split_]
    y_p = y[xy_stack[:, 0]<split_].T

    # Train
    dklgp = aoi.models.dklGPR(data_dim)
    dklgp.fit(X_p, y_p, training_cycles=300, precision="single", lr=1e-3)

    # Predict
    mean, var = dklgp.predict(X, batch_size=len(X))
    X_t = X[xy_stack[:, 0]>split_]
    y_t = y[xy_stack[:, 0]>split_]

    mean_t, _ = dklgp.predict(X_t, batch_size=len(X_t))

    ```
