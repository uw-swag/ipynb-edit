```python
    import numpy as np
    import pandas as pd
    from sklearn.model_selection import train_test_split
    from sklearn.metrics import mean_squared_error
    from sklearn.svm import SVR
    from warnings import filterwarnings
    filterwarnings('ignore')

    # Load the dataset
    df = pd.read_csv("Hitters.csv")
    df = df.dropna()

    # Convert categorical variables to dummy variables
    dms = pd.get_dummies(df[['League', 'Division', 'NewLeague']])

    # Combine the dummy variables with the main dataframe
    X = pd.concat([df.drop(['Salary', 'League', 'Division', 'NewLeague'], axis=1).astype('float64'), dms[['League_N', 'Division_W', 'NewLeague_N']]], axis=1)

    # Define the target variable
    y = df['Salary']

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

    # Train the SVR model
    svr_model = SVR(kernel='linear').fit(X_train, y_train)

    # Make predictions on the test set
    y_pred = svr_model.predict(X_test)

    # Calculate the root mean squared error of the predictions
    rmse = np.sqrt(mean_squared_error(y_test, y_pred))

    # Print the root mean squared error
    print("Root Mean Squared Error: ", rmse)
    ```
