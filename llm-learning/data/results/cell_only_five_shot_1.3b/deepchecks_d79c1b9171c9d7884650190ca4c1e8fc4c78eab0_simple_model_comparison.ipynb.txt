```python
    from sklearn.metrics import mean_squared_error
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestRegressor
    from sklearn.tree import DecisionTreeRegressor

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Fit a decision tree regressor
    dt_reg = DecisionTreeRegressor(random_state=42)
    dt_reg.fit(X_train, y_train)

    # Fit a random forest regressor
    rf_reg = RandomForestRegressor(random_state=42)
    rf_reg.fit(X_train, y_train)

    # Compare the MSE of decision tree and random forest
    mse_dt = mean_squared_error(y_test, dt_reg.predict(X_test))
    mse_rf = mean_squared_error(y_test, rf_reg.predict(X_test))

    print(f"Decision Tree MSE: {mse_dt}")
    print(f"Random Forest MSE: {mse_rf}")

    # Add the "tree" option to the simple model comparison
    if mse_dt < mse_rf:
        print("The decision tree model performs better than the random forest model.")
    else:
        print("The random forest model performs better than the decision tree model.")
    ```
