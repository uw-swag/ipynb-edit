```python
    # Performance Report (#75)
    # ------------------------

    # Import necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import classification_report, accuracy_score

    # Load the dataset from a CSV file
    data = pd.read_csv('../../Datasets/car_evaluation.csv')
    data.head()

    # Define the target variable
    y = data['decision']

    # Drop the target variable from the dataset
    X = data.drop(columns=['decision'])

    # Encode categorical variables
    encoder = LabelEncoder()
    for column in X.columns:
        X[column] = encoder.fit_transform(X[column])

    # Encode target variable
    y = encoder.fit_transform(y)

    # Split the dataset into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

    # Train and evaluate Random Forest model
    rf_model = RandomForestClassifier()
    rf_model.fit(X_train, y_train)
    y_pred_rf = rf_model.predict(X_test)

    print('Random Forest Model:')
    print(f'Accuracy: {accuracy_score(y_test, y_pred_rf)}')
    print(classification_report(y_test, y_pred_rf))

    # Train and evaluate SVM model
    svm_model = SVC()
    svm_model.fit(X_train, y_train)
    y_pred_svm = svm_model.predict(X_test)

    print('SVM Model:')
    print(f'Accuracy: {accuracy_score(y_test, y_pred_svm)}')
    print