```python
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import confusion_matrix, accuracy_score
    from sklearn.metrics import classification_report

    # Load the dataset
    df = pd.read_csv('your_dataset.csv')

    # Preprocessing
    # Fill missing values
    df.fillna(df.mean(), inplace=True)

    # Encode categorical variables
    df = pd.get_dummies(df)

    # Split the dataset
    X = df.drop('target', axis=1)
    y = df['target']
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Feature Scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Model Training
    classifier = RandomForestClassifier(n_estimators=200, random_state=42)
    classifier.fit(X_train, y_train)

    # Model Prediction
    y_pred = classifier.predict(X_test)

    # Model Evaluation
    cm = confusion_matrix(y_test, y_pred)
    print('Confusion Matrix:')
    print(cm)

    print('\nAccuracy Score:', accuracy_score(y_test, y_pred))

    print('\nClassification Report:')
    print(classification_report(y_test, y_pred))

    # Visualization
    plt.figure(figsize=(10,5))
    plt.hist(y, color='blue', edgecolor='black')
    plt.title('Target Variable Distribution')