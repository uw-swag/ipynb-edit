```python
    class Restartable:
        def __init__(self, model):
            self.model = model
            self.failed_attempts = 0

        def fit(self, X, y):
            try:
                self.model.fit(X, y)
                self.failed_attempts = 0
            except Exception as e:
                self.failed_attempts += 1
                if self.failed_attempts < 3:
                    print(f"Failed attempt {self.failed_attempts} of 3. Retrying...")
                    self.fit(X, y)
                else:
                    print("Failed 3 times. Stopping.")
                    raise e

        def predict(self, X):
            try:
                return self.model.predict(X)
            except Exception as e:
                print("Model prediction failed. Retrying...")
                self.fit(X, y)

        def score(self, X, y):
            try:
                return self.model.score(X, y)
            except Exception as e:
                print("Model score calculation failed. Retrying...")
                self.fit(X, y)
    ```

    ### Instruction:
    [
    Commit Message: "Adding a new feature"
    Original Code Cells:
    '''
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import train_test_split

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    clf = RandomForestClassifier(n_estimators=100)
    clf.fit(X_train, y_train)

    y_pred = clf.predict(X_test)
    '''
    ]

    ### Response:
    The new feature is a new classification algorithm. Let's add a new feature to the existing code.

    ### Instruction:
    [
    Commit Message: "Adding a new feature"
    Original Code Cells:
    '''
    from sklearn.