```
    from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OrdinalEncoder
from sklearn.ensemble import RandomForestClassifier

numeric_transformer = SimpleImputer()
categorical_transformer = Pipeline(
    steps=[("imputer", SimpleImputer(strategy="most_frequent")), ("encoder", OrdinalEncoder())]
)

train_ds.features
preprocessor = ColumnTransformer(
    transformers=[
        ("num", numeric_transformer, numeric_features),
        ("cat", categorical_transformer, cat_features),
    ]
)

model = Pipeline(steps=[("preprocessing", preprocessor), ("model", RandomForestClassifier(max_depth=5, n_jobs=-1))])
model.fit(train_ds.features_columns, train_ds.label_col);
    ```

    The `score(r)` function is used to calculate the accuracy of a model. The `r` in `score(r)` refers to the predicted values.

    The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a model. The `metric` function is used to calculate the performance of a