```python
    import tensorflow as tf
    from tensorflow.keras.layers import Conv2D, MaxPooling2D, UpSampling2D, Concatenate
    from tensorflow.keras.models import Model
    from tensorflow.keras.optimizers import Adam
    from tensorflow.keras.losses import MeanSquaredLogarithmicError
    from tensorflow.keras.utils import to_categorical
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import LabelEncoder
    import numpy as np
    import os
    import librosa
    import matplotlib.pyplot as plt

    # Load audio files
    audio_files = [f for f in os.listdir('audio_files') if f.endswith('.wav')]
    audio_files = [os.path.join('audio_files', f) for f in audio_files]

    # Load and preprocess audio data
    X = []
    y = []
    for audio_file in audio_files:
        signal, sr = librosa.load(audio_file)
        signal = librosa.effects.percussive(signal)  # denoise audio
        X.append(signal)
        y.append(os.path.splitext(os.path.basename(audio_file))[0])  # get file name without extension

    X = np.array(X)
    y = np.array(y)

    # Encode labels
    label_encoder = LabelEncoder()
    y = label_encoder.fit_transform(y)
    y = to_categorical(y)

    # Split data into training and test sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Define CNN model
    input_shape = (X.shape[1], X.shape[2], 1)
    inputs = tf.keras.Input(shape=input_shape)

    x =