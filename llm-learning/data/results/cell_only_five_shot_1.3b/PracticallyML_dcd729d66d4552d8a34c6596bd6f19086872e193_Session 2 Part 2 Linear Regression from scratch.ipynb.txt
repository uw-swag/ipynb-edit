
    ### Instruction:
    [
    Commit Message: "Added Logistic material"
    Original Code Cells:
    '''
    # This is a code to implement logistic regression on a dataset from scratch

# Importing libraries
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from time import sleep 
# Creating random dataset
x = np.array( [ 2, 3, 4.5, 6, 1.5, 8, 7, 5.4, 4, 6.5, 5, 2.5, 3.5, 4] )
y = np.array( [ 2.2, 2.8, 4, 5.7, 1.45, 7.9, 7, 5.8, 4.7, 6, 5, 2.8, 4, 4] )

# plotting the dataset
plt.plot(x, y, 'r.')
plt.show()

# printing dataset information and reshaping
print("Dimensions of x:", x.shape)
print("Dimensions of y:", y.shape)

x = x.reshape((x.shape[0], 1))
y = y.reshape((y.shape[0], 1))

print("\n")
print("Dimensions of x after reshaping:", x.shape)
print("Dimensions of y after reshaping:", y.shape)
print("x: ", x.T)
# Creating a dataset by concatenating x and y (Optional)
data = np.concatenate( (x,y), axis = 1 )
print(data)

#finding correlation between x and y 
np.corrcoef(np.transpose(data)) 
# Defining hyper paramater theta (weights)

# Randomly initialising theta
theta = np.array([[0.9, -1]])
# print(theta.shape)

# creating bias vector x0
x0 = np.ones((x.shape[0], 1))

# forming input variable
