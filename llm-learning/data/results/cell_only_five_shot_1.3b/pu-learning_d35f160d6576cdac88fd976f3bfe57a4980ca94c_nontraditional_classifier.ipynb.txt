
    '''
    # code for loading the format for the notebook
    import os

    # path : store the current path to convert back to it later
    path = os.getcwd()
    os.chdir( os.path.join('..', '..', 'notebook_format') )
    from formats import load_style
    load_style(css_style = 'custom2.css')
    os.chdir(path)
    %matplotlib inline
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    plt.rcParams['figure.figsize'] = 8, 6 # change default figure size
    plt.rcParams['font.size'] = 12 # and font size

    # 1. magic to print version
    # 2. magic so that the notebook will reload external python modules
    %load_ext watermark
    %load_ext autoreload 
    %autoreload 2

    from sklearn.metrics import mean_squared_error
    from sklearn.tree import DecisionTreeRegressor
    from sklearn.model_selection import GridSearchCV
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestRegressor
    from sklearn.ensemble import GradientBoostingRegressor

    %watermark -a 'Ethen' -d -t -v -p numpy,pandas,matplotlib,scikit-learn
    # read in the data and shuffle the row order for model stability
    np.random.seed(4321)
    wine_path = os.path.join('..', 'winequality-white.csv')
    wine = pd.read_csv(wine_path, sep = ';')
    wine = wine.sample(frac = 1)

    # train/test split the features and response column
    y = wine['quality'].values
    X = wine.drop('quality', axis = 1).values
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size