```python
    import tensorflow as tf
    from tensorflow.keras import datasets, layers, models

    # Load and split dataset
    (train_images, train_labels), (test_images, test_labels) = datasets.mnist.load_data()

    # Reshape the images
    train_images = train_images.reshape((60000, 28, 28, 1))
    test_images = test_images.reshape((10000, 28, 28, 1))

    # Normalize pixel values to be between 0 and 1
    train_images, test_images = train_images / 255.0, test_images / 255.0

    # Create the base model
    base_model = tf.keras.applications.ResNet18(input_shape=(28, 28, 1),
                                               include_top=False,
                                               weights='imagenet')
    base_model.trainable = False

    # Add a classification layer
    model = tf.keras.Sequential([
      base_model,
      layers.GlobalAveragePooling2D(),
      layers.Dense(10)
    ])

    # Compile and train the model
    model.compile(optimizer='adam',
                  loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
                  metrics=['accuracy'])

    history = model.fit(train_images, train_labels, epochs=10, 
                        validation_data=(test_images, test_labels))
    ```
