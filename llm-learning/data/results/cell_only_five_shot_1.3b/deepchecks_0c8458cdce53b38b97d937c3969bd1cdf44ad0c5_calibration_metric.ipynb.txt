```python
    from deepchecks.checks import CalibrationMetric
    from deepchecks.base import Dataset
    from sklearn.linear_model import LogisticRegression
    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    import pandas as pd

    # Load the iris dataset
    iris = load_iris()
    X = iris.data
    y = iris.target

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Create a dataset from the training data
    train_ds = Dataset(X_train, y_train, features=iris.feature_names)

    # Create a logistic regression model
    model = LogisticRegression()

    # Train the model
    model.fit(train_ds)

    # Create a dataset from the testing data
    test_ds = Dataset(X_test, y_test, features=iris.feature_names)

    # Create a calibration metric
    calibration_metric = CalibrationMetric(model)

    # Compute the calibration metric
    calibration_metric.compute(test_ds)

    # Remove SHAP check
    # deepchecks.checks.CalibrationMetric.remove_check(calibration_metric)

    # Compute the calibration metric again
    # calibration_metric.compute(test_ds)

    # This will raise an error because the check was not found
    # print(calibration_metric.compute(test_ds))
    ```
