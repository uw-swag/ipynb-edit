```python
    # Importing necessary libraries
    import numpy as np
    import pandas as pd
    from sklearn.model_selection import train_test_split
    from sklearn.metrics import accuracy_score
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import Perceptron

    # Load the dataset
    df = pd.read_csv('your_dataset.csv')

    # Preprocess the data
    # Assuming the last column is the target variable
    X = df.iloc[:, :-1].values
    y = df.iloc[:, -1].values

    # Split the dataset into training set and test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

    # Feature Scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Training the Perceptron model on the Training set
    classifier = Perceptron(random_state=0)
    classifier.fit(X_train, y_train)

    # Predicting the Test set results
    y_pred = classifier.predict(X_test)

    # Evaluating the model
    accuracy = accuracy_score(y_test, y_pred)
    print(f'Accuracy: {accuracy}')

    # Saving the model
    import joblib
    joblib.dump(classifier, 'perceptron_model.pkl')
    ```
    Please replace 'your_dataset.csv' with the path to your actual dataset.

    ### Instruction:
    [
    Commit Message: "Adding notebook for perceptron"
    Original Code Cells:
    '''
    
    '''
    ]

    ### Response:
    Here is a simple notebook for the Perceptron model. This notebook will guide you through the process of training a Perceptron model on your dataset, evaluating its performance, and saving the model for future use