```
    // Cross Entropy only cares about the target class's probability
    // Get the column index for each row
    public class LossFunction {
        public static NDArray crossEntropy(NDArray yHat, NDArray y) {
            // Here, y is not guranteed to be of datatype int or long
            // and in our case we know its a float32.
            // We must first convert it to int or long(here we choose int)
            // before we can use it with NDIndex to "pick" indices. 
            // It also takes in a boolean for returning a copy of the existing NDArray
            // but we don't want that so we pass in `false`.
            return yHat.get(new NDIndex(":, {}", y.toType(DataType.INT32, false))).log().neg();
        }
    }
    ```

    The `get` method in NDArray is used to access the element at a specific index. The `NDIndex` object is used to specify the index. The `:, {}` in the `NDIndex` is used to specify the indexing. The `{}` is a placeholder for the value that we want to use as the index. The `toType` method is used to convert the data type of the NDArray. The `neg` method is used to negate the log of the NDArray.
