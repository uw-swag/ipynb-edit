```markdown
    # Convention

    This convention is a set of guidelines for writing code. It's not a strict rule, but a set of best practices that we follow to ensure that our code is easy to read, understand, and maintain.

    ## File Structure

    The project structure is as follows:

    ```
    /my_project
    ├── README.md
    ├── .gitignore
    ├── pyproject.toml
    ├── src
    │   ├── __init__.py
    │   ├── module1
    │   │   ├── __init__.py
    │   │   ├── module1.py
    │   │   └── module1_test.py
    │   └── module2
    │       ├── __init__.py
    │       ├── module2.py
    │       └── module2_test.py
    ├── tests
    │   ├── __init__.py
    │   ├── module1_test.py
    │   └── module2_test.py
    └── Dockerfile
    ```

    ## Naming Conventions

    - Python: Use snake_case for function and variable names.
    - Python: Use PEP8 style guide for code formatting.

    ## Code Formatting

    - Python: Use black for code formatting.
    - Python: Use isort for import sorting.

    ## Testing

    - Python: Use pytest for testing.
    - Python: Use hypothesis for generating test cases.

    ## Documentation

    - Python: Use Sphinx for documentation.
    - Python: Use ReadTheDocs for hosting the documentation.

    ## Version Control

    - Python: Use Git for version control.
    - Python: Use GitHub for hosting the repository.

    ## Continuous Integration/Continuous Deployment (CI/CD)

    - Python: Use GitHub Actions for CI/CD.
    - Python: Use Jenkins for CD.

    ## Code Review

    - Python: Use GitHub for code review.

    ## Deployment