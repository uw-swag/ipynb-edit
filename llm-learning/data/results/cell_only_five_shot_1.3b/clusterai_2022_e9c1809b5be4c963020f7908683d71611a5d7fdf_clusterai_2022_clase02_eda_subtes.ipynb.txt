```python
    #load libraries

    from __future__ import print_function
    from __future__ import absolute_import
    from __future__ import division

    # set the environment path to find Recommenders
    import sys
    sys.path.append("../../")

    import os
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    %matplotlib inline

    import papermill as pm

    from reco_utils.recommender.rbm.rbm import RBM
    from reco_utils.dataset.numpy_splitters import numpy_stratified_split
    from reco_utils.dataset.sparse import AffinityMatrix


    from reco_utils.dataset import movielens
    from reco_utils.evaluation.python_evaluation import map_at_k, ndcg_at_k, precision_at_k, recall_at_k

    #For interactive mode only
    %load_ext autoreload
    %autoreload 2

    print("System version: {}".format(sys.version))
    print("Pandas version: {}".format(pd.__version__))

    #load data
    data = pd.read_csv('data.csv')
    X = data.iloc[:, :-1].values
    y = data.iloc[:, -1].values

    #split data
    X_train, X_test, y_train, y_test = numpy_stratified_split(X, y, 0.8)

    #initialize RBM
    rbm = RBM(n_users=X_train.shape[0], possible_ratings=np.unique(X_train), visible_units=X_train.shape[1], hidden_units=1200, training_epoch=30, minibatch_size=350, with_metrics=True)

    #fit RBM
    rbm.fit(X_train)

    #predict
    y_pred = rbm.predict(X_test)

    #evaluate