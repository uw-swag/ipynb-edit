```python
    from PIL import Image, ImageDraw

    try:
        from pyglet.gl import gl_info
        openai_cart_pole_rendering = True   # no problem, let's use OpenAI gym's rendering function
    except ImportError:
        openai_cart_pole_rendering = False  # probably running on binder, let's use our own rendering function

    def render_cart_pole(env, obs):
        if openai_cart_pole_rendering:
            # use OpenAI gym's rendering function
            return env.render(mode="rgb_array")
        else:
            # basic rendering for the cart pole environment if OpenAI can't render it
            img_w = 100
            img_h = 50
            cart_w = 20
            pole_len = 30
            x_width = 2
            max_ang = 0.2
            bg_col = (255, 255, 255)
            cart_col = 0x000000 # Blue Green Red
            pole_col = 0x0000FF # Blue Green Red

            pos, vel, ang, ang_vel = obs
            img = Image.new('RGB', (img_w, img_h), bg_col)
            draw = ImageDraw.Draw(img)
            cart_x = pos * img_w // x_width + img_w // x_width
            cart_y = img_h * 95 // 100
            top_pole_x = cart_x + pole_len * np.sin(ang)
            top_pole_y = cart_y - pole_len * np.cos(ang)
            pole_col = int(np.minimum(np.abs(ang / max_ang), 1) * pole_col)
            draw.line((cart_x, cart_y, top_pole_x, top_pole_y), fill=pole_col) # draw pole
            draw.line((cart_x - cart_w // 2, cart_y, cart_x + cart_w // 2