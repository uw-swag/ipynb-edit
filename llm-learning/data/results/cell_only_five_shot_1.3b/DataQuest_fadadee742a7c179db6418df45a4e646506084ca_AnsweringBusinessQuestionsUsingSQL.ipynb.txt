```
    import psycopg2
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import cm
%matplotlib inline

conn = psycopg2.connect(dbname='chinook', user='kitestring', host="/tmp/", password='Chlorine35%')
cur = conn.cursor() 
def run_query(query):
    return pd.read_sql_query(query, conn)

def run_command(command):
    conn.execute(command)

def show_tables():
    query = "select table_name, table_type from information_schema.tables \
                where table_type = 'BASE TABLE' AND table_schema = 'public';"
    return run_query(query)

tables = show_tables()
tables
query = '''
SELECT
    COUNT(t.*) AS TotalTracks
FROM track t;
'''
genre_check = run_query(query)
genre_check
# conn.close()

    '''
    ))

    ### Instruction:
    [
    Commit Message: "Adding a new feature: User Management"
    Original Code Cells:
    '''
    from flask import Flask, request, jsonify
    from flask_sqlalchemy import SQLAlchemy
    from werkzeug.security import generate_password_hash, check_password_hash

    app = Flask(__name__)
    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'
    db = SQLAlchemy(app)

    class User(db.Model):
        id = db.Column(db.Integer, primary_key=True)
        username = db.Column(db.String(80), unique=True, nullable=False)
        password_hash = db.Column(db.String(120), nullable=False)

        def set_password(self, password):
            self.password_hash = generate_password_hash(password)

        def check_password(self, password):
            return