```python
    import numpy as np
from matplotlib import pyplot as plt
import pandas as pd
import seaborn as sns

from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error
from sklearn.compose import ColumnTransformer
from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet
from sklearn.svm import SVR
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import OneHotEncoder, OrdinalEncoder, StandardScaler

from helpers import constants as C
for col in cat_cols:
    if main_df[col].nunique() < 20:
        print(f"{col!r:>13}: {main_df[col].unique().tolist()}")
    else:
        print(f"{col!r:>13}: {main_df[col].nunique()}")
preprocessor = ColumnTransformer(
    transformers=[
        ("ord", OrdinalEncoder(categories=list(ord_cols.values())), list(ord_cols.keys())),
        ("ohe", OneHotEncoder(sparse_output=False), ohe_cols),
    ],
    remainder="passthrough",
)
X = main_df.drop(columns=[target])
y = main_df[target]

# Preprocess the whole data and encode the categorical features
X_trf = pd.DataFrame(
    np.array(preprocessor.fit_transform(X)), columns=preprocessor.get_feature_names_out()
)

X_train, X_test, y_train, y_test = train_test_split(X_trf, y, test_size=0.2, random_state=42)
(
    pd.concat([X_trf, y.to_frame()], axis=1)
    .corr()["