```python
    ### simple neural net plot
    # Sigmoid plot

    import matplotlib.pyplot as plt
    import numpy as np

    x = np.linspace(-10, 10, 400)
    y = 1 / (1 + np.exp(-x))

    plt.figure(figsize=(10, 6))
    plt.plot(x, y, label='Sigmoid Function')
    plt.title('Sigmoid Function')
    plt.xlabel('x')
    plt.ylabel('y')
    plt.legend()
    plt.grid(True)
    plt.show()
    ```

    ### simple neural net plot
    # Multi-Perceptron plot

    '''
    ]

    ### Response:
    ```python
    ### simple neural net plot
    # Multi-Perceptron plot

    import matplotlib.pyplot as plt
    import numpy as np

    x = np.linspace(-10, 10, 400)
    y = 1 / (1 + np.exp(-x))

    plt.figure(figsize=(10, 6))
    plt.plot(x, y, label='Multi-Perceptron Function')
    plt.title('Multi-Perceptron Function')
    plt.xlabel('x')
    plt.ylabel('y')
    plt.legend()
    plt.grid(True)
    plt.show()
    ```

    ## Annotated Equations

    ### Multi-Perceptron

    The Multi-Perceptron is a type of artificial neural network that uses a single layer of perceptrons. The perceptrons in the network are connected in a way that the output of one perceptron is used as the input to the next.

    The equation for a Multi-Perceptron is:

    y = f(w1*x1 + w2*x2 + ... + wn*xn + b)

    where:
    - y is the output of the