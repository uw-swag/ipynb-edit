```python
    import numpy as np
    from sklearn.decomposition import PCA

    # Generate some example data
    np.random.seed(0)
    X = np.random.randn(100, 2)

    # Apply PCA
    pca = PCA(n_components=1)
    X_pca = pca.fit_transform(X)

    print("Original shape: ", X.shape)
    print("PCA transformed shape: ", X_pca.shape)

    # Apply SVD
    U, s, Vt = np.linalg.svd(X)
    X_svd = np.dot(np.dot(U, np.diag(s)), Vt)

    print("Original shape: ", X.shape)
    print("SVD transformed shape: ", X_svd.shape)
    ```

    This code applies Principal Component Analysis (PCA) and Singular Value Decomposition (SVD) to the data. The PCA reduces the dimensionality of the data from 2 to 1, while the SVD also reduces the dimensionality, but it uses the SVD instead of PCA.
