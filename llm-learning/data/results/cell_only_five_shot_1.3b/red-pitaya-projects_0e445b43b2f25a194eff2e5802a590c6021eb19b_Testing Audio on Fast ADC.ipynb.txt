```
    from redpitaya.overlay.mercury import mercury as overlay
    fpga = overlay()
    import IPython.display as ipd
    sr = 3000 # sample rate 30 Ksps
    ipd.Audio(data, rate=sr) # load a NumPy array
    import matplotlib.pyplot as plt

    # show the part of the buffer requested by pre/post trigger timing - in this example the whole buffer.

    plt.plot(data)
    plt.show()
    sr2 = 40 # sample rate 48 Ksps
    ipd.Audio('/tmp/stream_files/data_file_2020-05-23_13-23-32.wav', rate=sr2) # load a NumPy array
    np_sound = read('/tmp/stream_files/data_file_2020-05-23_13-23-32.wav')
    ```

    The code is updating the live plotting of the audio data. The `ipd.Audio` function is used to load the audio data and display it in a Matplotlib plot. The `plt.plot(data)` function is used to plot the audio data. The `plt.show()` function is used to display the plot.

    The `ipd.Audio` function is used to load the audio data and display it in a Matplotlib plot. The `plt.plot(data)` function is used to plot the audio data. The `plt.show()` function is used to display the plot.

    The `ipd.Audio` function is used to load the audio data and display it in a Matplotlib plot. The `plt.plot(data)` function is used to plot the audio data. The `plt.show()` function is used to display the plot.

    The `ipd.Audio` function is used to load the audio data and display it in a Matplotlib plot. The `plt.plot(data)` function is used to plot the audio data. The `plt.show()` function is used to display the plot.

    The `ip