```python
    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn.linear_model import LinearRegression
    from sklearn.preprocessing import PolynomialFeatures

    # Generate random data
    x = np.linspace(0, 10, 100)
    y = x + np.random.randn(100) * 0.5

    # Create Polynomial Features
    poly = PolynomialFeatures(degree=2)
    x_poly = poly.fit_transform(x[:, None])

    # Fit the model
    model = LinearRegression().fit(x_poly, y)

    # Plot the original data
    plt.scatter(x, y)

    # Plot the polynomial regression line
    x_new = np.linspace(0, 10, 100)
    x_new_poly = poly.transform(x_new[:, None])
    y_new = model.predict(x_new_poly)
    plt.plot(x_new, y_new, '-r')

    plt.show()
    ```
    This code creates a simple polynomial regression model using the PolynomialFeatures class from sklearn.preprocessing. The model is then fitted to the data and plotted.
