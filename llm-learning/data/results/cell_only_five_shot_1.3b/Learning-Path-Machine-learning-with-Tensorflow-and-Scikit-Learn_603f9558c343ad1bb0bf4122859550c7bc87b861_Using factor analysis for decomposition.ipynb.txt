
    ### Code: Module03.ipynb
    ### This is a Jupyter notebook file for Module 03.

    ### Importing necessary libraries
    import numpy as np
    import pandas as pd
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import confusion_matrix
    from matplotlib import pyplot as plt
    import seaborn as sns

    ### Loading the dataset
    dataset = pd.read_csv('../datasets/Social_Network_Ads.csv')

    ### Data preprocessing
    X = dataset.iloc[:, [2, 3]].values
    y = dataset.iloc[:, 4].values

    ### Splitting the dataset into the Training set and Test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

    ### Feature Scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    ### Training the Random Forest Classifier
    classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)
    classifier.fit(X_train, y_train)

    ### Predicting the Test set results
    y_pred = classifier.predict(X_test)

    ### Creating the Confusion Matrix
    cm = confusion_matrix(y_test, y_pred)

    ### Visualizing the Training set results
    sns.heatmap(cm, annot=True)
    plt.title('Random Forest Classifier - Training set')
    plt.xlabel('Predicted')
    plt.ylabel('Actual')
    plt.show()

    ### Visualizing the Test set results
    sns.heatmap(cm,