
    ### Code: Module02.py
    
    '''
    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    from sklearn.neighbors import KNeighborsClassifier
    from sklearn.metrics import accuracy_score

    def load_data():
        iris = load_iris()
        X = iris.data
        y = iris.target
        return train_test_split(X, y, test_size=0.2, random_state=42)

    def train_model(X_train, y_train):
        knn = KNeighborsClassifier(n_neighbors=3)
        knn.fit(X_train, y_train)
        return knn

    def evaluate_model(model, X_test, y_test):
        y_pred = model.predict(X_test)
        return accuracy_score(y_test, y_pred)

    def main():
        X_train, X_test, y_train, y_test = load_data()
        model = train_model(X_train, y_train)
        score = evaluate_model(model, X_test, y_test)
        print(f'Model accuracy: {score}')

    if __name__ == "__main__":
        main()
    '''

    ### Code: Module02.py
    
    '''
    from sklearn.datasets import load_wine
    from sklearn.model_selection import train_test_split
    from sklearn.neighbors import KNeighborsClassifier
    from sklearn.metrics import accuracy_score

    def load_data():
        wine = load_wine()
        X = wine.data
        y = wine.target
        return train_test_split(X, y, test_size=0.2, random_state=42)

    def train_model(X_train, y_train):
        knn = KNeighborsClassifier(n_neighbors=3)
        knn.fit(X