```python
    # change to venv; multi-perceptron 1st draft
    # import the necessary packages
    from keras.models import Sequential
    from keras.layers import Dense
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.metrics import confusion_matrix
    from sklearn.metrics import accuracy_score
    from sklearn.metrics import classification_report
    import pandas as pd
    import numpy as np

    # load the dataset
    df = pd.read_csv('your_data.csv')

    # preprocess the data
    X = df.iloc[:, :-1].values
    y = df.iloc[:, -1].values

    # split the dataset into the Training set and Test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

    # feature scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # create the model
    model = Sequential()
    model.add(Dense(16, input_dim=2, activation='sigmoid'))
    model.add(Dense(1, activation='sigmoid'))

    # compile the model
    model.compile(loss='mean_squared_error', optimizer='adam', metrics=['binary_accuracy'])

    # fit the model
    model.fit(X_train, y_train, epochs=2000, verbose=2)

    # predict the test set results
    y_pred = model.predict(X_test)
    y_pred = (y_pred > 0.5)

    # print the accuracy
    print("Accuracy:", accuracy_score(y_test, y_pred))
    print(classification_report(y_test, y_pred))
    print(confusion_matrix(y_test,