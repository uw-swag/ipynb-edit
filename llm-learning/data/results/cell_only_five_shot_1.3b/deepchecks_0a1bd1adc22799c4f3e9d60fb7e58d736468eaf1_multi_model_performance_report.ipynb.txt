```python
    # Import necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.svm import SVC
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import classification_report

    # Load your data
    # data = pd.read_csv('your_data.csv')

    # Split your data into training and testing sets
    # X_train, X_test, y_train, y_test = train_test_split(data.drop('target', axis=1), data['target'], test_size=0.2, random_state=42)

    # Initialize models
    lr = LogisticRegression()
    svc = SVC()
    rf = RandomForestClassifier()

    # Fit models
    lr.fit(X_train, y_train)
    svc.fit(X_train, y_train)
    rf.fit(X_train, y_train)

    # Make predictions
    lr_pred = lr.predict(X_test)
    svc_pred = svc.predict(X_test)
    rf_pred = rf.predict(X_test)

    # Create a performance report
    models = ['Logistic Regression', 'SVM', 'Random Forest']
    reports = [classification_report(y_test, lr_pred), classification_report(y_test, svc_pred), classification_report(y_test, rf_pred)]

    # Create a dataframe from the report
    df = pd.DataFrame(reports, index=models, columns=['precision', 'recall', 'f1-score', 'support'])

    # Print the performance report
    print(df)
    ```
    This code will create a performance report for each of the three models (Logistic Regression, SVM, and Random Forest) using the test data. The report will include precision, recall, f1-score, and support for each class.
