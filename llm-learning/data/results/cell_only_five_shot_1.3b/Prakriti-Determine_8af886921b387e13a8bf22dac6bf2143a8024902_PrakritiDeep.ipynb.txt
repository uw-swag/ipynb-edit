```python
    # Importing necessary libraries
    import tensorflow as tf
    from tensorflow.keras.models import Sequential
    from tensorflow.keras.layers import Dense, Dropout, Activation, Flatten
    from tensorflow.keras.layers import Conv2D, MaxPooling2D
    from tensorflow.keras.optimizers import Adam
    from tensorflow.keras.preprocessing.text import Tokenizer
    from tensorflow.keras.preprocessing.sequence import pad_sequences

    # Tokenizing the data
    tokenizer = Tokenizer(num_words=5000)
    tokenizer.fit_on_texts(X_train)

    X_train_tokenized = tokenizer.texts_to_sequences(X_train)
    X_val_tokenized = tokenizer.texts_to_sequences(X_val)

    # Padding the sequences
    X_train_padded = pad_sequences(X_train_tokenized, maxlen=100)
    X_val_padded = pad_sequences(X_val_tokenized, maxlen=100)

    # Defining the model
    model = Sequential()
    model.add(Embedding(5000, 100, input_length=100))
    model.add(Conv2D(64, kernel_size=3, padding='same'))
    model.add(Activation('relu'))
    model.add(Dropout(0.2))
    model.add(Conv2D(64, kernel_size=3, padding='same'))
    model.add(Activation('relu'))
    model.add(Dropout(0.2))
    model.add(Flatten())
    model.add(Dense(10))
    model.add(Activation('softmax'))

    # Compiling the model
    model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

    # Training the model
    model.fit(X_train_p