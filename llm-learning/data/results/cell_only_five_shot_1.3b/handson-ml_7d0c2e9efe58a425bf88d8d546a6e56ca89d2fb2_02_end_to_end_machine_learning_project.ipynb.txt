```python
    from sklearn.model_selection import RandomizedSearchCV
    from scipy.stats import expon, reciprocal

    # see https://docs.scipy.org/doc/scipy-0.19.0/reference/stats.html
    # for `expon()` and `reciprocal()` documentation and more probability distribution functions.

    # Note: gamma is ignored when kernel is "linear"
    param_distribs = {
            'kernel': ['linear', 'rbf'],
            'C': reciprocal(20, 200000),
            'gamma': expon(scale=1.0),
        }

    svm_reg = SVR()
    rnd_search = RandomizedSearchCV(svm_reg, param_distributions=param_distribs,
                                    n_iter=50, cv=5, scoring='neg_mean_squared_error',
                                    verbose=2, n_jobs=4, random_state=42)
    rnd_search.fit(housing_prepared, housing_labels)

    # Compute a confidence interval
    rnd_search.best_estimator_.predict([some_feature])
    confidence_interval = rnd_search.cv_results_['mean_test_score']
    lower_bound = confidence_interval - 1.96 * np.sqrt(np.var(confidence_interval))
    upper_bound = confidence_interval + 1.96 * np.sqrt(np.var(confidence_interval))
    print(f"Confidence interval: [{lower_bound}, {upper_bound}]")
    ```
