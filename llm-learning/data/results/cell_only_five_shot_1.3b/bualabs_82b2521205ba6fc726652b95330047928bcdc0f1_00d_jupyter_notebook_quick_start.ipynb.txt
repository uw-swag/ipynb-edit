```
    # Import necessary libraries
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression
    from sklearn.metrics import mean_squared_error

    # Load the dataset
    df = pd.read_csv('your_data.csv')

    # Check the first few rows of the dataset
    print(df.head())

    # Check the statistical summary of the dataset
    print(df.describe())

    # Check for missing values
    print(df.isnull().sum())

    # Visualize the distribution of the target variable
    sns.distplot(df['target'])

    # Split the dataset into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(df.drop('target', axis=1), df['target'], test_size=0.2, random_state=42)

    # Create a linear regression model
    model = LinearRegression()

    # Train the model
    model.fit(X_train, y_train)

    # Make predictions on the testing set
    y_pred = model.predict(X_test)

    # Calculate the mean squared error of the predictions
    mse = mean_squared_error(y_test, y_pred)
    print('Mean Squared Error:', mse)

    # Visualize the actual vs predicted values
    plt.scatter(y_test, y_pred)
    plt.xlabel('Actual')
    plt.ylabel('Predicted')
    plt.title('Actual vs Predicted')
    plt.show()
    ```
