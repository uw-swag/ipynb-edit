```python
    import tensorflow as tf
    from tensorflow.keras import layers
    from tensorflow.keras.preprocessing.image import ImageDataGenerator
    import numpy as np
    from sklearn.metrics import classification_report, confusion_matrix
    from tensorflow.keras.applications import VGG16
    from tensorflow.keras.models import Sequential
    from tensorflow.keras.layers import Dense, Flatten
    from tensorflow.keras.optimizers import Adam

    data_dir='D:\\Msc GU\\Msc 4th Sem\\Project\\DataSet\\teadataset'

    # Set up data augmentation
    datagen = ImageDataGenerator(
        rescale=1./255,
        rotation_range=20,
        width_shift_range=0.2,
        height_shift_range=0.2,
        shear_range=0.2,
        zoom_range=0.2,
        horizontal_flip=True,
        validation_split=0.2)

    # Load in the dataset
    train_data = datagen.flow_from_directory(
        data_dir,
        target_size=(224, 224),
        batch_size=32,
        class_mode='categorical',
        subset='training')

    val_data = datagen.flow_from_directory(
        data_dir,
        target_size=(224, 224),
        batch_size=32,
        class_mode='categorical',
        subset='validation')

    batch_size=32

    # Step 1: Choose a pre-trained model
    base_model = VGG16(weights='imagenet', include_top=False, 
                       input_shape=(224, 224, 3))

    # Step 2: Load the pre-trained model
    model = Sequential()
    model.add(base_model)

    # Step 3: Freeze initial layers
    for layer in base_model