```python
    import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sqlalchemy import create_engine
import seaborn as sns
import plotly.graph_objects as go
from plotly.subplots import make_subplots

pd.set_option("display.max_columns", 100)
pd.set_option("display.precision", 2)
%matplotlib inline
plt.style.use('fivethirtyeight')
plt.rcParams.update({'font.size': 16, 'font.family': 'sans'})

def load_dataframe_from_yelp_2(query):
    """
    Connects to yelp_2 database on Postgres and
    loads a Pandas dataframe based off sql query.

    Args:
        query (string): Sql query to select data from yelp_2.

    Returns:
        Dataframe: Pandas dataframe of records
                    from sql query of yelp_2 database.
    """
    connect = 'postgresql+psycopg2://postgres:password@localhost:5432/yelp_2'
    engine = create_engine(connect)
    df = pd.read_sql(query, con=engine)
    df = df.copy()
    return df

def counter(x):
    if x in ['None', None, '']:
        return 0
    else:
        y = x.split(',')
        return len(y)

query = '''
        SELECT *
        FROM checkin_expanded
        LIMIT 10000
        ;
        '''
df = load_dataframe_from_yelp_2(query)

# Data preprocessing
df = df.fillna(value='')
df['business_count'] = df['categories'].apply(lambda x: counter(x))

# Descriptive statistics
overall = df.describe(include='all')
overall

# Percentage of missing values
percent_col = [col for col in df if col.