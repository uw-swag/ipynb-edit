
    Here is the updated code with the new Dashboard interface and added Profile usage examples:

    ```python
    import pandas as pd
import numpy as np

from datetime import datetime
from sklearn import datasets, ensemble, model_selection

from evidently.dashboard import Dashboard
from evidently.tabs import DriftTab, CatTargetDriftTab, ProbClassificationPerformanceTab, ProfileTab

# Assuming bcancer_frame is your DataFrame and column_mapping is a dictionary mapping column names

# Create a new Dashboard instance
bcancer_data_drift = Dashboard(bcancer_frame[:280], bcancer_frame[280:], tabs=[DriftTab])

# Save the Dashboard as an HTML file
bcancer_data_drift.save('reports/bcancer_data_drift_no_dates.html')

bcancer_data_drift = Dashboard(bcancer_frame[:280], bcancer_frame[280:], column_mapping = column_mapping,
                               tabs=[DriftTab])

bcancer_data_drift.save('reports/bcancer_data_drift_with_dates.html')

bcancer_data_and_target_drift = Dashboard(bcancer_frame[:280], bcancer_frame[280:], column_mapping = column_mapping,
                               tabs=[DriftTab, CatTargetDriftTab])

bcancer_data_and_target_drift.save('reports/bcancer_data_and_target_drift.html')

# Create a new Dashboard instance with ProfileTab
model_performance = Dashboard(merged_reference, merged_production, column_mapping = column_mapping, 
                       tabs=[ProbClassificationPerformanceTab, ProfileTab])

# Save the Dashboard as an HTML file
model_performance.save('reports/bcancer_prob_classification_performance.html')

# Add a new ProfileTab
model_performance = Dashboard(merged_reference, merged_production, column_mapping = column_mapping, 
                       tabs=[ProbClassificationPerformanceTab, ProfileTab])

#