```
    ## Start of the notebook
    ## Created using Colaboratory
    ## Importing necessary libraries
    import tensorflow as tf
    from tensorflow.keras.applications.resnet50 import ResNet50
    from tensorflow.keras.layers import Dense, GlobalAveragePooling2D
    from tensorflow.keras.models import Model
    from tensorflow.keras.optimizers import Adam
    from tensorflow.keras.preprocessing.image import ImageDataGenerator

    ## Loading the ResNet50 model
    base_model = ResNet50(weights='imagenet', include_top=False, input_shape=(224, 224, 3))

    ## Freezing the base model
    base_model.trainable = False

    ## Adding the custom layers
    x = base_model.output
    x = GlobalAveragePooling2D()(x)
    x = Dense(1024, activation='relu')(x)
    prediction = Dense(1, activation='sigmoid')(x)

    ## Compiling the model
    model = Model(inputs=base_model.input, outputs=prediction)
    model.compile(optimizer=Adam(lr=0.0001), loss='binary_crossentropy', metrics=['accuracy'])

    ## Creating a data generator
    train_datagen = ImageDataGenerator(rescale=1./255, shear_range=0.2, zoom_range=0.2, horizontal_flip=True)
    test_datagen = ImageDataGenerator(rescale=1./255)

    ## Loading the dataset
    train_generator = train_datagen.flow_from_directory('path_to_your_dataset', target_size=(224, 224), batch_size=32, class_mode='binary')
    test_generator = test_datagen.flow_from_directory('path_to_your_dataset', target_size=(224, 224), batch_size