
    The code you've provided is a function that fits and predicts on a set of data. The function is designed to fit a model on a set of data and then make predictions on the same data. The models used in the function are:

    1. LSTMModel: A Long Short-Term Memory model.
    2. MlpModel: A Multi-Layer Perceptron model.
    3. LrModelCount: A model that counts the frequency of words or characters in a text.
    4. LrModelCountClear: A model that counts the frequency of words or characters in a text, but only for the clear text.
    5. LrModelTfidf: A model that uses TF-IDF to count the frequency of words in a text.
    6. FeaturesModelXGB: A model that uses XGBoost for prediction.

    The function `fit_predict_to_n_user` is used to fit the models on the data and make predictions on the data. The function takes as input the data, a list of models, a number of users, a boolean indicating whether to use additional data, a boolean indicating whether to debug the function, and a boolean indicating whether to return the predictions.

    The function returns the predictions, the actual labels, the model names, and the time taken to fit and predict the models.

    The function is called with the following arguments:

    - `comments`: The data to fit the models on.
    - `models`: A list of models to fit on the data.
    - `n_users`: The number of users.
    - `clear`: A boolean indicating whether to use the clear text.
    - `with_additional`: A boolean indicating whether to use additional data.
    - `debug`: A boolean indicating whether to debug the function.
    - `predict_proba`: A boolean indicating whether to return the probabilities of the predictions.
    - `return_prediction`: A boolean indicating whether to return the predictions.

    The function is called with the following arguments:

    - `comments`: The data to fit the models on.
    - `models`: A list of models to fit on the data.
    - `n_users`: The number of users.
    - `