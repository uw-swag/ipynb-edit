```python
    from deepchecks.tabular import TrainTestBaseCheck, Dataset, Context
    from deepchecks.core import CheckResult

    class DatasetSizeComparison(TrainTestBaseCheck):
        """Check which compares the sizes of train and test datasets."""

        def run_logic(self, context: Context) -> CheckResult:
            ## Check logic
            train_size = context.train.n_samples
            test_size = context.test.n_samples

            ## Return value as check result
            return_value = {'train_size': train_size, 'test_size': test_size}
            return CheckResult(return_value)

    from deepchecks.tabular import Dataset, Check, TrainTestBaseCheck, Context
    from deepchecks.core import CheckResult
    import matplotlib.pyplot as plt
    import pandas as pd

    class DatasetSizeComparison(TrainTestBaseCheck):
        """Check which compares the sizes of train and test datasets."""

        def run_logic(self, context: Context) -> CheckResult:
            ## Check logic
            train_size = context.train.n_samples
            test_size = context.test.n_samples

            ## Create the check result value
            sizes = {'Train': train_size, 'Test': test_size}
            sizes_df_for_display = pd.DataFrame(sizes, index=['Size'])

            ## Display function of matplotlib graph:
            def graph_display():
                plt.bar(sizes.keys(), sizes.values(), color='green')
                plt.xlabel("Dataset")
                plt.ylabel("Size")
                plt.title("Datasets Size Comparison")

            return CheckResult(sizes, display=[sizes_df_for_display, graph_display])
    ```
