```python
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    import pandas as pd
    import sklearn
    print(f'scikit-learn version: {sklearn.__version__}')
    assert sklearn.__version__ >= "0.20"

    from sklearn.cluster import KMeans
    from sklearn.datasets import make_blobs
    from sklearn.preprocessing import StandardScaler
    from sklearn.metrics import silhouette_score

    import tensorflow as tf
    print(f'TensorFlow version: {tf.__version__}')
    print(f'Keras version: {tf.keras.__version__}')

    from tensorflow.keras.datasets import mnist
    from tensorflow.keras.utils import to_categorical

    # Load the MNIST digits dataset
    (train_images, train_labels), (test_images, test_labels) = mnist.load_data()

    print(f"Training images: {train_images.shape}. Training labels: {train_labels.shape}")
    print(f"Test images: {test_images.shape}. Test labels: {test_labels.shape}")

    # Plot the first 10 digits
    with sns.axes_style('white'):
        plt.figure(figsize=(10, 5))
        for i in range(10):
            digit = test_images[i]
            fig = plt.subplot(2, 5, i + 1)
            plt.imshow(digit, cmap=plt.cm.binary)

    # Reshape images into a (samples, 28x28) matrix
    x_train = train_images.reshape((60000, 28 * 28))
    x_test = test_images.reshape((10000, 28 * 28))

    # Rescale pixel values from [0:255] to [0:1]
   