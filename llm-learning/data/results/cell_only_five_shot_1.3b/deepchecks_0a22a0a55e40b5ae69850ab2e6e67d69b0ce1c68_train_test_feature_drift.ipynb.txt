```
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import accuracy_score

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(df_train.drop('target', axis=1), df_train['target'], test_size=0.2, random_state=42)

    # Create a Logistic Regression model
    model = LogisticRegression()

    # Fit the model to the training data
    model.fit(X_train, y_train)

    # Make predictions on the testing data
    predictions = model.predict(X_test)

    # Calculate the accuracy of the model
    accuracy = accuracy_score(y_test, predictions)

    print(f'Accuracy: {accuracy}')

    # Now, let's use the model to predict the labels of the test set
    test_predictions = model.predict(test_dataset.features_columns)

    # And calculate the accuracy of the model on the test set
    test_accuracy = accuracy_score(test_dataset.label, test_predictions)

    print(f'Test Accuracy: {test_accuracy}')
    ```
