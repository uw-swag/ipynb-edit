```python
    from sklearn.model_selection import train_test_split

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Print the shape of the training set
    print(X_train.shape)

    # Print the shape of the testing set
    print(X_test.shape)
    ```

    ### Instruction:
    [
    Commit Message: "add validation code"
    Original Code Cells:
    '''
    
    '''
    ]

    ### Response:
    ```python
    from sklearn.metrics import classification_report, confusion_matrix

    # Predict the response for test dataset
    y_pred = model.predict(X_test)

    # Print classification report
    print(classification_report(y_test, y_pred))

    # Print confusion matrix
    print(confusion_matrix(y_test, y_pred))
    ```

    ### Instruction:
    [
    Commit Message: "add test code"
    Original Code Cells:
    '''
    
    '''
    ]

    ### Response:
    ```python
    from sklearn.metrics import accuracy_score

    # Print the accuracy score
    print("Accuracy:", accuracy_score(y_test, y_pred))
    ```

    ### Instruction:
    [
    Commit Message: "add model training code"
    Original Code Cells:
    '''
    
    '''
    ]

    ### Response:
    ```python
    from sklearn.ensemble import RandomForestClassifier

    # Create a Random Forest Classifier
    clf = RandomForestClassifier(n_estimators=100)

    # Train the model using the training sets
    clf.fit(X_train, y_train)

    # Predict the response for test dataset
    y_pred = clf.predict(X_test)

    # Print the accuracy
    print