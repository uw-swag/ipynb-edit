```python
    from sklearn.model_selection import train_test_split

    # Split the data into training and test sets
    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

    # Fit the model
    clf.fit(X_train, y_train)

    # Predict the response for test dataset
    y_pred = clf.predict(X_test)

    # Model Accuracy
    print("Accuracy:",metrics.accuracy_score(y_test, y_pred))
    ```

    ### Instruction:
    [
    Commit Message: "add test code"
    Original Code Cells:
    '''
    
    '''
    ]

    ### Response:
    ```python
    from sklearn import metrics

    # Predict the response for test dataset
    y_pred = clf.predict(X_test)

    # Model Accuracy
    print("Accuracy:",metrics.accuracy_score(y_test, y_pred))
    ```

    ### Instruction:
    [
    Commit Message: "add evaluation code"
    Original Code Cells:
    '''
    
    '''
    ]

    ### Response:
    ```python
    from sklearn import metrics

    # Predict the response for test dataset
    y_pred = clf.predict(X_test)

    # Model Accuracy
    print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

    # Confusion Matrix
    print("Confusion Matrix:")
    print(metrics.confusion_matrix(y_test, y_pred))

    # Classification Report
    print("Classification Report:")
    print(metrics.classification_report(y_test, y_pred))
    ```

    ### Instruction:
    [
    Commit Message: "add confusion matrix code"
    Original Code Cells:
    '''
    
    '''
    ]

    ###