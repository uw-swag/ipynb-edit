```python
    ## Code: Titanic_Survival_Prediction.ipynb
    ## Author: Your Name
    ## Date: 2022-01-01

    ## Importing necessary libraries
    import pandas as pd
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import accuracy_score

    ## Loading the dataset
    data = pd.read_csv('titanic.csv')

    ## Data preprocessing
    ## Fill missing values
    data['Age'].fillna(data['Age'].mean(), inplace=True)
    data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

    ## One-hot encoding
    data = pd.get_dummies(data)

    ## Splitting the dataset
    X = data.drop('Survived', axis=1)
    y = data['Survived']
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    ## Model training
    model = RandomForestClassifier()
    model.fit(X_train, y_train)

    ## Model evaluation
    predictions = model.predict(X_test)
    print('Accuracy:', accuracy_score(y_test, predictions))

    ## Predicting survival for the test set
    test_data = pd.read_csv('test.csv')

    ## Data preprocessing
    test_data['Age'].fillna(test_data['Age'].mean(), inplace=True)
    test_data['Embarked'].fillna(test_data['Embarked'].mode()[0], inplace=True)
    test_data = pd.get_dummies(test_data)

    ## Predicting survival
    test_predictions = model.predict(test_data)
