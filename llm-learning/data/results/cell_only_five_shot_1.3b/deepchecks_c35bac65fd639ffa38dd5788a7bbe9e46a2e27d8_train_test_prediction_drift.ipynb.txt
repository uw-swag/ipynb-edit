```python
    import pandas as pd
    from sklearn.metrics import mean_squared_error
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression
    from sklearn.ensemble import RandomForestRegressor
    from sklearn.metrics import mean_absolute_error

    # Load your data
    df = pd.read_csv('your_data.csv')

    # Split your data into features and target
    X = df.drop('target_column', axis=1)
    y = df['target_column']

    # Split your data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Train a linear regression model
    lr = LinearRegression()
    lr.fit(X_train, y_train)

    # Train a random forest regressor model
    rf = RandomForestRegressor(n_estimators=100, random_state=42)
    rf.fit(X_train, y_train)

    # Make predictions
    lr_predictions = lr.predict(X_test)
    rf_predictions = rf.predict(X_test)

    # Calculate the mean squared error for both models
    lr_mse = mean_squared_error(y_test, lr_predictions)
    rf_mse = mean_squared_error(y_test, rf_predictions)

    # Calculate the mean absolute error for both models
    lr_mae = mean_absolute_error(y_test, lr_predictions)
    rf_mae = mean_absolute_error(y_test, rf_predictions)

    # Print the results
    print(f'Linear Regression MSE: {lr_mse}')
    print(f'Random Forest MSE: {rf_mse}')
    print(f'Linear Reg