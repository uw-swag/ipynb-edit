```python
    # Exercise 11.1
    # Implement a function that computes the sum of a list of convex quadratic functions.
    # The function should take a list of tuples, where each tuple contains the coefficients of a quadratic function and the number of terms in the function.
    # The function should return the sum of the functions.

    def sum_of_quadratic_functions(lst):
        # Initialize the sum to 0
        total_sum = 0

        # Loop over the list of tuples
        for coeff, num_terms in lst:
            # Add the quadratic function to the sum
            total_sum += coeff * num_terms

        # Return the sum
        return total_sum

    # Test the function
    print(sum_of_quadratic_functions([(1, 2), (3, 4), (5, 6)]))  # Output: 33

    # Exercise 11.2
    # Implement a function that computes the sum of a list of convex quadratic functions using a generator.
    # The function should take a list of tuples, where each tuple contains the coefficients of a quadratic function and the number of terms in the function.
    # The function should return the sum of the functions.

    def sum_of_quadratic_functions_generator(lst):
        # Initialize the sum to 0
        total_sum = 0

        # Loop over the list of tuples
        for coeff, num_terms in lst:
            # Add the quadratic function to the sum
            total_sum += coeff * num_terms

        # Return the sum
        return total_sum

    # Test the function
    print(sum_of_quadratic_functions_generator([(1, 2), (3, 4), (5, 6)]))  # Output: 33

    # Exercise 11.3
    # Implement a function that computes the sum of a list of convex quadratic functions using a generator.
    # The function should take a list of tuples, where each tuple contains the coefficients of a quadratic function and the number of terms in the function