```
    # Importing necessary libraries
    import tensorflow as tf
    from tensorflow.keras.models import Model
    from tensorflow.keras.layers import Input, Dense, Conv2D, BatchNormalization, MaxPooling2D, Flatten
    from tensorflow.keras.optimizers import Adam
    from tensorflow.keras.regularizers import l2
    from tensorflow.keras.datasets import cifar10

    # Loading the CIFAR-10 dataset
    (x_train, y_train), (x_test, y_test) = cifar10.load_data()

    # Normalizing the data
    x_train, x_test = x_train / 255.0, x_test / 255.0

    # Defining the model
    i = Input(shape=(32, 32, 3))
    x = Conv2D(32, (3, 3), activation='relu', padding='same', kernel_regularizer=l2(0.001))(i)
    x = BatchNormalization()(x)
    x = Conv2D(32, (3, 3), activation='relu', padding='same', kernel_regularizer=l2(0.001))(x)
    x = BatchNormalization()(x)
    x = MaxPooling2D((2, 2))(x)
    x = Flatten()(x)
    o = Dense(10, activation='softmax')(x)

    model = Model(i, o)

    # Compiling the model
    model.compile(optimizer=Adam(), loss='sparse_categorical_crossentropy', metrics=['accuracy'])

    # Training the model
    model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10)

    # Evaluating the model
    model.evaluate(x_test, y_test)

    # Saving the model
    model.save('cnn