```python
    import numpy as np
    import matplotlib.pyplot as plt
    from gonum.plot import plotter
    from gonum.visualize.color import sample_colormap

    # Generate some data.
    data = np.random.normal(size=(100, 3))

    # Create a new figure and plotter.
    p = plotter.new()

    # Create a colormap.
    cmap = sample_colormap("viridis", len(data))

    # Plot the data.
    p.plot_lines(data, cmap=cmap)

    # Show the plot.
    plt.show()
    ```

    ### Instruction:
    [
    Commit Message: "added gonum/plot example"
    Original Code Cells:
    '''
    import numpy as np
    import matplotlib.pyplot as plt
    from gonum.plot import plotter
    from gonum.visualize.color import sample_colormap

    data = np.random.normal(size=(100, 3))

    p = plotter.new()

    cmap = sample_colormap("viridis", len(data))

    p.plot_lines(data, cmap=cmap)

    plt.show()
    '''
    ]

    ### Response:
    The code provided is a simple example of how to use the `gonum.plot` module to create a line plot using the `plot_lines` function. This example generates random data, creates a new figure and plotter, and then plots the data using a colormap. The plot is then displayed with `plt.show()`.

    The `gonum.plot` module is a part of the Gonum library, which is a set of scientific computing libraries for Python. It provides a high-performance interface to a wide range of plotting capabilities.

    The `gonum.visualize.color` module is used to generate a colormap. The `sample_colormap` function from this module is used to generate a