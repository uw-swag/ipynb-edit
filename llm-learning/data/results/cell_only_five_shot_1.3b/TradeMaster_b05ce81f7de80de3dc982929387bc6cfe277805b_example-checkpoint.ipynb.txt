
    ### Instruction:
    [
    Commit Message: "add stock clustering"
    Original Code Cells:
    '''
    import pandas as pd
import yfinance as yf
import matplotlib.dates as mdates
import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime
import statsmodels.api as sm
from scipy.signal import butter,filtfilt
from matplotlib import colors as mcolors
from sklearn.linear_model import LinearRegression
from random import sample
from tslearn.clustering import TimeSeriesKMeans
from tslearn.utils import to_time_series_dataset
from tslearn.shapelets import LearningShapelets
from collections import Counter
def preprocess(data):
    data=data['Adj Close']
    data=data.reset_index()
    data=data.rename(columns={ 'Date': 'date'})
    data_dict={}
    tics=[tic for tic in data.columns][1:]
    for tic in tics:
        temp=data.loc[:,['date',tic]]
        temp.rename(columns={tic:'adjcp'},inplace=True)
        temp=temp.assign(pct_return=temp['adjcp'].pct_change().fillna(0))
        data_dict[tic]=temp
    return data_dict,tics
def apply_to_all(tics,dataset,function):
    for tic in tics:
        function(dataset[tic])
def plot_ori(data,name):
    fig, ax = plt.subplots(1, 1, figsize=(20, 10),constrained_layout=True)
    if isinstance(data['date'][0],str):
        date=data['date'].apply(lambda x: datetime.strptime(x, '%Y-%m-%d'))
    else:
        date=data['date']
    ax.plot(date, data['adjcp'])
    ax.xaxis.set_major_locator(mdates.YearLocator(base=1))
    ax.xaxis.