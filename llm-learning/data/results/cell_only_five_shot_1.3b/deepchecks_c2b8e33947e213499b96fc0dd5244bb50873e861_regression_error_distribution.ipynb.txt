```python
    # Importing necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import confusion_matrix, accuracy_score

    # Loading the dataset
    data = pd.read_csv('your_data.csv')

    # Splitting the dataset into features and target variable
    X = data.iloc[:, :-1].values
    y = data.iloc[:, -1].values

    # Splitting the dataset into the Training set and Test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

    # Feature Scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Training the Random Forest Classifier
    classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)
    classifier.fit(X_train, y_train)

    # Predicting the Test set results
    y_pred = classifier.predict(X_test)

    # Making the Confusion Matrix
    cm = confusion_matrix(y_test, y_pred)
    print(cm)

    # Accuracy Score
    print('Accuracy:', accuracy_score(y_test, y_pred))
    ```
    This code is an example of how to use the Random Forest Classifier from the sklearn library to classify a dataset. The dataset is loaded from a CSV file, the features are split into training and testing sets, and the classifier is trained on the training set. The classifier is then used to predict the class of the test set, and the accuracy of the predictions is printed.
