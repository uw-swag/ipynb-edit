```python
    # Importing necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.feature_extraction.text import TfidfVectorizer
    from sklearn.naive_bayes import MultinomialNB
    from sklearn.metrics import confusion_matrix, accuracy_score
    import matplotlib.pyplot as plt
    import seaborn as sns

    # Loading the dataset
    df = pd.read_csv('your_data.csv')

    # Tokenizing the tweets
    df['tweet_baru'] = df['tweet'].apply(lambda x: x.split())

    # Vectorizing the tweets
    tfidf_vectorizer = TfidfVectorizer(stop_words='english')
    df['tweet_baru'] = df['tweet_baru'].apply(lambda x: ' '.join(x))
    X = tfidf_vectorizer.fit_transform(df['tweet_baru'])

    # Splitting the dataset
    X_train, X_test, y_train, y_test = train_test_split(X, df['label'], test_size=0.2, random_state=10)

    # Training the model
    model_naivebayes = MultinomialNB().fit(X_train, y_train)

    # Predicting the labels
    predicted_naivebayes = model_naivebayes.predict(X_test)

    # Plotting the confusion matrix
    plt.figure(dpi=100)
    mat = confusion_matrix(y_test, predicted_naivebayes)
    sns.heatmap(mat.T, annot=True, fmt='d', cbar=False)
    plt.title('Confussion Matrix Naive Bayes')
    plt.xlabel('true label')
    plt.ylabel('predicted tabel')
    plt.show()

    # Plotting the pie chart
    labels = 'Data Posit