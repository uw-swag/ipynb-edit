```python
    import os
    import pandas as pd
    import math
    import numpy as np
    from sklearn.tree import DecisionTreeClassifier
    import matplotlib.pyplot as plt
    headers = ["buying", "maint", "doors", "persons","lug_boot", "safety", "class"]
    data = pd.read_csv("carData.csv", header=None, names=headers)

    data = data.sample(frac=1).reset_index(drop=True) # shuffle
    for h in headers:
        data[h] = data[h].astype('category')
        data[h] = data[h].cat.codes

    data.set_index("class", inplace=True)
    size = len(data)
    train_size = int(math.floor(size * 0.7))
    train_data = data[:train_size]
    test_data = data[train_size:]
    d_tree = DecisionTreeClassifier(criterion="entropy")
    d_tree.fit(train_data, train_data.index)
    d_tree.predict(test_data.iloc[:, 0:6])
    score = d_tree.score(test_data, test_data.index)

    print('Score with criterion = entropy: {0}'.format(score))
    d_tree = DecisionTreeClassifier(criterion="gini")
    d_tree.fit(train_data, train_data.index)
    d_tree.predict(test_data.iloc[:, 0:6])
    score = d_tree.score(test_data, test_data.index)

    print('Score with criterion = gini: {0}'.format(score))
    from sklearn.ensemble import RandomForestClassifier

    def randomForestScores(limitTrees, train_data):
        scores = []
        for i in range(1, limitTrees):
            toFitTrainData = train_data
            d_tree = RandomForestClassifier(n_estimators