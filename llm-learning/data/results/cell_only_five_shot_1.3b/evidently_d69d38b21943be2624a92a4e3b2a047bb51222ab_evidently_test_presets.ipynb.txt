```python
    import pandas as pd
import numpy as np

from sklearn import datasets, ensemble, model_selection

from evidently import ColumnMapping
from evidently.test_suite import TestSuite

from evidently.test_preset import (NoTargetPerformance, DataQuality, DataStability, DataDrift,
Regression, MulticlassClassification, BinaryClassificationTopK, BinaryClassification)
data_stability = TestSuite(tests=[
    DataStability(),
])

data_stability.run(reference_data=adult_ref, current_data=adult_cur)
data_stability
data_quality = TestSuite(tests=[
    DataQuality(),
])

data_quality.run(reference_data=adult_ref, current_data=adult_cur)
data_quality
data_drift = TestSuite(tests=[
    DataDrift(),
])

data_drift.run(reference_data=adult_ref, current_data=adult_cur)
data_drift
no_target_performance = TestSuite(tests=[
    NoTargetPerformance(most_important_features=['education-num', 'hours-per-week']),
])

no_target_performance.run(reference_data=adult_ref, current_data=adult_cur)
no_target_performance
regression_performance = TestSuite(tests=[
    Regression()
])

regression_performance.run(reference_data=housing_ref, current_data=housing_cur)
regression_performance
classification_performance = TestSuite(tests=[
   MulticlassClassification(prediction_type='labels')
])

classification_performance.run(reference_data=iris_ref, current_data=iris_cur)
classification_performance
binary_classification_performance = TestSuite(tests=[
    BinaryClassification(prediction_type='probas'),
])

binary_classification_performance.run(reference_data=bcancer_ref, current_data=bcancer_cur)
binary_class