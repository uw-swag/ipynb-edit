```python
    # Import necessary libraries
    import platform

    print(f"Python version: {platform.python_version()}")
    assert platform.python_version_tuple() >= ("3", "6")

    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    import plotly
    import plotly.graph_objs as go
    import pandas as pd
    # Setup plots
    %matplotlib inline
    plt.rcParams["figure.figsize"] = 10, 8
    %config InlineBackend.figure_format = "retina"
    sns.set()

    # Configure Plotly to be rendered inline in the notebook.
    plotly.offline.init_notebook_mode()
    import sklearn

    print(f"scikit-learn version: {sklearn.__version__}")
    assert sklearn.__version__ >= "0.20"

    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression, SGDRegressor
    from sklearn.metrics import mean_squared_error
    # Load World Happiness Report for 2017
    dataset_url = "https://raw.githubusercontent.com/bpesquet/mlhandbook/master/_datasets/world-happiness-report-2017.csv"
    df_happiness = pd.read_csv(dataset_url)

    # Print dataset shape (rows and columns)
    print(f"Dataset shape: {df_happiness.shape}")
    # Print a concise summary of the dataset
    df_happiness.info()
    # Show the 10 first samples
    df_happiness.head(n=10)
    # Plot histograms for all numerical attributes
    df_happiness.hist(bins=20, figsize=(16, 12))
    plt.show()
    def filter_dataset(df_data, input_features, target_feature):
        """Return a dataset containing only the