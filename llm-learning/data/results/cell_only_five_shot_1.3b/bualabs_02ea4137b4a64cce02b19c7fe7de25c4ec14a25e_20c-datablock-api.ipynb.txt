```python
    from fastai import *
    from fastai.vision import *
    from fastai.metrics import accuracy
    import torch.nn.init as init
    import torch.nn as nn

    # import warnings
    # warnings.filterwarnings("ignore", category=UserWarning, module="torch.nn.functional")
    path_tench = path/'val'/'n02102040'

    # Load the data
    def load_data(path):
        data = ImageList.from_folder(path)
        data = data.split_by_folder(train='train', valid='val', seed=42)
        return data

    data = load_data(path_tench)

    # Create the model
    class ImageClassifier(nn.Module):
        def __init__(self):
            super(ImageClassifier, self).__init__()
            self.conv1 = nn.Conv2d(3, 6, 5)
            self.pool = nn.MaxPool2d(2, 2)
            self.conv2 = nn.Conv2d(6, 16, 5)
            self.fc1 = nn.Linear(16 * 5 * 5, 120)
            self.fc2 = nn.Linear(120, 84)
            self.fc3 = nn.Linear(84, 10)
            self.dropout = nn.Dropout(0.2)

        def forward(self, x):
            x = self.pool(F.relu(self.conv1(x)))
            x = self.pool(F.relu(self.conv2(x)))
            x = x.view(-1, 16 * 5 * 5)
            x = F.relu(self.fc1(x))
            x = self.dropout(x)
            x = F.relu(self.fc2(x))
            x = self.dropout(x)
            x = self.fc3(x)
            return x

    model = Image