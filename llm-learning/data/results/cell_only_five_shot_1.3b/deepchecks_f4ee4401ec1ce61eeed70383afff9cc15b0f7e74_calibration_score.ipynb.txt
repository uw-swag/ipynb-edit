```
    ## Notebook 1: Data Generation
    ###
    # This notebook generates random data for the purpose of demonstration.

    ### Code:
    ```python
    import numpy as np

    def generate_random(sigma, N, mu1=[15., 25., 10], mu2=[30., 40., 30], mu3=[25., 10., 20], mu4=[40., 30., 40]):  
        c = sigma.shape[-1]        # generate N rows of c-dimension random test data
        X = np.zeros((N, c))       # initialize X, N samples
        target = np.zeros((N,1))
        for i in range(N):  
            if np.random.random(1) < 0.25:  # generate 0-1 random number  
                X[i, :]  = np.random.multivariate_normal(mu1, sigma[0, :, :], 1)     # use first Gaussian model to generate 3-dim data
                target[i] = 0
            elif 0.25 <= np.random.random(1) < 0.5:  
                X[i, :] = np.random.multivariate_normal(mu2, sigma[1, :, :], 1)      # use second Gaussian model to generate 3-dim data
                target[i] = 1
            elif 0.5 <= np.random.random(1) < 0.75:  
                X[i, :] = np.random.multivariate_normal(mu3, sigma[2, :, :], 1)      # use third Gaussian model to generate 3-dim data
                target[i] = 2
            else:  
                X[i, :] = np.random.multivariate_normal(mu4, sigma[3, :, :], 1)      # use fourth Gaussian model to generate 3-dim data
                target[i] = 3
        return X, target
    ```

    ###

    ## Notebook 2