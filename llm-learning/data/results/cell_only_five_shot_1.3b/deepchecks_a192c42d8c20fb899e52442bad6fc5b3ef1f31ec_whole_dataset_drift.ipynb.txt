```python
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression
    from sklearn import metrics

    # Load the dataset
    df = pd.read_csv('data.csv')

    # Display the first 5 rows of the dataset
    print(df.head())

    # Check for missing values
    print(df.isnull().sum())

    # Describe the dataset
    print(df.describe())

    # Correlation matrix
    print(df.corr())

    # Split the dataset into features and target variable
    X = df.drop('target', axis=1)
    y = df['target']

    # Split the dataset into training set and test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Create a linear regression model
    model = LinearRegression()

    # Train the model
    model.fit(X_train, y_train)

    # Make predictions on the test set
    y_pred = model.predict(X_test)

    # Evaluate the model
    print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))
    print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))
    print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))

    # Display the model performance
    print(pd.DataFrame(model.coef_, X.columns, columns=['Coefficient']).sort_values('Coefficient', ascending=False))

    # Display the first 10 rows of the dataset
    print(df.head(10))

    # Display the last 10 rows of the dataset
