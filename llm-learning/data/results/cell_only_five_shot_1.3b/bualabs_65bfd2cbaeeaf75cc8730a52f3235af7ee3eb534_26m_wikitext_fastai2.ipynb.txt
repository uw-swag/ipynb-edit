```python
    # Importing necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

    # Loading the dataset
    df = pd.read_csv('dataset.csv')

    # Data preprocessing
    # Fill missing values
    df.fillna(df.mean(), inplace=True)

    # Encoding categorical variables
    df = pd.get_dummies(df)

    # Splitting the dataset into features and target variable
    X = df.drop('target', axis=1)
    y = df['target']

    # Splitting the dataset into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Feature scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Training the model
    model = RandomForestClassifier(n_estimators=100, random_state=42)
    model.fit(X_train, y_train)

    # Predicting the test set results
    y_pred = model.predict(X_test)

    # Evaluating the model
    print('Accuracy:', accuracy_score(y_test, y_pred))
    print('Confusion Matrix:', confusion_matrix(y_test, y_pred))
    print('Classification Report:', classification_report(y_test, y_pred))

    # Saving the model
    import joblib
    joblib.dump(model, 'model.pkl')
    ```
