```python
    # Importing necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression
    from sklearn import metrics

    # Load the dataset
    df = pd.read_csv('housing_prices.csv')

    # Preprocessing the data
    df = df.dropna()

    # Selecting features and target variable
    X = df[['total_sqft', 'bedrooms', 'age', 'garage_spaces']]
    y = df['price']

    # Splitting the dataset into the Training set and Test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

    # Training the model
    regressor = LinearRegression()
    regressor.fit(X_train, y_train)

    # Predicting the Test set results
    y_pred = regressor.predict(X_test)

    # Comparing Actual vs Predicted
    df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
    print(df)

    # Evaluating the model
    print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))
    print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))
    print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))

    # Predicting a new house price
    new_house = [[3000, 3, 10, 2]]
    print(f"The predicted price of the house is: {regressor.predict(new_house)}")
    ```

    ### Instruction:
    [
    Commit Message: "Guided Project: Predicting House Sale Prices, 2/5 Done"
    Original Code C