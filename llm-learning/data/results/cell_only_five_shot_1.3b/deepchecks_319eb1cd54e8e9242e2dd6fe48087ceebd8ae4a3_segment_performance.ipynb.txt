```
    from deepchecks import Dataset

    cat_features = ['workclass', 'education', 'marital-status', 'occupation', 'relationship', 
                    'race', 'sex', 'native-country']
    train_ds = Dataset(train_df, label=label_name, cat_features=cat_features)
    validation_ds = Dataset(val_df, label=label_name, cat_features=cat_features)

    numeric_features = list(set(train_ds.features()) - set(cat_features))
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OrdinalEncoder
    from sklearn.ensemble import RandomForestClassifier

    numeric_transformer = SimpleImputer()
    categorical_transformer = Pipeline(
        steps=[("imputer", SimpleImputer(strategy="most_frequent")), ("encoder", OrdinalEncoder())]
    )

    train_ds.features()
    preprocessor = ColumnTransformer(
        transformers=[
            ("num", numeric_transformer, numeric_features),
            ("cat", categorical_transformer, cat_features),
        ]
    )

    model = Pipeline(steps=[("preprocessing", preprocessor), ("model", RandomForestClassifier(max_depth=5, n_jobs=-1))])
    model.fit(train_ds.features_columns(), train_ds.label_col());
    ```
