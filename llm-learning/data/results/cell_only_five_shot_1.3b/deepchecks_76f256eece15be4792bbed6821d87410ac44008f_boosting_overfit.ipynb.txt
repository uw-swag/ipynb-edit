```python
    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn.metrics import r2_score
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression

    # Generate some example data
    np.random.seed(0)
    x = np.random.rand(100, 1)
    y = 2 + 3 * x + np.random.rand(100, 1)

    # Split the data into training and testing sets
    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

    # Fit a linear regression model to the training data
    model = LinearRegression()
    model.fit(x_train, y_train)

    # Make predictions on the testing data
    y_pred = model.predict(x_test)

    # Print the R^2 score
    print(f"R^2 score: {r2_score(y_test, y_pred)}")

    # Plot the original data and the predictions
    plt.scatter(x, y)
    plt.plot(x, model.predict(x), color='red')
    plt.show()
    ```
    This code generates some example data, splits it into a training set and a testing set, fits a linear regression model to the training data, makes predictions on the testing data, and then prints the R^2 score. Finally, it plots the original data and the predictions.
