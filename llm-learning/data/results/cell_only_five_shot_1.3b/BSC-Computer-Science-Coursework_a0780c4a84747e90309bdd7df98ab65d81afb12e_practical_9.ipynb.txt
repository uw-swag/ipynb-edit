
    # Importing necessary libraries
    from sklearn.decomposition import PCA
    import pandas as pd
    import numpy as np

    # Load the dataset
    df = pd.read_csv('your_data.csv')

    # Preprocessing the data
    # This step depends on the nature of your data
    # For example, you might need to fill missing values, normalize, etc.

    # Applying PCA
    pca = PCA(n_components=2)
    principalComponents = pca.fit_transform(df)

    # Creating a DataFrame for the PCA results
    principalDf = pd.DataFrame(data = principalComponents, columns = ['principal component 1', 'principal component 2'])

    # Visualizing the PCA results
    import matplotlib.pyplot as plt
    fig = plt.figure(figsize = (8,8))
    ax = fig.add_subplot(1,1,1) 
    ax.set_xlabel('Principal Component 1', fontsize = 15)
    ax.set_ylabel('Principal Component 2', fontsize = 15)
    ax.set_title('2-Component PCA', fontsize = 20)
    ax.scatter(principalDf['principal component 1'], principalDf['principal component 2'])
    plt.show()

    ## End of Data Science Practical 09 "Principal Component Analysis (PCA)"
