```python
    import numpy as np
    import pandas as pd
    from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

    def generate_metrics(y_true, y_pred):
        metrics = {}
        metrics['Mean Squared Error'] = mean_squared_error(y_true, y_pred)
        metrics['Mean Absolute Error'] = mean_absolute_error(y_true, y_pred)
        metrics['R2 Score'] = r2_score(y_true, y_pred)
        return metrics

    y_true = np.array([3, -0.5, 2, 7])
    y_pred = np.array([2.5, 0.0, 2, 8])

    metrics = generate_metrics(y_true, y_pred)
    pd.DataFrame(metrics, index=['Value']).T
    ```

    This code will generate a pandas DataFrame with the metrics: Mean Squared Error, Mean Absolute Error, and R2 Score.

    The function `generate_metrics` takes two arguments: `y_true` and `y_pred`, which are the true and predicted values respectively. It then calculates the metrics using the `sklearn.metrics` functions and returns a dictionary with these metrics.

    The last two lines of the code are an example of how to use this function. It creates some dummy `y_true` and `y_pred` values, generates the metrics for these values, and prints the results in a pandas DataFrame.
