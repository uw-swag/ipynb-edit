```python
    import pandas as pd
    from sklearn.metrics import confusion_matrix, classification_report

    # Assuming you have a model named 'model' and a test dataset named 'test_dataset'
    # Predict the labels of the test dataset
    y_pred = model.predict(test_dataset)

    # Convert the predicted labels to one-hot encoding
    y_pred_one_hot = np.zeros((y_pred.shape[0], 10))
    for i in range(y_pred.shape[0]):
        y_pred_one_hot[i, y_pred[i]] = 1

    # Convert the true labels to one-hot encoding
    y_true_one_hot = np.zeros((test_dataset.shape[0], 10))
    for i in range(test_dataset.shape[0]):
        y_true_one_hot[i, test_dataset[i]] = 1

    # Calculate the confusion matrix
    cm = confusion_matrix(y_true_one_hot.argmax(axis=1), y_pred_one_hot.argmax(axis=1))

    # Print the confusion matrix
    print("Confusion Matrix:")
    print(cm)

    # Print the classification report
    print("Classification Report:")
    print(classification_report(y_true_one_hot, y_pred_one_hot))
    ```

    This code will print the confusion matrix and the classification report, which provide metrics such as precision, recall, f1-score, and support for each class.
