
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.preprocessing import StandardScaler
    from sklearn.decomposition import PCA
    from sklearn.cluster import KMeans

    # Load the dataset
    df = pd.read_csv('data.csv')

    # Check for missing values
    print(df.isnull().sum())

    # Describe the dataset
    print(df.describe())

    # Check the distribution of the target variable
    sns.countplot(df['target'])
    plt.show()

    # Correlation matrix
    plt.figure(figsize=(12, 10))
    sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
    plt.show()

    # Boxplot for each feature
    df.boxplot(rot=90)
    plt.show()

    # Standardize the features
    scaler = StandardScaler()
    df_scaled = pd.DataFrame(scaler.fit_transform(df), columns=df.columns)

    # PCA for dimensionality reduction
    pca = PCA(n_components=2)
    df_pca = pca.fit_transform(df_scaled)

    # KMeans clustering
    kmeans = KMeans(n_clusters=3)
    kmeans.fit(df_pca)

    # Adding the cluster labels to the original dataframe
    df['cluster'] = kmeans.labels_

    # Visualize the clusters
    plt.figure(figsize=(10, 8))
    sns.scatterplot(df_pca[:, 0], df_pca[:, 1], hue=df['cluster'], palette='viridis')
    plt.show()

    # EDA ends here

    ### Instruction:
    [
    Commit Message: "EDA of the dataset"
    Original Code Cells:
    '''