```python
    # Adding files via upload
    from google.cloud import storage

    def upload_blob(bucket_name, source_file_name, destination_blob_name):
        """Uploads a file to the bucket."""
        # bucket_name = "your-bucket-name"
        # source_file_name = "local/path/to/file"
        # destination_blob_name = "storage-object-name"

        storage_client = storage.Client()
        bucket = storage_client.bucket(bucket_name)
        blob = bucket.blob(destination_blob_name)

        blob.upload_from_filename(source_file_name)

        print(
            "File {} uploaded to {}.".format(
                source_file_name, destination_blob_name
            )
        )
    ```
    This function is used to upload files to a Google Cloud Storage bucket. The function takes the name of the bucket, the local path to the file, and the name of the storage object (the name of the file in the bucket).

    You can use this function to upload files to your Google Cloud Storage bucket. For example, to upload a file named "local/path/to/file" to a bucket named "my-bucket" and save it as "storage-object-name", you would call:

    ```python
    upload_blob("my-bucket", "local/path/to/file", "storage-object-name")
    ```

    Please replace "my-bucket", "local/path/to/file", and "storage-object-name" with your actual bucket name, local file path, and storage object name.

    Note: You need to have the Google Cloud SDK installed and authenticated to use this function. You can do this by setting the GOOGLE_APPLICATION_CREDENTIALS environment variable to the path of your service account key JSON file.

    Also, you need to have the Google Cloud Storage Python Client Library installed. You can install it using pip:

    ```
    pip install google-cloud-storage
    ```

    Finally, you need to have the Google Cloud Storage bucket where you want to upload the file.
