```
    from deepchecks import Dataset

    cat_features = ['workclass', 'education', 'marital-status', 'occupation', 'relationship', 
                    'race', 'sex', 'native-country']
    train_ds = Dataset(train_df, numeric_features=numeric_features)
    validation_ds = Dataset(val_df, numeric_features=numeric_features)
    ```

    The `label_name` parameter in the `Dataset` constructor is used to specify the name of the label column in the dataset. If the label column is not provided, the constructor will try to infer the label column from the first row of the dataset.

    The `numeric_features` parameter in the `Dataset` constructor is used to specify the names of the numeric features in the dataset. This is used to exclude categorical features from the dataset.

    The `cat_features` parameter in the `Dataset` constructor is used to specify the names of the categorical features in the dataset.

    The `Dataset` class also supports the `features` and `label` properties, which can be used to access the features and label of the dataset respectively.

    The `Dataset` class also supports the `show_info` method, which can be used to print information about the dataset, including the number of rows, the number of unique labels, and the names of the features and label.

    The `Dataset` class also supports the `to_pandas` method, which can be used to convert the dataset to a pandas DataFrame.

    The `Dataset` class also supports the `to_numpy` method, which can be used to convert the dataset to a numpy array.

    The `Dataset` class also supports the `to_dict` method, which can be used to convert the dataset to a dictionary.

    The `Dataset` class also supports the `to_onnx` method, which can be used to convert the dataset to an ONNX model.

    The `Dataset` class also supports the `from_pandas` method, which can be used to create a dataset from a pandas DataFrame.

    The `Dataset` class also supports the `from_