```
    # First check the Python version
    import sys
    if sys.version_info < (3,4):
        print('You are running an older version of Python!\n\n',
              'You should consider updating to Python 3.4.0 or',
              'higher as the libraries built for this course',
              'have only been tested in Python 3.4 and higher.\n')
        print('Try installing the Python 3.5 version of anaconda'
              'and then restart `jupyter notebook`:\n',
              'https://www.continuum.io/downloads\n\n')

    # Now get necessary libraries
    try:
        import os
        import numpy as np
        import matplotlib.pyplot as plt
        from skimage.transform import resize
        from skimage import data
        from scipy.misc import imresize
        from scipy.ndimage.filters import gaussian_filter
        import IPython.display as ipyd
        import tensorflow as tf
        from libs import utils, gif, datasets, dataset_utils, nb_utils
    except ImportError as e:
        print("Make sure you have started notebook in the same directory",
              "as the provided zip file which includes the 'libs' folder",
              "and the file 'utils.py' inside of it.  You will NOT be able",
              "to complete this assignment unless you restart jupyter",
              "notebook inside the directory created by extracting",
              "the zip file or cloning the github repo.")
        print(e)

    # We'll tell matplotlib to inline any drawn figures like so:
    %matplotlib inline
    plt.style.use('ggplot')
    help(tf.nn.rnn)
    Help on function rnn in module tensorflow.python.ops.rnn:

    rnn(cell, inputs, initial_state=None, dtype=None, sequence_length=None, scope=None)
        Creates a recurrent neural network specified by RNNCell `cell`.
        
        The simplest form of RNN network generated is:
        ```py