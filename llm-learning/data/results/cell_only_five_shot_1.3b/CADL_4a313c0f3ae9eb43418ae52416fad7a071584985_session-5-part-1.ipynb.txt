```python
    from tensorflow.python.layers import batch_norm as batch_norm_layer

    def batch_norm(x, is_training, decay=0.99, epsilon=1e-5, scale=True, center=True, fused=True):
        return batch_norm_layer.batch_norm(x, is_training=is_training, decay=decay, epsilon=epsilon, scale=scale, center=center, fused=fused)

    help(batch_norm)
    ```

    The `batch_norm` function is now imported from `tensorflow.python.layers` and is used to apply batch normalization to the output of the convolutional and deconvolutional layers.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of the code.

    The `batch_norm` function is now a part of the `libs.batch_norm` module, which is imported at the start of