```python
    # Update the class 10 notebook and script
    # Add a new cell at the end of the notebook
    # This cell should contain the updated code

    ### Instruction:
    [
    Commit Message: "update class 10 notebook and script"
    Original Code Cells:
    '''
    print train_test_rmse(['temp', 'season', 'weather', 'humidity'])
print train_test_rmse(['temp', 'season', 'weather'])
print train_test_rmse(['temp', 'season', 'humidity'])
print train_test_rmse(['casual', 'registered'])
# hour as a numeric feature
bikes['hour'] = bikes.index.hour
# hour as a categorical feature
hour_dummies = pd.get_dummies(bikes.hour, prefix='hour')
hour_dummies.drop(hour_dummies.columns[0], axis=1, inplace=True)
bikes = pd.concat([bikes, hour_dummies], axis=1)
# daytime as a categorical feature
bikes['daytime'] = ((bikes.hour > 6) & (bikes.hour < 21)).astype(int)
print train_test_rmse(['hour'])
print train_test_rmse(bikes.columns[bikes.columns.str.startswith('hour_')])
print train_test_rmse(['daytime'])

    '''
    ]

    ### Response:
    # Update the class 10 notebook and script
    # Add a new cell at the end of the notebook
    # This cell should contain the updated code

    ### Instruction:
    [
    Commit Message: "update class 10 notebook and script"
    Original Code Cells:
    '''
    print train_test_rmse(['temp', 'season', 'weather', 'humidity'])
print train_test_rmse(['temp', 'season', 'weather'])
print train_test_rmse(['temp', 'season', 'humidity'])
print train_test_rmse(['casual', 'registered'])
# hour as a