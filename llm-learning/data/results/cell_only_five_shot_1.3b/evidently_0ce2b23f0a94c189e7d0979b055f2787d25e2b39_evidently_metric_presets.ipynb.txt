```python
    from pymongo import MongoClient
    from bson.json_util import dumps
    from bson.objectid import ObjectId
    from flask import Flask, request, jsonify
    from flask_pymongo import PyMongo
    from flask_restful import Api, Resource
    from werkzeug.security import generate_password_hash, check_password_hash
    from flask_jwt_extended import (
        JWTManager, jwt_required, create_access_token,
        get_jwt_identity
    )
    from werkzeug.exceptions import BadRequest

    app = Flask(__name__)
    app.config['MONGO_URI'] = 'mongodb://localhost:27017/myDatabase'
    mongo = PyMongo(app)
    api = Api(app)
    jwt = JWTManager(app)

    class UserRegister(Resource):
        def post(self):
            # check if user already exists
            users = mongo.db.users
            username = request.json['username']
            password = request.json['password']
            if users.find_one({'username': username}):
                return {"error": "User already exists"}, 400
            # create new user
            users.insert({
                'username': username,
                'password': generate_password_hash(password)
            })
            return {"success": True}, 200

    class UserLogin(Resource):
        def post(self):
            users = mongo.db.users
            username = request.json['username']
            password = request.json['password']
            user = users.find_one({'username': username})
            # check if user exists and password is correct
            if user and check_password_hash(user['password'], password):
                access_token = create_access_token(identity=username)
                return {'access_token': access_token}, 200
            return {"error": "Invalid username or password"}, 400

    api.add_resource(UserRegister, '/register')
    api.add_resource(UserLogin