```python
    # Homework 5: Implement a function to find the longest common subsequence (LCS) of two strings.

    def longest_common_subsequence(str1, str2):
        m = len(str1)
        n = len(str2)

        # Create a table to store lengths of longest common suffixes of substrings.
        dp = [[0 for x in range(n+1)] for x in range(m+1)]

        # Fill dp[] in bottom up manner
        for i in range(m+1):
            for j in range(n+1):
                if i == 0 or j == 0:
                    dp[i][j] = 0
                elif str1[i-1] == str2[j-1]:
                    dp[i][j] = dp[i-1][j-1] + 1
                else:
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])

        # LCS is stored in dp[m][n]
        return dp[m][n]

    # Test the function
    print(longest_common_subsequence("ABCBDAB", "BDCAB"))  # Output: 4
    print(longest_common_subsequence("ABCBDAB", "BACDAB"))  # Output: 3
    print(longest_common_subsequence("ABCBDAB", "BAC"))  # Output: 2
    ```
