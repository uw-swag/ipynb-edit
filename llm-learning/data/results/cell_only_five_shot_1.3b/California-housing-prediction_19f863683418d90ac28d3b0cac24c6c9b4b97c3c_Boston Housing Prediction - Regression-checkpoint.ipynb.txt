```python
    import pandas as pd
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LinearRegression
    from sklearn import metrics

    # Load the dataset
    df = pd.read_csv('housing_prices.csv')

    # Preprocess the data
    df = df.dropna()

    # Define the features and the target
    features = df[['total_sqft', 'bedrooms', 'age', 'age_of_property', 'garage_spaces']]
    target = df['price']

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

    # Create a linear regression model
    model = LinearRegression()

    # Train the model
    model.fit(X_train, y_train)

    # Make predictions
    predictions = model.predict(X_test)

    # Evaluate the model
    print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, predictions))
    print('Mean Squared Error:', metrics.mean_squared_error(y_test, predictions))
    print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))

    # Save the model
    import joblib
    joblib.dump(model, 'house_price_model.pkl')
    ```
