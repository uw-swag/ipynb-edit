```python
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import classification_report, confusion_matrix
    from sklearn.preprocessing import StandardScaler

    # Load the dataset
    df = pd.read_csv('hard_drive_failure.csv')

    # Data preprocessing
    df.drop(['Serial No.', 'Product', 'Company', 'Failure Mode', 'Failure'], axis=1, inplace=True)
    df.replace(['Checked', 'Unchecked'], [0, 1], inplace=True)
    df.fillna(df.mean(), inplace=True)

    # Split the dataset into features and target variable
    X = df.drop('Failure', axis=1)
    y = df['Failure']

    # Split the dataset into training set and test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Feature scaling
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Logistic Regression Model
    model = LogisticRegression()
    model.fit(X_train, y_train)

    # Predicting the Test set results
    y_pred = model.predict(X_test)

    # Evaluating the model
    print(confusion_matrix(y_test, y_pred))
    print(classification_report(y_test, y_pred))

    # Saving the model
    import joblib
    joblib.dump(model, 'hard_drive_failure_model.pkl')

    # Load the saved model
    loaded_model = joblib.load('hard_drive_failure_model.pkl')

    # Predicting a