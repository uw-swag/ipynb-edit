```python
    # Importing necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import accuracy_score, confusion_matrix
    from sklearn.preprocessing import StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.neighbors import KNeighborsClassifier
    from sklearn.svm import SVC
    from sklearn.tree import DecisionTreeClassifier
    from sklearn.ensemble import GradientBoostingClassifier
    from sklearn.metrics import classification_report

    # Loading the dataset
    df = pd.read_csv('train.csv')

    # Data preprocessing
    df['Age'] = df.Age.fillna(df.Age.mean())
    df = df.where((pd.notnull(df)), 0)
    for f in ["Sex", "Embarked", "Cabin"]:
        df[f] = df[f].astype('category')
        df[f] = df[f].cat.codes

    features = ["Pclass","Sex","Age","SibSp","Parch","Fare","Embarked", "Cabin"]
    X = df.get(features)
    Y = df["Survived"].values

    # Splitting the dataset
    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.25)

    # Model Training
    models = [
        LogisticRegression(),
        RandomForestClassifier(),
        KNeighborsClassifier(),
        SVC(),
        DecisionTreeClassifier(),
        GradientBoostingClassifier()
    ]

    model_names = [
        "Logistic Regression",
        "Random Forest",
        "K-Nearest Neighbors",
        "Support Vector Machine",
        "Decision Tree",
        "Gradient Boosting"
   