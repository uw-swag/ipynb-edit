
    ### Instruction:
    [
    Commit Message: "Update chapters 3, 4 and 5"
    Original Code Cells:
    '''
    from sklearn.datasets import fetch_california_housing

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import r2_score

# Load the dataset
data = fetch_california_housing()

# Create a dataframe
df = pd.DataFrame(data.data, columns=data.feature_names)
df['target'] = pd.Series(data.target)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df[data.feature_names], df['target'], random_state=1)

# Create a linear regression model
lr = LinearRegression()
lr.fit(X_train, y_train)

# Make predictions
y_pred_lr = lr.predict(X_test)

# Create a decision tree model
dt = DecisionTreeRegressor()
dt.fit(X_train, y_train)

# Make predictions
y_pred_dt = dt.predict(X_test)

# Create a random forest model
rf = RandomForestRegressor()
rf.fit(X_train, y_train)

# Make predictions
y_pred_rf = rf.predict(X_test)

# Evaluate the models
print("Linear Regression R2 score: ", r2_score(y_test, y_pred_lr))
print("Decision Tree R2 score: ", r2_score(y_test, y_pred