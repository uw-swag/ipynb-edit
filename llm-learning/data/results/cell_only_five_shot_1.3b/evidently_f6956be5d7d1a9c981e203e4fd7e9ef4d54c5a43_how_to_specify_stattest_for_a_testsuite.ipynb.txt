```python
    import pandas as pd
import numpy as np

from scipy.stats import anderson_ksamp
from sklearn import datasets, ensemble, model_selection

from evidently import ColumnMapping
from evidently.calculations.stattests import StatTest
from evidently.options import DataDriftOptions
from evidently.test_suite import TestSuite
from evidently.tests import *
per_feature_stattest = {x: 'wasserstein' for x in ['age', 'fnlwgt', 'education-num', 
                                                   'capital-gain', 'capital-loss', 'hours-per-week']}
for column in ['sex', 'class']:
    per_feature_stattest[column] = 'z'
for column in ['workclass', 'education', 'marital-status']:
    per_feature_stattest[column] = 'kl_div'
for column in ['occupation', 'relationship', 'race',  'native-country']:
    per_feature_stattest[column] = 'jensenshannon'
def _anderson_stat_test(reference_data: pd.Series, current_data: pd.Series, _feature_type: str, threshold: float):
    p_value = anderson_ksamp(np.array([reference_data, current_data]))[2]
    return p_value, p_value < threshold

anderson_stat_test = StatTest(
    name="anderson",
    display_name="Anderson test (p_value)",
    func=_anderson_stat_test,
    allowed_feature_types=["num"]
)
stat_test_option = DataDriftOptions(num_features_stattest=anderson_stat_test)

    '''

    ### Instruction:
    [
    Commit Message: "add anderson example in notebook"
    Original Code Cells:
    '''
    import pandas as pd
import numpy as np

from scipy.stats import anderson_ksamp
from sklearn import datasets, ensemble, model_selection

from evidently import ColumnMapping
from