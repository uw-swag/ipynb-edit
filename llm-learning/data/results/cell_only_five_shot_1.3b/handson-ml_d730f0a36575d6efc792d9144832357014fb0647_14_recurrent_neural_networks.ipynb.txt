```python
    # imports
    import tensorflow as tf
    from tensorflow.examples.tutorials.mnist import input_data

    # to make this notebook's output stable across runs
    def reset_graph(seed=42):
        tf.reset_default_graph()
        tf.set_random_seed(seed)
        np.random.seed(seed)

    # To plot pretty figures
    %matplotlib inline
    import matplotlib
    import matplotlib.pyplot as plt
    plt.rcParams['axes.labelsize'] = 14
    plt.rcParams['xtick.labelsize'] = 12
    plt.rcParams['ytick.labelsize'] = 12

    # Where to save the figures
    PROJECT_ROOT_DIR = "."
   CHAPTER_ID = "rnn"

    def save_fig(fig_id, tight_layout=True):
        path = os.path.join(PROJECT_ROOT_DIR, "images", CHAPTER_ID, fig_id + ".png")
        print("Saving figure", fig_id)
        if tight_layout:
            plt.tight_layout()
        plt.savefig(path, format='png', dpi=300)

    # imports
    import tensorflow as tf
    from tensorflow.examples.tutorials.mnist import input_data

    # to make this notebook's output stable across runs
    def reset_graph(seed=42):
        tf.reset_default_graph()
        tf.set_random_seed(seed)
        np.random.seed(seed)

    # To plot pretty figures
    %matplotlib inline
    import matplotlib
    import matplotlib.pyplot as plt
    plt.rcParams['axes.labelsize'] = 14
    plt.rcParams['xtick.labelsize'] = 12
    plt.rcParams['ytick.labelsize'] = 12

    # Where to save the figures
    PROJECT_ROOT_DIR = "."
   