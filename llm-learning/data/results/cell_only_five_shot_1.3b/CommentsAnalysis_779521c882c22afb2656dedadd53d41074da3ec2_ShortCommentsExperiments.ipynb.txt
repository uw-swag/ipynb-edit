```python
    from sklearn.naive_bayes import GaussianNB
    from sklearn.model_selection import train_test_split
    from sklearn.metrics import accuracy_score

    # Assume we have a DataFrame df with features and target
    X = df.drop('target', axis=1)
    y = df['target']

    # Split the data into training and test sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Create a Gaussian Naive Bayes model
    gnb = GaussianNB()

    # Fit the model to the training data
    gnb.fit(X_train, y_train)

    # Make predictions on the test data
    y_pred = gnb.predict(X_test)

    # Calculate the accuracy of the model
    accuracy = accuracy_score(y_test, y_pred)

    print(f'Accuracy: {accuracy}')
    ```
    This code will train a Gaussian Naive Bayes classifier on a dataset, make predictions, and calculate the accuracy of the model.
