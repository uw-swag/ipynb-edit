```python
    from deepchecks.vision.base import VisionData
    from deepchecks.vision.checks.performance import ClassPerformance

    # Split the code into multiple files
    # VisionData.py
    '''
    from deepchecks.vision.base import VisionData

    class VisionData:
        def __init__(self, data, labels):
            self.data = data
            self.labels = labels

        def split(self, ratio):
            # Implement split logic here
            pass

    # ClassPerformance.py
    '''
    from deepchecks.vision.checks.performance import ClassPerformance

    class ClassPerformance:
        def __init__(self, data, labels):
            self.data = data
            self.labels = labels

        def evaluate(self):
            # Implement evaluation logic here
            pass

    '''
    ```

    ### Instruction:
    [
    Commit Message: "Adding a new feature to the base class (#988)"
    Original Code Cells:
    '''
    from deepchecks.vision.base import VisionData
    from deepchecks.vision.checks.performance import ClassPerformance

    '''
    ]

    ### Response:
    ```python
    from deepchecks.vision.base import VisionData
    from deepchecks.vision.checks.performance import ClassPerformance

    # VisionData.py
    '''
    from deepchecks.vision.base import VisionData

    class VisionData:
        def __init__(self, data, labels):
            self.data = data
            self.labels = labels

        def split(self, ratio):
            # Implement split logic here
            pass

        def new_feature(self):
            # Implement new feature logic here
            pass

    # ClassPerformance.py
    '''
    from deepchecks.vision.checks.performance import ClassPerformance

    class ClassPerformance:
        def __init__(self, data, labels):
            self.data = data
            self.labels = labels

        def evaluate(self):
            # Im