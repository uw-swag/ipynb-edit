```python
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    from sklearn.model_selection import train_test_split 
    from sklearn.linear_model import LinearRegression
    from sklearn import metrics

    # Load the dataset
    df = pd.read_csv('your_data.csv')

    # Select the features and the target
    X = df['feature1'].values.reshape(-1,1)
    y = df['target'].values.reshape(-1,1)

    # Split the dataset into the training set and test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

    # Create linear regression object
    reg = LinearRegression()

    # Train the model using the training sets
    reg.fit(X_train, y_train)

    # Make predictions using the testing set
    y_pred = reg.predict(X_test)

    # The coefficients
    print('Coefficients: \n', reg.coef_)
    # The mean squared error
    print('Mean squared error: %.2f'
            % metrics.mean_squared_error(y_test, y_pred))
    # The coefficient of determination: 1 is perfect prediction
    print('Coefficient of determination: %.2f'
            % metrics.r2_score(y_test, y_pred))
    ```
    This code will create a multiple linear regression model using the given dataset. The model is trained on the training set and then used to make predictions on the test set. The coefficients, mean squared error, and the coefficient of determination are printed out.
