```python
    import os
    import datetime

    class AutoMLOps:
        @staticmethod
        def generate(project_id, pipeline_params, use_kfp_spec, run_local, schedule):
            # Your code to generate the pipeline
            pass

        @staticmethod
        def go(project_id, pipeline_params, use_kfp_spec, run_local, schedule):
            # Your code to run the pipeline
            pass

    pipeline_params = {
        "bq_table": "sandbox-srastatter.mlops_boxer_test.dry-beans",
        "model_directory": f"gs://mlops-boxer-test/trained_models/{datetime.datetime.now()}",
        "data_path": "gs://mlops-boxer-test/data",
        "project_id": "sandbox-srastatter",
        "region": "us-central1"
    }

    AutoMLOps.generate(project_id='sandbox-srastatter', pipeline_params=pipeline_params, use_kfp_spec=False, run_local=False, schedule='0 */12 * * *')
    AutoMLOps.go(project_id='sandbox-srastatter', pipeline_params=pipeline_params, use_kfp_spec=False, run_local=False, schedule='0 */12 * * *')
    ```

    The `AutoMLOps` class is a placeholder for your code to generate and run the pipeline. The `generate` method should create the pipeline, and the `go` method should run the pipeline. The `pipeline_params` dictionary contains the parameters for the pipeline.

    The `AutoMLOps.generate` and `AutoMLOps.go` methods are placeholders for your code to implement. You should replace them with your actual code to generate and run the pipeline.

    Please note that the `AutoMLOps.generate` and `AutoMLOps.go` methods are not implemented in the provided code. You need to implement them according to your specific requirements.
