```
    # Importing necessary libraries
    import numpy as np
    import pandas as pd
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import accuracy_score
    from sklearn.metrics import confusion_matrix

    # Load the dataset
    df = pd.read_csv('your_data.csv')

    # Split the dataset into features and target variable
    X = df.drop('target_column', axis=1)
    y = df['target_column']

    # Split the dataset into training set and test set
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Create a Logistic Regression model
    model = LogisticRegression()

    # Train the model
    model.fit(X_train, y_train)

    # Make predictions on the test set
    y_pred = model.predict(X_test)

    # Calculate the accuracy of the model
    accuracy = accuracy_score(y_test, y_pred)

    # Print the accuracy
    print(f'Accuracy: {accuracy}')

    # Print the confusion matrix
    print(f'Confusion Matrix: \n{confusion_matrix(y_test, y_pred)}')
    ```
    Replace 'your_data.csv' with the path to your actual data file, and 'target_column' with the name of the column in your data that you want to predict.

    This script will train a logistic regression model on your data, make predictions, calculate the accuracy of the model, and print the confusion matrix.

    Please note that this is a basic example and may need to be adjusted based on the specifics of your data and problem.
