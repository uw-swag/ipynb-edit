```python
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import classification_report, confusion_matrix
    from sklearn.model_selection import GridSearchCV

    # Load the data
    df = pd.read_csv('data.csv')

    # Split the data into features and target variable
    X = df.drop("target", axis=1)
    y = df["target"]

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Standardize the features
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Define the model
    model = RandomForestClassifier()

    # Define the parameter grid
    param_grid = {
        'n_estimators': [100, 200, 300, 400, 500],
        'max_depth': [None, 10, 20, 30, 40, 50],
        'min_samples_split': [2, 5, 10]
    }

    # Perform grid search
    grid_search = GridSearchCV(model, param_grid, cv=5)
    grid_search.fit(X_train, y_train)

    # Print the best parameters
    print("Best parameters: ", grid_search.best_params_)

    # Make predictions
    y_pred = grid_search.predict(X_test)

    # Print the classification report
    print(classification_report(y_test, y_pred))

    # Print the confusion matrix
    print(confusion_matrix(y_test, y_pred))

    # Save the