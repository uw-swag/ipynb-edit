```python
    import pandas as pd
import numpy as np
from sklearn.ensemble import AdaBoostClassifier
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from deepchecks.checks.performance import NaiveModelComparison
from deepchecks.base import Dataset
np.random.seed(42)

iris = load_iris(as_frame=True)
x = iris.data
y = iris.target
x_train, x_test, y_train, y_test = train_test_split(
    x, y, test_size=0.33, random_state=42)
train_ds = Dataset(pd.concat([x_train, y_train], axis=1),
                   features=iris.feature_names,
                   label='target')
val_ds = Dataset(pd.concat([x_test, y_test], axis=1),
                 features=iris.feature_names,
                 label='target')
clf = AdaBoostClassifier()
_ = clf.fit(x_train, y_train)
check = NaiveModelComparison(naive_model_type='random')
check.run(train_ds, val_ds, clf)
check = NaiveModelComparison(naive_model_type='statistical')
check.run(train_ds, val_ds, clf)

    # Add the "tree" option to simple model comparison
    check = NaiveModelComparison(naive_model_type='simple')
    check.run(train_ds, val_ds, clf)
    ```
