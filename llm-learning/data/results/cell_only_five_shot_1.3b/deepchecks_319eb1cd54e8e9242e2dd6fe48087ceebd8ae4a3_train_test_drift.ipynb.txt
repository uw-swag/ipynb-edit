```python
    class Dataset:
        def __init__(self, df, label):
            self.df = df
            self.label = label

        @property
        def features_columns(self):
            return self.df.drop(columns=[self.label]).columns.tolist()

        @property
        def label_column(self):
            return self.label

        @property
        def num_samples(self):
            return self.df.shape[0]

    label = np.random.randint(0, 2, size=(df_train.shape[0],))
    df_train['target'] = label
    train_dataset = Dataset(df_train, label='target')

    model.fit(train_dataset.features_columns, train_dataset.label_column)

    label = np.random.randint(0, 2, size=(df_test.shape[0],))
    df_test['target'] = label
    test_dataset = Dataset(df_test, label='target')

    model.evaluate(test_dataset.features_columns, test_dataset.label_column)
    ```
