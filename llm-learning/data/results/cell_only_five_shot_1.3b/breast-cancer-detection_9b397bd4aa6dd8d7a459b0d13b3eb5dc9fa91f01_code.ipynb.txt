```python
    # Tune the hyperparameters of the KNN classifier
    from sklearn.model_selection import GridSearchCV

    # Define the hyperparameter grid
    param_grid = [
        {'n_neighbors': [3, 5, 11, 19], 'metric': ['minkowski', 'euclidean', 'manhattan'], 'p': [1, 2, 3]},
        {'weights': ['uniform', 'distance']}
    ]

    # Perform a grid search over the hyperparameter grid
    grid_search = GridSearchCV(knn_classifier2, param_grid, cv=5)
    grid_search.fit(X_train_sc, y_train)

    # Print the best parameters and the best score
    print("Best parameters: ", grid_search.best_params_)
    print("Best score: ", grid_search.best_score_)

    # Use the best estimator to make predictions on the test set
    y_pred_knn_tuned = grid_search.best_estimator_.predict(X_test_sc)
    y_pred_knn_tuned
    ```

    This code will tune the hyperparameters of the KNN classifier and then use the best parameters to make predictions on the test set.
