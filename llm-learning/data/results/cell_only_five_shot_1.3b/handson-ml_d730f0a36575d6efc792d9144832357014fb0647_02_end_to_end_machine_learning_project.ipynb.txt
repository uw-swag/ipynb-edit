```python
    # To support both python 2 and python 3
    from __future__ import division, print_function, unicode_literals

    # Common imports
    import numpy as np
    import os

    # to make this notebook's output stable across runs
    np.random.seed(42)

    # To plot pretty figures
    %matplotlib inline
    import matplotlib as mpl
    import matplotlib.pyplot as plt
    mpl.rc('axes', labelsize=14)
    mpl.rc('xtick', labelsize=12)
    mpl.rc('ytick', labelsize=12)

    # Where to save the figures
    PROJECT_ROOT_DIR = "."
    CHAPTER_ID = "end_to_end_project"
    IMAGES_PATH = os.path.join(PROJECT_ROOT_DIR, "images", CHAPTER_ID)

    def save_fig(fig_id, tight_layout=True, fig_extension="png", resolution=300):
        path = os.path.join(IMAGES_PATH, fig_id + "." + fig_extension)
        print("Saving figure", fig_id)
        if tight_layout:
            plt.tight_layout()
        plt.savefig(path, format=fig_extension, dpi=resolution)

    # Ignore useless warnings (see SciPy issue #5998)
    import warnings
    warnings.filterwarnings(action="ignore", message="^internal gelsd")

    # Importing the Kaggle Digit MNIST dataset
    from kaggle.api.kaggle_api_extended import KaggleApi
    api = KaggleApi()
    api.authenticate()
    api.dataset_download_files('moltean/digit-recognizer', path='./data', unzip=True)

    # Importing the handson-ml2 library
    import handson_ml2
    from handson_ml2.concepts import preprocessing_pipeline
    from hand