```python
    from __future__ import division
    from __future__ import print_function
    from __future__ import unicode_literals

    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn import datasets
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler
    from sklearn.neural_network import MLPClassifier
    from sklearn.metrics import confusion_matrix
    from sklearn.metrics import accuracy_score

    # Load iris dataset
    iris = datasets.load_iris()
    X = iris.data
    y = iris.target

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Standardize the features to have mean=0 and variance=1
    sc = StandardScaler()
    sc.fit(X_train)
    X_train_std = sc.transform(X_train)
    X_test_std = sc.transform(X_test)

    # Train a neural network classifier
    mlp = MLPClassifier(hidden_layer_sizes=(10, 10, 10), max_iter=1000)
    mlp.fit(X_train_std, y_train)

    # Make predictions
    y_pred = mlp.predict(X_test_std)

    # Print the confusion matrix
    print(confusion_matrix(y_test, y_pred))

    # Print the accuracy
    print('Accuracy: ', accuracy_score(y_test, y_pred))
    ```
