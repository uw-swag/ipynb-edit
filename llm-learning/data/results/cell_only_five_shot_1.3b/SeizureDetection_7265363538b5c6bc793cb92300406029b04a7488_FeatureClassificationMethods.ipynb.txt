```python
    import numpy as np
import pandas as pd
from sklearn import naive_bayes, neighbors, svm
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import StandardScaler

# Load the dataset
data = pd.read_csv('data.csv')

# Split the dataset into features and target variable
X = data.drop("target_column", axis=1)
y = data["target_column"]

# Standardize the features
sc = StandardScaler()
X = sc.fit_transform(X)

# Split the dataset into training set and test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Decision Tree Classifier
clf = svm.SVC(kernel='linear', C=1.0)

# Train the model
clf.fit(X_train, y_train)

# Predict the response for test dataset
y_pred = clf.predict(X_test)

# Model Accuracy
print("Accuracy:", accuracy_score(y_test, y_pred))
    ```
