```python
    import pandas as pd
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sqlalchemy import create_engine
    from sklearn.preprocessing import StandardScaler
    from sklearn.decomposition import PCA
    from sklearn.cluster import KMeans
    from sklearn.metrics import silhouette_score

    # Load the data
    engine = create_engine('postgresql://username:password@localhost:5432/db2eventstore')
    df = pd.read_sql_query("SELECT * FROM IoT_Analytics", engine)

    # Data preprocessing
    df = df.dropna()
    df = pd.get_dummies(df)

    # Standardizing the features
    sc = StandardScaler()
    df = sc.fit_transform(df)

    # Applying PCA
    pca = PCA(n_components=2)
    df = pca.fit_transform(df)

    # Finding the optimal number of clusters
    wcss = []
    for i in range(1, 11):
        kmeans = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=0)
        kmeans.fit(df)
        wcss.append(kmeans.inertia_)
    plt.plot(range(1, 11), wcss)
    plt.title('The Elbow Method')
    plt.xlabel('Number of clusters')
    plt.ylabel('WCSS')
    plt.show()

    # Applying KMeans
    kmeans = KMeans(n_clusters=3, init='k-means++', max_iter=300, n_init=10, random_state=0)
    df_kmeans = kmeans.fit_predict(df)

    # Visualizing the clusters
    plt.scatter(df[0], df[1], c=df_kmeans, cmap='vir