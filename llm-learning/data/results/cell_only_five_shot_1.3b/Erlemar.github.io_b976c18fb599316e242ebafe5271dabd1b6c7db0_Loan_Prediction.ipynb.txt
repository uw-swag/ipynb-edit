
    # Import necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import accuracy_score
    from sklearn.preprocessing import StandardScaler

    # Load the dataset
    df = pd.read_csv('loan_data.csv')

    # Preprocess the data
    df = df.dropna()

    # Define features and target
    X = df.drop('Loan_Status', axis=1)
    y = df['Loan_Status']

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Standardize the features
    sc = StandardScaler()
    X_train = sc.fit_transform(X_train)
    X_test = sc.transform(X_test)

    # Train a logistic regression model
    model = LogisticRegression()
    model.fit(X_train, y_train)

    # Make predictions
    y_pred = model.predict(X_test)

    # Evaluate the model
    accuracy = accuracy_score(y_test, y_pred)
    print(f'Accuracy: {accuracy}')

    # Save the model
    import joblib
    joblib.dump(model, 'loan_prediction_model.pkl')

    # Load the model
    loaded_model = joblib.load('loan_prediction_model.pkl')

    # Use the model to predict loan status
    new_loan = [[0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 