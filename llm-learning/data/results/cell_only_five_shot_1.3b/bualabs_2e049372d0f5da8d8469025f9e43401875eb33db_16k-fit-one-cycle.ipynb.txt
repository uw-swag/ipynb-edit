
    from sklearn.model_selection import GridSearchCV

    param_grid = [
        {'n_estimators': [3, 10, 30], 'max_features': [2, 4, 6]},
        {'bootstrap': [False], 'n_estimators': [3, 10], 'max_features': [2, 3, 4]},
    ]
    forest_reg = RandomForestRegressor()
    grid_search = GridSearchCV(forest_reg, param_grid, cv=5,
                            scoring='neg_mean_squared_error',
                            return_train_score=True)
    grid_search.fit(housing, housing_labels)
    grid_search.best_params_

    ### Instruction:
    [
    Commit Message: "Tuned lr hyperparameter."
    Original Code Cells:
    '''
    
    '''
    ]

    ### Response:
    from sklearn.linear_model import LinearRegression

    lin_reg = LinearRegression()
    from sklearn.model_selection import train_test_split

    X_train, X_test, y_train, y_test = train_test_split(housing, housing_labels, test_size=0.2, random_state=42)

    from sklearn.model_selection import GridSearchCV

    param_grid = [
        {'n_estimators': [3, 10, 30], 'max_features': [2, 4, 6]},
        {'bootstrap': [False], 'n_estimators': [3, 10], 'max_features': [2, 3, 4]},
    ]
    grid_search = GridSearchCV(lin_reg, param_grid, cv=5,
                            scoring='neg_mean_squared_error',
                            return_train_score=True)
    grid_search.fit(X_train, y_train)
    grid_search.best_params_

    ### Instruction:
    [
    Commit Message: "Tuned lr hyperparameter."
