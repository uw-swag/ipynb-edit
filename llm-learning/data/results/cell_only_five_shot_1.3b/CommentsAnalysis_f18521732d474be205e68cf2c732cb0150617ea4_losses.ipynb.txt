
    '''
    from sklearn.ensemble import RandomForestRegressor

    # Define the model. Set random_state to 1
    rf_model = RandomForestRegressor(random_state=1)

    # fit your model
    rf_model.fit(X_train, y_train)

    # Calculate the mean absolute error of your Random Forest model on the validation data
    rf_val_mae = mean_absolute_error(y_val, rf_model.predict(X_val))

    print("Validation MAE for Random Forest Model: {}".format(rf_val_mae))

    # step_1.check()

    '''

    '''
    from sklearn.ensemble import RandomForestRegressor

    # Define the model. Set random_state to 1
    rf_model = RandomForestRegressor(random_state=1)

    # fit your model
    rf_model.fit(X_train, y_train)

    # Calculate the mean absolute error of your Random Forest model on the validation data
    rf_val_mae = mean_absolute_error(y_val, rf_model.predict(X_val))

    print("Validation MAE for Random Forest Model: {}".format(rf_val_mae))

    # step_1.check()

    '''

    '''
    from sklearn.ensemble import RandomForestRegressor

    # Define the model. Set random_state to 1
    rf_model = RandomForestRegressor(random_state=1)

    # fit your model
    rf_model.fit(X_train, y_train)

    # Calculate the mean absolute error of your Random Forest model on the validation data
    rf_val_mae = mean_absolute_error(y_val, rf_model.predict(X_val))

    print("Validation MAE for Random Forest Model: {}".format(rf_val_mae))

    # step_1.check()

    '''

    '''
    from sklearn