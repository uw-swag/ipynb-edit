```
    ## This code cell will not be shown in the HTML version of this notebook
    ## Adding human activity recognition notebook

    ## Import necessary libraries
    import pandas as pd
    import numpy as np
    from sklearn.preprocessing import LabelEncoder
    from sklearn.model_selection import train_test_split
    from keras.models import Sequential
    from keras.layers import Dense, Dropout
    from keras.utils.np_utils import to_categorical

    ## Load the dataset
    data = pd.read_csv('../data/Pokemon.csv')

    ## Preprocess the data
    ## We'll use LabelEncoder to convert categorical data to numerical
    le = LabelEncoder()
    for column in data.columns:
        if data[column].dtype == type(object):
            data[column] = le.fit_transform(data[column])

    ## Split the data into features and labels
    X = data.iloc[:, 5:11]
    y = data.iloc[:, 2]

    ## Convert labels to categorical
    y = to_categorical(y)

    ## Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    ## Define the model
    model = Sequential()
    model.add(Dense(128, input_dim=X_train.shape[1], activation='relu'))
    model.add(Dropout(0.5))
    model.add(Dense(64, activation='relu'))
    model.add(Dropout(0.5))
    model.add(Dense(y_train.shape[1], activation='softmax'))

    ## Compile the model
    model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

    ## Train the model
    model.fit