```python
    # Import necessary libraries
    import numpy as np
    import matplotlib.pyplot as plt
    from scipy.stats import norm
    from scipy.optimize import minimize
    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    from sklearn.tree import DecisionTreeClassifier
    from sklearn.metrics import accuracy_score
    from sklearn.metrics import confusion_matrix
    from sklearn.metrics import classification_report

    # Load the iris dataset
    iris = load_iris()

    # Split the dataset into training set and test set
    X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.3, random_state=1)

    # Create a Decision Tree Classifier
    clf = DecisionTreeClassifier()

    # Train the model using the training sets
    clf.fit(X_train, y_train)

    # Predict the response for test dataset
    y_pred = clf.predict(X_test)

    # Model Accuracy
    print("Accuracy:", accuracy_score(y_test, y_pred))

    # Confusion Matrix
    print("Confusion Matrix:")
    print(confusion_matrix(y_test, y_pred))

    # Classification Report
    print("Classification Report:")
    print(classification_report(y_test, y_pred))

    # Visualize the decision tree
    from sklearn.tree import plot_tree
    import matplotlib.pyplot as plt

    plt.figure(figsize=(15,10))
    plot_tree(clf, filled=True)
    plt.show()
    ```
