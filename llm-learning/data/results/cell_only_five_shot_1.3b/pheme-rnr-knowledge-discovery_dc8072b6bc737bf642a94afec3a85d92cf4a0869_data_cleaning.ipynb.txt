
Here is the updated code with some classifiers added:

```python
# Load dependencies for this Jupyter Notebook
import pandas as pd
import numpy as np
from functools import reduce
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE, Isomap
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.ensemble import RandomForestClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.linear_model import LogisticRegression
import matplotlib.pyplot as plt

# Load the data
ottawa_threads_values=ottawa_threads.values
n,d=ottawa_threads_values.shape
ottawa_threads_values=convertTrueFalseTo01(ottawa_threads_values[:,1:d])
n,d=ottawa_threads_values.shape

ottawa_threads_rumortags_values=convertTrueFalseTo01(ottawa_threads_rumortags.values)
print(ottawa_threads_rumortags_values.shape)

# Standardize the data
ottawa_threads_values,_,_=standardize_cols(ottawa_threads_values.astype(float))

# Apply PCA
model=PCA(n_components=2)
model.fit(ottawa_threads_values)
Z_PCA=model.transform(ottawa_threads_values)
plt.figure()
plt.title("PCA")
plt.scatter(Z_PCA[:,0],Z_PCA[:,1],c=ottawa_threads_rumortags_values)
plt.show()

# Apply KMeans
kmeans = KMeans(n_clusters=3, random_state=0).fit(Z_PCA)
plt.figure()
plt.scatter(Z_PCA[:,0],Z_PCA[:,1],c