```python
    import torch

    class MultilayerPerceptron(torch.nn.Module):
        def __init__(self, input_size, hidden_size, num_classes):
            super(MultilayerPerceptron, self).__init__()
            self.fc1 = torch.nn.Linear(input_size, hidden_size) 
            self.relu = torch.nn.ReLU()
            self.fc2 = torch.nn.Linear(hidden_size, num_classes)  
        
        def forward(self, x):
            out = self.fc1(x)
            out = self.relu(out)
            out = self.fc2(out)
            return out

    # Define the model
    model = MultilayerPerceptron(input_size, hidden_size, num_classes)

    # Loss and optimizer
    criterion = torch.nn.CrossEntropyLoss()
    optimizer = torch.optim.SGD(model.parameters(), lr=0.01)
    ```
