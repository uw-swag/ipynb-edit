# K-Means Clustering

# Importing the libraries
# Importing the cars.csv dataset

#print first 10 rows of X


#construct X


# X = pd.DataFrame(X)
# X = X.convert_objects(convert_numeric=True)

#allot column names to X
#print first 5 rows of X
#describe X
# Eliminating null values
# Using the elbow method to find  the optimal number of clusters

#import kmeans 


wcss = []
for i in range(1,11):
    #initialise k means instance
    
    #fit the data
    
    
    wcss.append(kmeans.inertia_)
    
#plot cluster vs wcss
# Applying k-means to the cars dataset
kmeans = KMeans(n_clusters=3,init='k-means++',max_iter=300,n_init=10,random_state=0) 
y_kmeans = kmeans.fit_predict(X)

X = X.as_matrix(columns=None)
y_kmeans
# Visualising the clusters
plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0,1],s=100,c='red',label='US')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1,1],s=100,c='blue',label='Japan')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2,1],s=100,c='green',label='Europe')
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of car brands')
plt.legend()
plt.show()

