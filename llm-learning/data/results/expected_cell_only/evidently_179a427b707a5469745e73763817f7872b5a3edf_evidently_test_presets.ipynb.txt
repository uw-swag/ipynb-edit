#Dataset for Binary Probabilistic Classifcation
bcancer_data = datasets.load_breast_cancer(as_frame='auto')
bcancer = bcancer_data.frame

bcancer_ref = bcancer.sample(n=300, replace=False)
bcancer_cur = bcancer.sample(n=200, replace=False)

bcancer_label_ref = bcancer_ref.copy(deep=True)
bcancer_label_cur = bcancer_cur.copy(deep=True)

model = ensemble.RandomForestClassifier(random_state=1, n_estimators=10)
model.fit(bcancer_ref[bcancer_data.feature_names.tolist()], bcancer_ref.target)

bcancer_ref['prediction'] = model.predict_proba(bcancer_ref[bcancer_data.feature_names.tolist()])[:, 1]
bcancer_cur['prediction'] = model.predict_proba(bcancer_cur[bcancer_data.feature_names.tolist()])[:, 1]

bcancer_label_ref['prediction'] = model.predict(bcancer_label_ref[bcancer_data.feature_names.tolist()])
bcancer_label_cur['prediction'] = model.predict(bcancer_label_cur[bcancer_data.feature_names.tolist()])
data_drift = TestSuite(tests=[
    DataDriftTestPreset(stattest='psi'),
])

data_drift.run(reference_data=adult_ref, current_data=adult_cur)
data_drift
no_target_performance = TestSuite(tests=[
    NoTargetPerformanceTestPreset(columns=['education-num', 'hours-per-week'],  num_stattest='ks', cat_stattest='psi'),
])

no_target_performance.run(reference_data=adult_ref, current_data=adult_cur)
no_target_performance
classification_performance = TestSuite(tests=[
   MulticlassClassificationTestPreset(prediction_type='labels', stattest='psi')
])

classification_performance.run(reference_data=iris_ref, current_data=iris_cur)
classification_performance
label_binary_classification_performance = TestSuite(tests=[
    BinaryClassificationTestPreset(prediction_type='labels'),
])

label_binary_classification_performance.run(reference_data=bcancer_label_ref, current_data=bcancer_label_cur)
label_binary_classification_performance
prob_binary_classification_performance = TestSuite(tests=[
    BinaryClassificationTestPreset(prediction_type='probas', stattest='psi', probas_threshold=0.89),
])

prob_binary_classification_performance.run(reference_data=bcancer_ref, current_data=bcancer_cur)
prob_binary_classification_performance
binary_topK_classification_performance = TestSuite(tests=[
    BinaryClassificationTopKTestPreset(k=10, stattest='psi'),
])

binary_topK_classification_performance.run(reference_data=bcancer_ref, current_data=bcancer_cur)
binary_topK_classification_performance
