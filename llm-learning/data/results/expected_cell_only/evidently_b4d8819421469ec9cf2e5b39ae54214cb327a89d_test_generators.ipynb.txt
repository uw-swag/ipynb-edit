import numpy as np
from sklearn.datasets import fetch_openml


data = fetch_openml(name='adult', version=2, as_frame='auto')
data.frame['target'] = data.frame['education-num']
data.frame['preds'] = data.frame['education-num'].values + np.random.normal(0, 6, data.frame.shape[0])
reference_data = data.frame[:20000]
current_data = data.frame[20000:]
from evidently.tests import TestValueQuantile
from evidently.test_suite import TestSuite


suite = TestSuite(tests=[
    TestValueQuantile(column_name="education-num", quantile=quantile) for quantile in [0.5, 0.9, 0.99]
])

suite.run(current_data=current_data, reference_data=reference_data)
suite
from evidently.tests import TestFeatureValueMin


# test that values in specified columns are positive (greater than zero condition)
suite = TestSuite(tests=[
    TestFeatureValueMin(column_name=column_name, gt=0) for column_name in ["age", "fnlwgt", "education-num"]
])

suite.run(current_data=current_data, reference_data=reference_data)
suite
from evidently.tests.base_test import generate_column_tests

from evidently.tests import TestColumnNANShare

suite = TestSuite(tests=[generate_column_tests(TestColumnNANShare)])
suite.run(current_data=current_data, reference_data=reference_data)
suite.show()
# set condition for all generated tests and specify that we want to generate tests for all columns explicitly
suite = TestSuite(tests=[generate_column_tests(TestColumnNANShare, columns="all", parameters={"lt": 0.5})])
suite.run(current_data=current_data, reference_data=reference_data)
suite.show()
suite = TestSuite(tests=[generate_column_tests(TestFeatureValueMin, columns="num")])
suite.run(current_data=current_data, reference_data=reference_data)
suite.show()
suite = TestSuite(tests=[generate_column_tests(TestColumnNANShare, columns="cat", parameters={"lt": 0.1})])
suite.run(current_data=current_data, reference_data=reference_data)
suite.show()
suite = TestSuite(tests=[generate_column_tests(TestFeatureValueMin, columns=["age", "fnlwgt", "education-num"], parameters={"gt": 0})])
suite.run(current_data=current_data, reference_data=reference_data)
suite.show()

