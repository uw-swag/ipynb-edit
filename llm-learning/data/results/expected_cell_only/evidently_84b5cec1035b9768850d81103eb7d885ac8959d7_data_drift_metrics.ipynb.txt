import pandas as pd
import numpy as np

from sklearn.datasets import fetch_openml
# load "adult" dataset
data = fetch_openml(name='adult', version=2, as_frame='auto')
df = data.frame

# prepare target and prediction
df['target'] = df['education-num']
df['prediction'] = df['education-num'].values + np.random.normal(0, 6, df.shape[0])

# make reference and current datasets
reference_data = df[~df.education.isin(['Some-college', 'HS-grad', 'Bachelors'])]
current_data = df[df.education.isin(['Some-college', 'HS-grad', 'Bachelors'])]
current_data.head()
from evidently.metrics import ColumnDriftMetric
from evidently.report import Report

report = Report(metrics=[ColumnDriftMetric(column_name="class")])
report.run(current_data=current_data, reference_data=reference_data)
report
report.json()
report = Report(metrics=[ColumnDriftMetric(column_name="target")])
report.run(current_data=current_data, reference_data=reference_data)
report
report.json()
from evidently.metrics import DataDriftTable


report = Report(metrics=[DataDriftTable()])
report.run(current_data=current_data, reference_data=reference_data)
report
report.json()
from evidently.metrics import DatasetDriftMetric

report = Report(metrics=[DatasetDriftMetric()])
report.run(current_data=current_data, reference_data=reference_data)
report
report = Report(metrics=[DatasetDriftMetric(threshold=0.4)])
report.run(current_data=current_data, reference_data=reference_data)
report

