<Cell_0>
import os
import sys, getopt
import signal
import numpy as np
from edge_impulse_linux.runner import ImpulseRunner

model_file_name = 'modelfile.eim'
runner = None
dir_path = os.path.dirname(os.path.realpath(model_file_name))
modelfile = os.path.join(dir_path, model_file_name)
modelfile
<\Cell_0>
<Cell_1>
# Add the files you want to upload to Edge Impulse
files = ['float_wave_test_raw.wav']
audio_file = files[0] #save the first one

# Creating the data payload for the request.
files=(('data', (os.path.basename(i), open(i, 'rb'), 'audio/wav')) for i in files)
audio_file
<\Cell_1>
<Cell_2>
runner = None

# Add the files you want to upload to Edge Impulse
files = ['float_wave_test_raw.wav']
audio_file = files[0] #save the first one

# Creating the data payload for the request.
files=(('data', (os.path.basename(i), open(i, 'rb'), 'audio/wav')) for i in files)
audio_file

model_file_name = 'modelfile.eim'

dir_path = os.path.dirname(os.path.realpath(model_file_name))
modelfile = os.path.join(dir_path, model_file_name)
full_audio_file = os.path.join(dir_path, audio_file)

full_audio_file
files=(('data', (os.path.basename(i), open(i, 'rb'), 'audio/wav')) for i in files)
files
<\Cell_2>
<Cell_3>
from scipy.io import wavfile
samplerate, generator = wavfile.read(full_audio_file)

features = np.array([], dtype=np.int16)
runner = ImpulseRunner(modelfile)

model_info = runner.init()
labels = model_info['model_parameters']['labels']
window_size = model_info['model_parameters']['input_features_count']
sampling_rate = model_info['model_parameters']['frequency']
print('Loaded runner for "' + model_info['project']['owner'] + ' / ' + model_info['project']['name'] + '"')
print(labels)
print(window_size)
print(sampling_rate)
<\Cell_3>
<Cell_4>
samplerate, generator = wavfile.read(full_audio_file)
features = np.concatenate((features, generator), axis=0)
res = runner.classify(features[:window_size].tolist())
res
<\Cell_4>
