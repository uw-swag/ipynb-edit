<Cell_0>
try:
    import evidently
except:
    !pip install git+https://github.com/evidentlyai/evidently.git
<\Cell_0>
<Cell_1>
import pandas as pd
import numpy as np

from sklearn import datasets

from evidently import ColumnMapping
from evidently.report import Report
from evidently.test_suite import TestSuite
from evidently.metric_preset import DataDriftPreset
from evidently.test_preset import DataDriftTestPreset
from evidently.core import AllDict
<\Cell_1>
<Cell_2>
data = datasets.fetch_california_housing(as_frame=True)
housing_data = data.frame

housing_data.rename(columns={'MedHouseVal': 'target'}, inplace=True)
housing_data['prediction'] = housing_data['target'].values + np.random.normal(0, 5, housing_data.shape[0])
<\Cell_2>
<Cell_3>
reference = housing_data.sample(n=5000, replace=False)
current = housing_data.sample(n=5000, replace=False)
current.iloc[:20, 3:5] = np.nan
<\Cell_3>
<Cell_4>
report = Report(metrics=[
    DataDriftPreset(), 
])

report.run(reference_data=reference, current_data=current)
report.json()
<\Cell_4>
<Cell_5>
report.json(include_render=False)
<\Cell_5>
<Cell_6>
# specify what to include in dict/json

report.as_dict(include={
    "DataDriftTable": {
        "drift_by_columns":{
            "target":{
                "column_name", "column_type", "drift_score"
            }}}})
<\Cell_6>
<Cell_7>
# specify what to include in dict/json, use True to include all the fields for a dictionary

report.as_dict(include={"DataDriftTable":{"drift_by_columns":{"target":True}}})
<\Cell_7>
<Cell_8>
# specify what to include in dict/json, use AllDict to apply filters to column-based results

report.as_dict(include={
    "DataDriftTable": {
        "drift_by_columns":AllDict({
                "column_name", "column_type", "drift_score"
            })}},
              exclude={"DataDriftTable": {"drift_by_columns":AllDict({
                 "column_type"
            })}})
<\Cell_8>
<Cell_9>
# specify what to include in dict/json, combine include and exclude

report.as_dict(
    include={"DatasetDriftMetric": {"share_of_drifted_columns"}},
    exclude={"DataDriftTable":{"drift_by_columns"}}
)
<\Cell_9>
<Cell_10>
# TestSuites support include in dict/json as well

test_suite = TestSuite(tests=[
    DataDriftTestPreset(),
])

test_suite.run(reference_data=reference, current_data=current)
test_suite
<\Cell_10>
<Cell_11>
test_suite.as_dict(exclude={"TestColumnDrift":{"parameters":True}})
<\Cell_11>
<Cell_12>
test_suite.as_dict(
    exclude={"TestColumnDrift":{"parameters":True}},
    include={"TestShareOfDriftedColumns":{"name", "status"}}
)
<\Cell_12>
