<Cell_0>
from redpitaya.overlay.mercury import mercury as overlay
import IPython.display as ipd
import matplotlib.pyplot as plt

#Audio processing requirements
import numpy as np
from scipy.io.wavfile import write

#Edge Impulse requirements
import json
import time, hmac, hashlib
import requests
import re, socket
import math

fpga = overlay()
<\Cell_0>
<Cell_1>
in2 = fpga.osc(1, 1.0)
<\Cell_1>
<Cell_2>
# data rate decimation 
in2.decimation = 41667 #125 Msps / 41667 = 30 Ksps

# trigger timing [sample periods]
N = in2.buffer_size
in2.trigger_pre  = 0
in2.trigger_post = N

# disable hardware trigger sources - the Jupyter notebook will trigger the start of audio recording
in2.trig_src = 0
<\Cell_2>
<Cell_3>
# synchronization and trigger sources are the default,
# which is the module itself
in2.reset()
in2.start()
in2.trigger()
# wait for data
while (in2.status_run()): pass
print ('Recording complete')
data = in2.data(N)
<\Cell_3>
<Cell_4>
sr = 3000 # sample rate 3 Ksps
ipd.Audio(data, rate=sr) # load a NumPy array
<\Cell_4>
<Cell_5>
# show the part of the buffer requested by pre/post trigger timing - in this example the whole buffer.

plt.plot(data)
plt.show()
<\Cell_5>
<Cell_6>
write("float_wave_test_raw.wav", sr, data)
<\Cell_6>
<Cell_7>
# Install requests via: `pip3 install requests`
import requests
import os
from app_key import * #Import personal keys for the Edge Impulse project

# Add the files you want to upload to Edge Impulse
files = [
    'float_wave_test_raw.wav']
# # Replace the label with your own.
label = 'audio-test'
# Upload the file to Edge Impulse using the API, and print the response.
res = requests.post(url='https://ingestion.edgeimpulse.com/api/training/files',
                    headers={
                        'x-label': label,
                        'x-api-key': api_key,
                    },
                    # Creating the data payload for the request.
                    files=(('data', (os.path.basename(i), open(
                        i, 'rb'), 'audio/wav')) for i in files)
                    )

if (res.status_code == 200):
    print('Uploaded file(s) to Edge Impulse\n', res.status_code, res.content)
else:
    print('Failed to upload file(s) to Edge Impulse\n',
          res.status_code, res.content)
<\Cell_7>
<Cell_8>

<\Cell_8>
