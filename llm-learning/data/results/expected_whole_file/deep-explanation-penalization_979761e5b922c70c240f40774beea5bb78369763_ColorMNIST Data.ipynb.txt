<Cell_0>

import torch
import torchvision
import torchvision.datasets as datasets
import sys
import numpy as np
import torch.utils.data as utils
import torch
from torch.utils.data import DataLoader
from torchvision import datasets, transforms
sys.path.append("../../Dataset-REPAIR")
from utils.datasets import ColoredDataset
import pickle as pkl

from os.path import join as oj
import matplotlib.pyplot as plt
%matplotlib inline
<\Cell_0>
<Cell_1>
save_path = "../results_for_export"
<\Cell_1>
<Cell_2>
from colour import Color
red = Color("red")
colors = list(red.range_to(Color("purple"),10))
colors = [x.get_rgb() for x in colors]
<\Cell_2>
<Cell_3>
colors = np.asarray(colors)[:,:, None, None]

<\Cell_3>
<Cell_4>
x_train = np.load(oj("../data/ColorMNIST", "train_x.npy"))/255.0
y_train = np.load(oj("../data/ColorMNIST", "train_y.npy"))
<\Cell_4>
<Cell_5>
x_test = np.load(oj("../data/ColorMNIST", "test_x.npy"))/255.0
y_test = np.load(oj("../data/ColorMNIST", "test_y.npy"))
<\Cell_5>
<Cell_6>
fig, axes = plt.subplots(nrows= 2, figsize = (20, 6))
indices = []
for i in range(10):
    indices.append(np.where(y_train ==i)[0][0])
ex_imgs = np.hstack(x_train[np.asarray(indices)].swapaxes(1,3).swapaxes(1,2)) 

axes[0].imshow(ex_imgs);
axes[0].set_title("Training set", fontsize = 30,loc  = 'left')
indices = []
for i in range(10):
    indices.append(np.where(y_test ==i)[0][0])
ex_imgs = np.hstack(x_test[np.asarray(indices)].swapaxes(1,3).swapaxes(1,2)) 

axes[1].imshow(ex_imgs);
axes[1].set_xticks([])
axes[1].set_yticks([])
axes[0].set_xticks([])
axes[0].set_yticks([])
axes[1].set_title("Test set", fontsize = 30,loc  = 'left')
fig.savefig(oj(save_path, "ColorMNIST_examples"))

<\Cell_6>
<Cell_7>
x_train = np.load(oj("../data/ColorMNIST", "train_x.npy"))
y_train = np.load(oj("../data/ColorMNIST", "train_y.npy"))
<\Cell_7>
<Cell_8>

prob = ((x_train).sum(axis = 1)).mean(axis = 0)
<\Cell_8>
<Cell_9>
plt.imshow(prob)
<\Cell_9>
<Cell_10>

<\Cell_10>
