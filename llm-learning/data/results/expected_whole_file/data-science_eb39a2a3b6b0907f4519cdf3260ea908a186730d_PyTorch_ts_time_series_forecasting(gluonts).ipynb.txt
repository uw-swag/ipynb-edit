<Cell_0>
pip install pytorchts
<\Cell_0>
<Cell_1>
import matplotlib.pyplot as plt
import pandas as pd
import torch

from pts.dataset import ListDataset
from pts.model.deepar import DeepAREstimator
from pts import Trainer
from pts.dataset import to_pandas
<\Cell_1>
<Cell_2>
url = "https://raw.githubusercontent.com/numenta/NAB/master/data/realTweets/Twitter_volume_AMZN.csv"
df = pd.read_csv(url, header=0, index_col=0, parse_dates=True)
df.head()
<\Cell_2>
<Cell_3>
df[:100].plot(linewidth=2)
plt.grid(which='both')
plt.show()
<\Cell_3>
<Cell_4>
training_data = ListDataset(
    [{"start": df.index[0], "target": df.value[:"2015-04-05 00:00:00"]}],
    freq = "5min"
)
<\Cell_4>
<Cell_5>
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

estimator = DeepAREstimator(freq="5min",
                            prediction_length=12,
                            input_size=43,
                            trainer=Trainer(epochs=15,
                                            device=device))
predictor = estimator.train(training_data=training_data)
<\Cell_5>
<Cell_6>
test_data = ListDataset(
    [{"start": df.index[0], "target": df.value[:"2015-04-15 00:00:00"]}],
    freq = "5min"
)
<\Cell_6>
<Cell_7>
for test_entry, forecast in zip(test_data, predictor.predict(test_data)):
    to_pandas(test_entry)[-60:].plot(linewidth=2)
    forecast.plot(color='b', prediction_intervals=[50.0, 90.0])
plt.grid(which='both')
<\Cell_7>
<Cell_8>

<\Cell_8>
