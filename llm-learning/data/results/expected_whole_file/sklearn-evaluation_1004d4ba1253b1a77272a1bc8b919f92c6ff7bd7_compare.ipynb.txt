<Cell_0>
import matplotlib
from sklearn import datasets
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn_evaluation import plot
<\Cell_0>
<Cell_1>
matplotlib.rcParams["figure.figsize"] = (7, 7)
matplotlib.rcParams["font.size"] = 20
<\Cell_1>
<Cell_2>
# get training and testing data
X, y = datasets.make_classification(
    1000, 20, n_informative=10, class_sep=0.80, n_classes=3, random_state=0
)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)


def fit_and_plot(est):
    """Fit a model and return a confusion matrix
    """
    est.fit(X_train, y_train)
    y_pred = est.predict(X_test)
    return plot.ConfusionMatrix(y_test, y_pred, normalize=False)


# fit decision tree and random forest, return confusion matrices
tree, forest = [
    fit_and_plot(est) for est in [DecisionTreeClassifier(), RandomForestClassifier()]
]
<\Cell_2>
<Cell_3>
tree
<\Cell_3>
<Cell_4>
forest
<\Cell_4>
<Cell_5>
tree + forest
<\Cell_5>
<Cell_6>
forest - tree
<\Cell_6>
