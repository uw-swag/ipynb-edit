<Cell_0>
import matplotlib
from sklearn import datasets
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn_evaluation import plot
<\Cell_0>
<Cell_1>
matplotlib.rcParams["figure.figsize"] = (7, 7)
matplotlib.rcParams["font.size"] = 18
<\Cell_1>
<Cell_2>
# get training and testing data
X, y = datasets.make_classification(
    1000, 20, n_informative=10, class_sep=0.80, n_classes=3, random_state=0
)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)


# fit decision tree and random forest, return confusion matrices
tree_pred, forest_pred = [
    est.fit(X_train, y_train).predict(X_test)
    for est in [DecisionTreeClassifier(), RandomForestClassifier()]
]

tree_cm = plot.ConfusionMatrix(y_test, tree_pred, normalize=False)
forest_cm = plot.ConfusionMatrix(y_test, forest_pred, normalize=False)
<\Cell_2>
<Cell_3>
tree_cm
<\Cell_3>
<Cell_4>
forest_cm
<\Cell_4>
<Cell_5>
tree_cm + forest_cm
<\Cell_5>
<Cell_6>
forest_cm - tree_cm
<\Cell_6>
<Cell_7>
tree_cr = plot.ClassificationReport(y_test, tree_pred)
forest_cr = plot.ClassificationReport(y_test, forest_pred)
<\Cell_7>
<Cell_8>
tree_cr
<\Cell_8>
<Cell_9>
forest_cr
<\Cell_9>
<Cell_10>
tree_cr + forest_cr
<\Cell_10>
<Cell_11>
forest_cr - tree_cr
<\Cell_11>
